<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Terminal</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>dd command</title>
      <link>/posts/linux/command/2020-09-11-dd/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-11-dd/</guid>
      <description>linux의 dd 명령어를 통해 파일을 변환하거나 복사 할 수 있습니다.
기본 사용법 $&amp;gt; dd [OPERAND]... 응용  부팅 가능한 USB 만들기  $&amp;gt; sudo dd bs=4M if=archlinux-2020.09.01-x86_64.iso of=/dev/sdb status=progress oflag=sync 708837376 bytes (709 MB, 676 MiB) copied, 101.529 s, 7.0 MB/s 169+1 records in 169+1 records out 711983104 bytes (712 MB, 679 MiB) copied, 101.957 s, 7.0 MB/s TLDR $&amp;gt; tldr dd dd Convert and copy a file. - Make a bootable usb drive from an isohybrid file (such like archlinux-xxx.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;dd&lt;/code&gt; 명령어를 통해 파일을 변환하거나 복사 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; dd &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPERAND&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;부팅 가능한 USB 만들기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dd bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4M &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;archlinux-2020.09.01-x86_64.iso of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/sdb status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;progress oflag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sync
&lt;span style=&#34;color:#ae81ff&#34;&gt;708837376&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;709&lt;/span&gt; MB, &lt;span style=&#34;color:#ae81ff&#34;&gt;676&lt;/span&gt; MiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; copied, 101.529 s, 7.0 MB/s
169+1 records in
169+1 records out
&lt;span style=&#34;color:#ae81ff&#34;&gt;711983104&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;712&lt;/span&gt; MB, &lt;span style=&#34;color:#ae81ff&#34;&gt;679&lt;/span&gt; MiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; copied, 101.957 s, 7.0 MB/s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr dd

  dd

  Convert and copy a file.

  - Make a bootable usb drive from an isohybrid file &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;such like archlinux-xxx.iso&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; and show the progress:
    dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file.iso of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/usb_drive status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;progress

  - Clone a drive to another drive with 4MB block, ignore error and show progress:
    dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/source_drive of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/dest_drive bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4M conv&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;noerror status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;progress

  - Generate a file of &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; random bytes by using kernel random driver:
    dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/urandom of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;random_file bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

  - Benchmark the write performance of a disk:
    dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/zero of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file_1GB bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt;

  - Check progress of an ongoing dd operation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Run this command from another shell&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    kill -USR1 &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pgrep ^dd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; dd --help
Usage: dd &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPERAND&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
  or:  dd OPTION
Copy a file, converting and formatting according to the operands.

  bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BYTES        read and write up to BYTES bytes at a time
  cbs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BYTES       convert BYTES bytes at a time
  conv&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CONVS      convert the file as per the comma separated symbol list
  count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N         copy only N input blocks
  ibs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BYTES       read up to BYTES bytes at a time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: 512&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE         read from FILE instead of stdin
  iflag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FLAGS     read as per the comma separated symbol list
  obs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BYTES       write BYTES bytes at a time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: 512&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE         write to FILE instead of stdout
  oflag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FLAGS     write as per the comma separated symbol list
  seek&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N          skip N obs-sized blocks at start of output
  skip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N          skip N ibs-sized blocks at start of input
  status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LEVEL    The LEVEL of information to print to stderr;
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt; suppresses everything but error messages,
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;noxfer&amp;#39;&lt;/span&gt; suppresses the final transfer statistics,
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;progress&amp;#39;&lt;/span&gt; shows periodic transfer statistics

N and BYTES may be followed by the following multiplicative suffixes:
c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1, w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;512, kB &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000, K &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1024, MB &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000*1000, M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1024*1024, xM &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;M
GB &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000*1000*1000, G &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1024*1024*1024, and so on &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; T, P, E, Z, Y.

Each CONV symbol may be:

  ascii     from EBCDIC to ASCII
  ebcdic    from ASCII to EBCDIC
  ibm       from ASCII to alternate EBCDIC
  block     pad newline-terminated records with spaces to cbs-size
  unblock   replace trailing spaces in cbs-size records with newline
  lcase     change upper &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; to lower &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;
  ucase     change lower &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; to upper &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;
  sparse    try to seek rather than write the output &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; NUL input blocks
  swab      swap every pair of input bytes
  sync      pad every input block with NULs to ibs-size; when used
            with block or unblock, pad with spaces rather than NULs
  excl      fail &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the output file already exists
  nocreat   &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not create the output file
  notrunc   &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not truncate the output file
  noerror   &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt; after read errors
  fdatasync  physically write output file data before finishing
  fsync     likewise, but also write metadata

Each FLAG symbol may be:

  append    append mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;makes sense only &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; output; conv&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;notrunc suggested&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  direct    use direct I/O &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; data
  directory  fail unless a directory
  dsync     use synchronized I/O &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; data
  sync      likewise, but also &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; metadata
  fullblock  accumulate full blocks of input &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;iflag only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  nonblock  use non-blocking I/O
  noatime   &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not update access time
  nocache   Request to drop cache.  See also oflag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sync
  noctty    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not assign controlling terminal from file
  nofollow  &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not follow symlinks
  count_bytes  treat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;count=N&amp;#39;&lt;/span&gt; as a byte count &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;iflag only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  skip_bytes  treat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;skip=N&amp;#39;&lt;/span&gt; as a byte count &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;iflag only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  seek_bytes  treat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;seek=N&amp;#39;&lt;/span&gt; as a byte count &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;oflag only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Sending a USR1 signal to a running &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dd&amp;#39;&lt;/span&gt; process makes it
print I/O statistics to standard error and &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; resume copying.

Options are:

      --help     display this help and exit
      --version  output version information and exit

GNU coreutils online help: &amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
Full documentation at: &amp;lt;http://www.gnu.org/software/coreutils/dd&amp;gt;
or available locally via: info &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(coreutils) dd invocation&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>dmidecode command</title>
      <link>/posts/linux/command/2020-09-11-dmidecode/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-11-dmidecode/</guid>
      <description>linux의 dmidecode 명령어를 통해 DMI(SMBIOS) 정보를 출력해 줍니다.
기본 사용법 dmidecode 명령을 사용하려면 root 권한이 있어야 합니다.
$&amp;gt; sudo dmidecode | more # dmidecode 3.0 Getting SMBIOS data from sysfs. SMBIOS 2.7 present. 76 structures occupying 3048 bytes. Table at 0x000EB530. ... 응용 $&amp;gt; sudo dmidecode -t 0 # dmidecode 3.0 Getting SMBIOS data from sysfs. SMBIOS 2.7 present. Handle 0x0000, DMI type 0, 24 bytes BIOS Information Vendor: American Megatrends Inc.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;dmidecode&lt;/code&gt; 명령어를 통해 DMI(SMBIOS) 정보를 출력해 줍니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;dmidecode&lt;/code&gt; 명령을 사용하려면 &lt;code&gt;root&lt;/code&gt; 권한이 있어야 합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dmidecode | more
&lt;span style=&#34;color:#75715e&#34;&gt;# dmidecode 3.0&lt;/span&gt;
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.
&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt; structures occupying &lt;span style=&#34;color:#ae81ff&#34;&gt;3048&lt;/span&gt; bytes.
Table at 0x000EB530.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dmidecode -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# dmidecode 3.0&lt;/span&gt;
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.

Handle 0x0000, DMI type 0, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; bytes
BIOS Information
	Vendor: American Megatrends Inc.
	Version: F6
	Release Date: 08/03/2013
	Address: 0xF0000
	Runtime Size: &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; kB
	ROM Size: &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; kB
	Characteristics:
		PCI is supported
		BIOS is upgradeable
		BIOS shadowing is allowed
		Boot from CD is supported
		Selectable boot is supported
		BIOS ROM is socketed
		EDD is supported
		5.25&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/1.2 MB floppy services are supported (int 13h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		3.5&amp;#34;&lt;/span&gt;/720 kB floppy services are supported &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;int 13h&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		3.5&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/2.88 MB floppy services are supported (int 13h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Print screen service is supported (int 5h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		8042 keyboard services are supported (int 9h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Serial services are supported (int 14h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Printer services are supported (int 17h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		ACPI is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		USB legacy is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		BIOS boot specification is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Targeted content distribution is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		UEFI is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	BIOS Revision: 4.6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr dmidecode

  dmidecode

  Display the DMI &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;alternatively known as SMBIOS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; table contents in a human-readable format.
  Requires root privileges.

  - Show all DMI table contents:
    sudo dmidecode

  - Show the BIOS version:
    sudo dmidecode -s bios-version

  - Show the system&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s serial number:
    sudo dmidecode -s system-serial-number

  - Show BIOS information:
    sudo dmidecode -t bios

  - Show CPU information:
    sudo dmidecode -t processor

  - Show memory information:
    sudo dmidecode -t memory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; dmidecode --help
Usage: dmidecode &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
Options are:
 -d, --dev-mem FILE     Read memory from device FILE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: /dev/mem&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
 -h, --help             Display this help text and exit
 -q, --quiet            Less verbose output
 -s, --string KEYWORD   Only display the value of the given DMI string
 -t, --type TYPE        Only display the entries of given type
 -u, --dump             Do not decode the entries
     --dump-bin FILE    Dump the DMI data to a binary file
     --from-dump FILE   Read the DMI data from a binary file
 -V, --version          Display the version and exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>lsblk command</title>
      <link>/posts/linux/command/2020-09-11-lsblk/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-11-lsblk/</guid>
      <description>linux의 lsblk 명령어를 통해 장치 정보를 확인 할 수 있습니다.
기본 사용법 $&amp;gt; lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT loop1 7:1 0 97M 1 loop /snap/core/9665 loop8 7:8 0 96.6M 1 loop /snap/core/9804 loop6 7:6 0 55.3M 1 loop /snap/core18/1885 loop4 7:4 0 50.4M 1 loop /snap/bpftrace/63 loop2 7:2 0 9.8M 1 loop /snap/helm/265 loop0 7:0 0 55M 1 loop /snap/core18/1880 loop7 7:7 0 26.1M 1 loop /snap/taskbook/23 sda 8:0 0 238.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;lsblk&lt;/code&gt; 명령어를 통해 장치 정보를 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; lsblk
NAME                MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
loop1                 7:1    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    97M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/core/9665
loop8                 7:8    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  96.6M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/core/9804
loop6                 7:6    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  55.3M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/core18/1885
loop4                 7:4    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  50.4M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/bpftrace/63
loop2                 7:2    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   9.8M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/helm/265
loop0                 7:0    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    55M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/core18/1880
loop7                 7:7    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  26.1M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/taskbook/23
sda                   8:0    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 238.5G  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; disk 
├─sda2                8:2    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     1K  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; part 
├─sda5                8:5    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   238G  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; part 
│ ├─mint--vg-swap_1 253:1    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  15.9G  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; lvm  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;SWAP&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
│ └─mint--vg-root   253:0    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 222.1G  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; lvm  /
└─sda1                8:1    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   487M  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; part /boot
loop5                 7:5    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  39.3M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/bcc/125
loop3                 7:3    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  14.9M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/skaffold/1
loop10                7:10   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   9.8M  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; loop /snap/helm/272
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr lsblk

  lsblk

  Lists information about devices.

  - List all storage devices in a tree-like format:
    lsblk

  - Also list empty devices:
    lsblk -a

  - Print the SIZE column in bytes rather than in a human-readable format:
    lsblk -b

  - Output info about filesystems:
    lsblk -f

  - Use ASCII characters &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tree formatting:
    lsblk -i

  - Output info about block-device topology:
    lsblk -t

  - Exclude the devices specified by the comma-separated list of major device numbers:
    lsblk -e 1,7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; lsblk --help

Usage:
 lsblk &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;device&amp;gt; ...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

List information about block devices.

Options:
 -a, --all            print all devices
 -b, --bytes          print SIZE in bytes rather than in human readable format
 -d, --nodeps         don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t print slaves or holders
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -D, --discard        print discard capabilities
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -e, --exclude &amp;lt;list&amp;gt; exclude devices by major number (default: RAM disks)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -f, --fs             output info about filesystems
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -i, --ascii          use ascii characters only
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -I, --include &amp;lt;list&amp;gt; show only devices with specified major numbers
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -J, --json           use JSON output format
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -l, --list           use list format output
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -m, --perms          output info about permissions
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -n, --noheadings     don&amp;#39;&lt;/span&gt;t print headings
 -o, --output &amp;lt;list&amp;gt;  output columns
 -O, --output-all     output all columns
 -p, --paths          print complete device path
 -P, --pairs          use key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; output format
 -r, --raw            use raw output format
 -s, --inverse        inverse dependencies
 -S, --scsi           output info about SCSI devices
 -t, --topology       output info about topology
 -x, --sort &amp;lt;column&amp;gt;  sort output by &amp;lt;column&amp;gt;

 -h, --help     display this help and exit
 -V, --version  output version information and exit

Available columns &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; --output&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
        NAME  device name
       KNAME  internal kernel device name
     MAJ:MIN  major:minor device number
      FSTYPE  filesystem type
  MOUNTPOINT  where the device is mounted
       LABEL  filesystem LABEL
        UUID  filesystem UUID
    PARTTYPE  partition type UUID
   PARTLABEL  partition LABEL
    PARTUUID  partition UUID
   PARTFLAGS  partition flags
          RA  read-ahead of the device
          RO  read-only device
          RM  removable device
     HOTPLUG  removable or hotplug device &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;usb, pcmcia, ...&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
       MODEL  device identifier
      SERIAL  disk serial number
        SIZE  size of the device
       STATE  state of the device
       OWNER  user name
       GROUP  group name
        MODE  device node permissions
   ALIGNMENT  alignment offset
      MIN-IO  minimum I/O size
      OPT-IO  optimal I/O size
     PHY-SEC  physical sector size
     LOG-SEC  logical sector size
        ROTA  rotational device
       SCHED  I/O scheduler name
     RQ-SIZE  request queue size
        TYPE  device type
    DISC-ALN  discard alignment offset
   DISC-GRAN  discard granularity
    DISC-MAX  discard max bytes
   DISC-ZERO  discard zeroes data
       WSAME  write same max bytes
         WWN  unique storage identifier
        RAND  adds randomness
      PKNAME  internal parent kernel device name
        HCTL  Host:Channel:Target:Lun &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; SCSI
        TRAN  device transport type
  SUBSYSTEMS  de-duplicated chain of subsystems
         REV  device revision
      VENDOR  device vendor

For more details see lsblk&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>lsof command</title>
      <link>/posts/linux/command/2020-09-09-lsof/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-09-lsof/</guid>
      <description>linux의 lsof 명령어는 열려 있는 파일과 해당하는 프로세스 목록을 보여줍니다.
기본 사용법 $&amp;gt; lsof COMMAND PID TID USER FD TYPE DEVICE SIZE/OFF NODE NAME ... chrome 687 geeksaga 15r CHR 1,9 0t0 11 /dev/urandom chrome 687 geeksaga 16r FIFO 0,12 0t0 114907104 pipe chrome 687 geeksaga 17w FIFO 0,12 0t0 114907104 pipe chrome 687 geeksaga 18u unix 0x0000000000000000 0t0 114913656 type=STREAM chrome 687 geeksaga 19u unix 0x0000000000000000 0t0 66804623 type=SEQPACKET .</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;lsof&lt;/code&gt; 명령어는 열려 있는 파일과 해당하는 프로세스 목록을 보여줍니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; lsof
COMMAND     PID   TID   USER   FD      TYPE             DEVICE   SIZE/OFF       NODE NAME
...
chrome      &lt;span style=&#34;color:#ae81ff&#34;&gt;687&lt;/span&gt;        geeksaga 15r      CHR                1,9        0t0         &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; /dev/urandom
chrome      &lt;span style=&#34;color:#ae81ff&#34;&gt;687&lt;/span&gt;        geeksaga 16r     FIFO               0,12        0t0  &lt;span style=&#34;color:#ae81ff&#34;&gt;114907104&lt;/span&gt; pipe
chrome      &lt;span style=&#34;color:#ae81ff&#34;&gt;687&lt;/span&gt;        geeksaga 17w     FIFO               0,12        0t0  &lt;span style=&#34;color:#ae81ff&#34;&gt;114907104&lt;/span&gt; pipe
chrome      &lt;span style=&#34;color:#ae81ff&#34;&gt;687&lt;/span&gt;        geeksaga 18u     unix 0x0000000000000000        0t0  &lt;span style=&#34;color:#ae81ff&#34;&gt;114913656&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;STREAM
chrome      &lt;span style=&#34;color:#ae81ff&#34;&gt;687&lt;/span&gt;        geeksaga 19u     unix 0x0000000000000000        0t0   &lt;span style=&#34;color:#ae81ff&#34;&gt;66804623&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SEQPACKET
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;특정 포트를 사용하고 있는 프로세스 검색&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; lsof -i :8081
COMMAND    PID   USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME
qemu-syst &lt;span style=&#34;color:#ae81ff&#34;&gt;3805&lt;/span&gt; geeksaga 155u  IPv4 &lt;span style=&#34;color:#ae81ff&#34;&gt;140089534&lt;/span&gt;      0t0  TCP localhost:33874-&amp;gt;localhost:tproxy &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
node      &lt;span style=&#34;color:#ae81ff&#34;&gt;3846&lt;/span&gt; geeksaga  21u  IPv6 &lt;span style=&#34;color:#ae81ff&#34;&gt;139672765&lt;/span&gt;      0t0  TCP *:tproxy &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
node      &lt;span style=&#34;color:#ae81ff&#34;&gt;3846&lt;/span&gt; geeksaga  51u  IPv6 &lt;span style=&#34;color:#ae81ff&#34;&gt;140096143&lt;/span&gt;      0t0  TCP localhost:tproxy-&amp;gt;localhost:33916 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr lsof

  lsof

  Lists open files and the corresponding processes.
  Note: Root privileges &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or sudo&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; is required to list files opened by others.

  - Find the processes that have a given file open:
    lsof path/to/file

  - Find the process that opened a local internet port:
    lsof -i :port

  - Only output the process ID &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PID&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    lsof -t path/to/file

  - List files opened by the given user:
    lsof -u username

  - List files opened by the given command or process:
    lsof -c process_or_command_name

  - List files opened by a specific process, given its PID:
    lsof -p PID

  - List open files in a directory:
    lsof +D path/to/directory

  - Find the process that is listening on a local TCP port:
    lsof -iTCP:port -sTCP:LISTEN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; lsof --help
lsof 4.89
 latest revision: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/
 latest FAQ: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ
 latest man page: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/lsof_man
 usage: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-?abhKlnNoOPRtUvVX&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-c c&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-d s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+D D&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-E&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-e s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-f&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;gG&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-F &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-g &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-i &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-L &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;l&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+m &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-M&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-o &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-p s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-r &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-s &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;p:s&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-S &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-T &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-u s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-w&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-x &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fl&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;--&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;names&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
Defaults in parentheses; comma-separated set &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; items; dash-separated ranges.
  -?|-h list help          -a AND selections &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;OR&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     -b avoid kernel blocks
  -c c  cmd c ^c /c/&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bix&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  +c w  COMMAND width &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;9&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    +d s  dir s files
  -d s  &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; by FD set   +D D  dir D tree *SLOW?*   +|-e s  exempt s *RISKY*
  -i &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; IPv&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;46&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; files  -K list tasKs &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;threads&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    -l list UID numbers
  -n no host names         -N &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; NFS files        -o list file offset
  -O no overhead *RISKY*   -P no port names           -R list paRent PID
  -s list file size        -t terse listing           -T disable TCP/TPI info
  -U &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; Unix socket    -v list version info       -V verbose search
  +|-w  Warnings &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       -X skip TCP&amp;amp;UDP* files     -Z Z  context &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Z&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  -- end option scan     
  -E display endpoint info              +E display endpoint info and files
  +f|-f  +filesystem or -file names     +|-f&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;gG&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; flaGs 
  -F &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; fields; -F? &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help  
  +|-L &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;l&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; list &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; suppress &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; link counts &amp;lt; l &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; all; default &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                                        +m &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; use|create mount supplement
  +|-M   portMap registration &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       -o o   o 0t offset digits &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -p s   exclude&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;|&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; PIDs         -S &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; t second stat timeout &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;15&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -T qs TCP/TPI Q,St &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; info
  -g &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; exclude&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;|&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; and print process group IDs
  -i i   &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; by IPv&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;46&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; address: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;46&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;proto&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;@host|addr&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;:svc_list|port_list&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  +|-r &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;m&amp;lt;fmt&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; repeat every t seconds &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;15&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;  + &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; no files, - forever.
       An optional suffix to t is m&amp;lt;fmt&amp;gt;; m must separate t from &amp;lt;fmt&amp;gt; and
      &amp;lt;fmt&amp;gt; is an strftime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; format &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the marker line.
  -s p:s  exclude&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;|&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; protocol &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; TCP|UDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; states by name&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
  -u s   exclude&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;|&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; login|UID set s
  -x &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; cross over +d|+D File systems or symbolic Links
  names  &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; named files or files on named file systems
Anyone can list all files; /dev warnings disabled; kernel ID check disabled.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>fd command</title>
      <link>/posts/linux/command/2020-09-07-fd/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-07-fd/</guid>
      <description>linux의 fd 명령어는 find명령어를 대체할 수 있는 사용자 친화적인 CLI 입니다.
기본 사용법 $&amp;gt; fd test/1.txt ... TLDR $&amp;gt; tldr fd fd An alternative to find. Aims to be faster and easier to use than find. More information: https://github.com/sharkdp/fd. - Find files matching the given pattern in the current directory: fd pattern - Find files that begin with &amp;#34;foo&amp;#34;: fd &amp;#39;^foo&amp;#39; - Find files with a specific extension: fd --extension txt - Find files in a specific directory: fd pattern path/to/dir - Include ignored and hidden files in the search: fd --hidden --no-ignore pattern See also: find Help $&amp;gt; fd --help fd 8.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;fd&lt;/code&gt; 명령어는 &lt;code&gt;find&lt;/code&gt;명령어를 대체할 수 있는 사용자 친화적인 CLI 입니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; fd
test/1.txt
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr fd

  fd

  An alternative to find.
  Aims to be faster and easier to use than find.
  More information: https://github.com/sharkdp/fd.

  - Find files matching the given pattern in the current directory:
    fd pattern

  - Find files that begin with &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;:
    fd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^foo&amp;#39;&lt;/span&gt;

  - Find files with a specific extension:
    fd --extension txt

  - Find files in a specific directory:
    fd pattern path/to/dir

  - Include ignored and hidden files in the search:
    fd --hidden --no-ignore pattern


See also: find
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; fd --help
fd 8.1.1

USAGE:
    fd &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FLAGS/OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;pattern&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;path&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

FLAGS:
    -H, --hidden             
            Include hidden directories and files in the search results &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: hidden files and
            directories are skipped&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. Files and directories are considered to be hidden &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; their name
            starts with a &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; sign &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dot&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
    -I, --no-ignore          
            Show search results from files and directories that would otherwise be ignored by
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.ignore&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.fdignore&amp;#39;&lt;/span&gt;, or the global ignore file.
        --no-ignore-vcs      
            Show search results from files and directories that would otherwise be ignored by
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt; files.
    -u, --unrestricted       
            Alias &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--no-ignore&amp;#39;&lt;/span&gt;. Can be repeated. &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-uu&amp;#39;&lt;/span&gt; is an alias &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--no-ignore --hidden&amp;#39;&lt;/span&gt;.

    -s, --case-sensitive     
            Perform a &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-sensitive search. By default, fd uses &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-insensitive searches, unless
            the pattern contains an uppercase character &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;smart &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
    -i, --ignore-case        
            Perform a &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-insensitive search. By default, fd uses &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-insensitive searches, unless
            the pattern contains an uppercase character &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;smart &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
    -g, --glob               
            Perform a glob-based search instead of a regular expression search.

        --regex              
            Perform a regular-expression based search &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. This can be used to override --glob.

    -F, --fixed-strings      
            Treat the pattern as a literal string instead of a regular expression.

    -a, --absolute-path      
            Shows the full path starting from the root as opposed to relative paths.

    -l, --list-details       
            Use a detailed listing format like &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls -l&amp;#39;&lt;/span&gt;. This is basically an alias &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--exec-batch
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            ls -l&amp;#39;&lt;/span&gt; with some additional &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls&amp;#39;&lt;/span&gt; options. This can be used to see more metadata, to show
            symlink targets and to achieve a deterministic sort order.
    -L, --follow             
            By default, fd does not descend into symlinked directories. Using this flag, symbolic
            links are also traversed.
    -p, --full-path          
            By default, the search pattern is only matched against the filename &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or directory name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
            Using this flag, the pattern is matched against the full path.
    -0, --print0             
            Separate search results by the null character &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;instead of newlines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. Useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; piping
            results to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xargs&amp;#39;&lt;/span&gt;.
    -1                       
            Limit the search to a single result and quit immediately. This is an alias &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--max-
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            results=1&amp;#39;&lt;/span&gt;.
        --show-errors        
            Enable the display of filesystem errors &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; situations such as insufficient permissions
            or dead symlinks.
        --one-file-system    
            By default, fd will traverse the file system tree as far as other options dictate. With
            this flag, fd ensures that it does not descend into a different file system than the one
            it started in. Comparable to the -mount or -xdev filters of find&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
    -h, --help               
            Prints help information

    -V, --version            
            Prints version information


OPTIONS:
    -d, --max-depth &amp;lt;depth&amp;gt;               
            Limit the directory traversal to a given depth. By default, there is no limit on the
            search depth.
        --min-depth &amp;lt;depth&amp;gt;               
            Only show search results starting at the given depth. See also: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--max-depth&amp;#39;&lt;/span&gt; and
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--exact-depth&amp;#39;&lt;/span&gt;
        --exact-depth &amp;lt;depth&amp;gt;             
            Only show search results at the exact given depth. This is an alias &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--min-depth
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;lt;depth&amp;gt; --max-depth &amp;lt;depth&amp;gt;&amp;#39;&lt;/span&gt;.
    -t, --type &amp;lt;filetype&amp;gt;...
            Filter the search by type &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multiple allowable filetypes can be specified&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt;:         regular files
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;directory&amp;#39;&lt;/span&gt;:    directories
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;symlink&amp;#39;&lt;/span&gt;:      symbolic links
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;executable&amp;#39;&lt;/span&gt;:   executables
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;empty&amp;#39;&lt;/span&gt;:        empty files or directories
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;:       socket
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe&amp;#39;&lt;/span&gt;:         named pipe &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;FIFO&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    -e, --extension &amp;lt;ext&amp;gt;...              
            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Additionally&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; filter search results by their file extension. Multiple allowable file
            extensions can be specified.
    -x, --exec &amp;lt;cmd&amp;gt;                      
            Execute a command &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each search result.
            All arguments following --exec are taken to be arguments to the command &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; the
            argument &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt; is encountered.
            Each occurrence of the following placeholders is substituted by a path derived from the
            current search result before the command is executed:
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;:   path
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{/}&amp;#39;&lt;/span&gt;:  basename
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{//}&amp;#39;&lt;/span&gt;: parent directory
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.}&amp;#39;&lt;/span&gt;:  path without file extension
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{/.}&amp;#39;&lt;/span&gt;: basename without file extension
    -X, --exec-batch &amp;lt;cmd&amp;gt;                
            Execute a command with all search results at once.
            All arguments following --exec-batch are taken to be arguments to the command &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; the
            argument &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt; is encountered.
            A single occurrence of the following placeholders is authorized and substituted by the
            paths derived from the search results before the command is executed:
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;:   path
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{/}&amp;#39;&lt;/span&gt;:  basename
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{//}&amp;#39;&lt;/span&gt;: parent directory
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.}&amp;#39;&lt;/span&gt;:  path without file extension
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{/.}&amp;#39;&lt;/span&gt;: basename without file extension
    -E, --exclude &amp;lt;pattern&amp;gt;...            
            Exclude files/directories that match the given glob pattern. This overrides any other
            ignore logic. Multiple exclude patterns can be specified.
        --ignore-file &amp;lt;path&amp;gt;...           
            Add a custom ignore-file in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt; format. These files have a low precedence.

    -c, --color &amp;lt;when&amp;gt;                    
            Declare when to use color &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the pattern match output:
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auto&amp;#39;&lt;/span&gt;:      show colors &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the output goes to an interactive console &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;never&amp;#39;&lt;/span&gt;:     &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not use colorized output
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;always&amp;#39;&lt;/span&gt;:    always use colorized output
    -j, --threads &amp;lt;num&amp;gt;                   
            Set number of threads to use &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; searching &amp;amp; executing &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: number of available CPU
            cores&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    -S, --size &amp;lt;size&amp;gt;...                  
            Limit results based on the size of files using the format &amp;lt;+-&amp;gt;&amp;lt;NUM&amp;gt;&amp;lt;UNIT&amp;gt;.
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;: file size must be greater than or equal to this
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;: file size must be less than or equal to this
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NUM&amp;#39;&lt;/span&gt;:  The numeric size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g. 500&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UNIT&amp;#39;&lt;/span&gt;: The units &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; NUM. They are not &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-sensitive.
            Allowed unit values:
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;:  bytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;:  kilobytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;base ten, 10^3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;:  megabytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;:  gigabytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;:  terabytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ki&amp;#39;&lt;/span&gt;: kibibytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;base two, 2^10 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mi&amp;#39;&lt;/span&gt;: mebibytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gi&amp;#39;&lt;/span&gt;: gibibytes
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ti&amp;#39;&lt;/span&gt;: tebibytes
        --changed-within &amp;lt;date|dur&amp;gt;       
            Filter results based on the file modification time. The argument can be provided as a
            specific point in time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;YYYY-MM-DD HH:MM:SS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or as a duration &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10h, 1d, 35min&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--change-newer-than&amp;#39;&lt;/span&gt; can be used as an alias.
            Examples:
                --changed-within 2weeks
                --change-newer-than &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-10-27 10:00:00&amp;#39;&lt;/span&gt;
        --changed-before &amp;lt;date|dur&amp;gt;       
            Filter results based on the file modification time. The argument can be provided as a
            specific point in time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;YYYY-MM-DD HH:MM:SS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or as a duration &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10h, 1d, 35min&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--change-older-than&amp;#39;&lt;/span&gt; can be used as an alias.
            Examples:
                --changed-before &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-10-27 10:00:00&amp;#39;&lt;/span&gt;
                --change-older-than 2weeks
        --max-results &amp;lt;count&amp;gt;             
            Limit the number of search results to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt; and quit immediately.

        --base-directory &amp;lt;path&amp;gt;           
            Change the current working directory of fd to the provided path. The means that search
            results will be shown with respect to the given base path. Note that relative paths which
            are passed to fd via the positional &amp;lt;path&amp;gt; argument or the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--search-path&amp;#39;&lt;/span&gt; option will
            also be resolved relative to this directory.
        --path-separator &amp;lt;separator&amp;gt;      
            Set the path separator to use when printing file paths. The default is the OS-specific
            separator &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; on Unix, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&lt;/span&gt; on Windows&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
        --search-path &amp;lt;search-path&amp;gt;...    
            Provide paths to search as an alternative to the positional &amp;lt;path&amp;gt; argument. Changes the
            usage to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;fd &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FLAGS/OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --search-path &amp;lt;path&amp;gt; --search-path &amp;lt;path2&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;pattern&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    -o, --owner &amp;lt;user:group&amp;gt;              
            Filter files by their user and/or group. Format: &lt;span style=&#34;color:#f92672&#34;&gt;[(&lt;/span&gt;user|uid&lt;span style=&#34;color:#f92672&#34;&gt;)][&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;group|gid&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;. Either side
            is optional. Precede either side with a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;!&amp;#39;&lt;/span&gt; to exclude files instead.
            Examples:
                --owner john
                --owner :students
                --owner &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;!john:students&amp;#39;&lt;/span&gt;

ARGS:
    &amp;lt;pattern&amp;gt;    
            the search pattern - a regular expression unless &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--glob&amp;#39;&lt;/span&gt; is used &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;optional&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    &amp;lt;path&amp;gt;...    
            The directory where the filesystem search is rooted &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;optional&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. If omitted, search the
            current working directory.

Note: &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;fd -h&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; prints a short and concise overview &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;fd --help&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; gives all details.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sharkdp/fd&#34; title=&#34;fd&#34;&gt;fd&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>find command</title>
      <link>/posts/linux/command/2020-09-07-find/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-07-find/</guid>
      <description>linux의 find 명령어를 통해 파일 또는 디렉토리를 검색할 수 있습니다.
기본 사용법 $&amp;gt; find ./test/1.txt ... 응용  현재 디렉토리 아래 모든 파일 및 하위 디렉토리에서 파일 검색  $&amp;gt; find . -name [FILE]  파일 이름이 특정 문자열로 시작하는 파일 검색  $&amp;gt; find . -name &amp;#34;STRING&amp;#34;  파일 또는 디렉토리만 검색  $&amp;gt; find . -name [FILE] -type f TLDR $&amp;gt; tldr find find Find files or directories under the given directory tree, recursively.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;find&lt;/code&gt; 명령어를 통해 파일 또는 디렉토리를 검색할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find
./test/1.txt
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;현재 디렉토리 아래 모든 파일 및 하위 디렉토리에서 파일 검색&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find . -name &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;파일 이름이 특정 문자열로 시작하는 파일 검색&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;STRING&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;파일 또는 디렉토리만 검색&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find . -name &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -type f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr find

  find

  Find files or directories under the given directory tree, recursively.

  - Find files by extension:
    find root_path -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.ext&amp;#39;&lt;/span&gt;

  - Find files by matching multiple patterns:
    find root_path -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*pattern_1*&amp;#39;&lt;/span&gt; -or -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*pattern_2*&amp;#39;&lt;/span&gt;

  - Find directories matching a given name, in &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-insensitive mode:
    find root_path -type d -iname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*lib*&amp;#39;&lt;/span&gt;

  - Find files matching a path pattern:
    find root_path -path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/lib/**/*.ext&amp;#39;&lt;/span&gt;

  - Find files matching a given pattern, excluding specific paths:
    find root_path -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt; -not -path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*/site-packages/*&amp;#39;&lt;/span&gt;

  - Find files matching a given size range:
    find root_path -size +500k -size -10M

  - Run a command &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each file &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; within the command to access the filename&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    find root_path -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.ext&amp;#39;&lt;/span&gt; -exec wc -l &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt;

  - Find files modified in the last &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; days, and delete them:
    find root_path -mtime -7 -delete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find --help
Usage: find &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-H&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-L&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-P&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-Olevel&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-D help|tree|search|stat|rates|opt|exec|time&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;path...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;expression&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

default path is the current directory; default expression is -print
expression may consist of: operators, options, tests, and actions:

operators &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;decreasing precedence; -and is implicit where no others are given&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; EXPR &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   ! EXPR   -not EXPR   EXPR1 -a EXPR2   EXPR1 -and EXPR2
      EXPR1 -o EXPR2   EXPR1 -or EXPR2   EXPR1 , EXPR2

positional options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;always true&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: -daystart -follow -regextype

normal options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;always true, specified before other expressions&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
      -depth --help -maxdepth LEVELS -mindepth LEVELS -mount -noleaf
      --version -xdev -ignore_readdir_race -noignore_readdir_race

tests &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;N can be +N or -N or N&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: -amin N -anewer FILE -atime N -cmin N
      -cnewer FILE -ctime N -empty -false -fstype TYPE -gid N -group NAME
      -ilname PATTERN -iname PATTERN -inum N -iwholename PATTERN -iregex PATTERN
      -links N -lname PATTERN -mmin N -mtime N -name PATTERN -newer FILE
      -nouser -nogroup -path PATTERN -perm &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-/&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;MODE -regex PATTERN
      -readable -writable -executable
      -wholename PATTERN -size N&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bcwkMG&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -true -type &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bcdpflsD&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -uid N
      -used N -user NAME -xtype &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bcdpfls&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
      -context CONTEXT


actions: -delete -print0 -printf FORMAT -fprintf FILE FORMAT -print 
      -fprint0 FILE -fprint FILE -ls -fls FILE -prune -quit
      -exec COMMAND ; -exec COMMAND &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; + -ok COMMAND ;
      -execdir COMMAND ; -execdir COMMAND &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; + -okdir COMMAND ;

Please see also the documentation at http://www.gnu.org/software/findutils/.
You can report &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;and track progress on fixing&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; bugs in the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;find&amp;#34;&lt;/span&gt;
program via the GNU findutils bug-reporting page at
https://savannah.gnu.org/bugs/?group&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;findutils or, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
you have no web access, by sending email to &amp;lt;bug-findutils@gnu.org&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>taskset command</title>
      <link>/posts/linux/command/2020-09-03-taskset/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-09-03-taskset/</guid>
      <description>linux의 taskset 명령어를 통해 프로세스가 사용할 CPU를 보여주거나 설정할 수 있습니다.
기본 사용법 $&amp;gt; taskset -p 6525 pid 6525&amp;#39;s current affinity mask: ff $&amp;gt; taskset -pc 6525 pid 6525&amp;#39;s current affinity list: 0-7 응용  동일한 코어에서 두 스레드 간에 메세지를 보내는데 걸리는 시간 측정 (이 결과로 컨텍스트 스위칭시 성능을 알 수 있습니다.)  $&amp;gt; taskset -c 0 perf bench sched pipe -T # Running &amp;#39;sched/pipe&amp;#39; benchmark: # Executed 1000000 pipe operations between two threads Total time: 3.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;taskset&lt;/code&gt; 명령어를 통해 프로세스가 사용할 CPU를 보여주거나 설정할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; taskset -p &lt;span style=&#34;color:#ae81ff&#34;&gt;6525&lt;/span&gt; 
pid 6525&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s current affinity mask: ff
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&amp;gt; taskset -pc 6525
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;pid 6525&amp;#39;&lt;/span&gt;s current affinity list: 0-7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;동일한 코어에서 두 스레드 간에 메세지를 보내는데 걸리는 시간 측정
(이 결과로 컨텍스트 스위칭시 성능을 알 수 있습니다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; taskset -c &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; perf bench sched pipe -T
&lt;span style=&#34;color:#75715e&#34;&gt;# Running &amp;#39;sched/pipe&amp;#39; benchmark:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Executed 1000000 pipe operations between two threads&lt;/span&gt;

     Total time: 3.761 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sec&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

       3.761332 usecs/op
         &lt;span style=&#34;color:#ae81ff&#34;&gt;265863&lt;/span&gt; ops/sec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;이 결과는 하나의 스레드에서 메시지를 보내고 받는 데 걸리는 시간을 측정하므로
2로 나눠야 정확한 값을 알 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr taskset

  taskset

  Get or set a process&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; CPU affinity or start a new process with a defined CPU affinity.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - Get a running process&amp;#39;&lt;/span&gt; CPU affinity by PID:
    taskset --pid --cpu-list pid

  - Set a running process&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; CPU affinity by PID:
    taskset --pid --cpu-list cpu_id pid

  - Start a new process with affinity &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a single CPU:
    taskset --cpu-list cpu_id command

  - Start a new process with affinity &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; multiple non-sequential CPUs:
    taskset --cpu-list cpu_id_1 cpu_id_2 cpu_id_3

  - Start a new process with affinity &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; CPUs &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; through 4:
    taskset --cpu-list cpu_id_1,cpu_id_4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; taskset --help
Usage: taskset &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mask | cpu-list&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;pid|cmd &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;args...&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;


Show or change the CPU affinity of a process.

Options:
 -a, --all-tasks         operate on all the tasks &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;threads&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a given pid
 -p, --pid               operate on existing given pid
 -c, --cpu-list          display and specify cpus in list format
 -h, --help              display this help
 -V, --version           output version information

The default behavior is to run a new command:
    taskset &lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; sshd -b &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
You can retrieve the mask of an existing task:
    taskset -p &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;
Or set it:
    taskset -p &lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;
List format uses a comma-separated list instead of a mask:
    taskset -pc 0,3,7-11 &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;
Ranges in list format can take a stride argument:
    e.g. 0-31:2 is equivalent to mask 0x55555555

For more details see taskset&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>tmux plugins</title>
      <link>/posts/tools/2020-08-21-tmux-plugin/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tools/2020-08-21-tmux-plugin/</guid>
      <description>{% include figure image_path=&amp;quot;/assets/images/tmux-plugins.png&amp;quot; caption=&amp;ldquo;tmux plugins.&amp;rdquo; class=&amp;ldquo;third&amp;rdquo; %}
tmux에서 사용할 수 있는 플러그인은 별도 설치를 통해 동작하는 플러그인들과 TPM(Tmux Plugin Manager)를 통해 관리되는 플러그인 시스템이 있습니다.
이 중에 유용한 플러그인들을 기록합니다.
TPM에서 관리되는 플러그인들 TPM 기반 플러그인을 사용하기 전에 TPM 플러그인 매니저가 설치되어 있어야 합니다. TPM(Tmux Plugin Manager) 링크를 통해서 설치 할 수 있습니다.
참고링크를 통해 설치를 완료하자.
   tmux-yank tmux 시스템 클립보드로 복사 해주는 플러그인 입니다.     tmux-sensible tmux에서 유요하다고 생각하는 설정들을 자동으로 설정해주는 플러그인 입니다.</description>
      <content>&lt;p&gt;{% include figure image_path=&amp;quot;/assets/images/tmux-plugins.png&amp;quot; caption=&amp;ldquo;tmux plugins.&amp;rdquo; class=&amp;ldquo;third&amp;rdquo; %}&lt;/p&gt;
&lt;p&gt;tmux에서 사용할 수 있는 플러그인은 별도 설치를 통해 동작하는 플러그인들과 TPM(Tmux Plugin Manager)를 통해 관리되는 플러그인 시스템이 있습니다.&lt;/p&gt;
&lt;p&gt;이 중에 유용한 플러그인들을 기록합니다.&lt;/p&gt;
&lt;h2 id=&#34;tpm에서-관리되는-플러그인들&#34;&gt;TPM에서 관리되는 플러그인들&lt;/h2&gt;
&lt;p&gt;TPM 기반 플러그인을 사용하기 전에 TPM 플러그인 매니저가 설치되어 있어야 합니다.
&lt;a href=&#34;https://github.com/tmux-plugins/tpm&#34;&gt;TPM(Tmux Plugin Manager)&lt;/a&gt; 링크를 통해서 설치 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;참고링크를 통해 설치를 완료하자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-yank&#34;&gt;tmux-yank&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;tmux 시스템 클립보드로 복사 해주는 플러그인 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-sensible&#34;&gt;tmux-sensible&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;tmux에서 유요하다고 생각하는 설정들을 자동으로 설정해주는 플러그인 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-urlview&#34;&gt;tmux-urlview&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;터미널(콘솔)에서 표시되는 URL을 오픈해주는 플러그인 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-open&#34;&gt;tmux-open&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;tmux-urlview&lt;/code&gt;는 대상이 URL이지만 &lt;code&gt;tmux-open&lt;/code&gt; 플러그인은 tmux Copy 모드에서 highlight 된 파일이나 URL 등을 오픈 할 수 있는 플러그인 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;독립적인-툴과-플러그인들&#34;&gt;독립적인 툴과 플러그인들&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jimeh/tmuxifier&#34;&gt;Tmuxifier&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;자주 사용하는 레이아웃을 저장하여 사용할 수 있는 도구 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;Tmuxinator&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tmux 세션을 관리해주는 도구 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/creaktive/rainbarf&#34;&gt;rainbarf&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;CPU,RAM,Battery 상태를 차트 형태로 보여주는 플러그인 입니다.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고링크&#34;&gt;참고링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugin&#34; title=&#34;tmux-plugins&#34;&gt;tmux-plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>du command</title>
      <link>/posts/linux/command/2020-08-20-du/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-20-du/</guid>
      <description>linux의 du 명령어를 통해 디렉토리 별로 디스크 사용량을 확인 할 수 있습니다.
기본 사용법 $&amp;gt; du /usr/bin 557780	/usr/bin 출력되는 값은 --block-size 또는 DU_BLCOK_SIZE, BLOCK_SIZE, BLOCKSIZE 환경 변수에서 사용 가능한 첫 번째 SIZE 단위 입니다. 그렇지 않으면 단위는 기본적으로 1024 바이트 (또는 POSIXLY_CORRECT가 설정된 경우 512) 입니다.
TLDR $&amp;gt; tldr du du Disk usage: estimate and summarize file and directory space usage. - List the sizes of a directory and any subdirectories, in the given unit (B/KB/MB): du -b|k|m path/to/directory - List the sizes of a directory and any subdirectories, in human-readable form (i.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;du&lt;/code&gt; 명령어를 통해 디렉토리 별로 디스크 사용량을 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; du /usr/bin
557780	/usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력되는 값은 &lt;code&gt;--block-size&lt;/code&gt; 또는 &lt;code&gt;DU_BLCOK_SIZE&lt;/code&gt;, &lt;code&gt;BLOCK_SIZE&lt;/code&gt;, &lt;code&gt;BLOCKSIZE&lt;/code&gt; 환경 변수에서 사용 가능한 첫 번째 &lt;code&gt;SIZE&lt;/code&gt; 단위 입니다.
그렇지 않으면 단위는 기본적으로 1024 바이트 (또는 POSIXLY_CORRECT가 설정된 경우 512) 입니다.&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr du

  du

  Disk usage: estimate and summarize file and directory space usage.

  - List the sizes of a directory and any subdirectories, in the given unit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;B/KB/MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    du -b|k|m path/to/directory

  - List the sizes of a directory and any subdirectories, in human-readable form &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i.e. auto-selecting the appropriate unit &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each size&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    du -h path/to/directory

  - Show the size of a single directory, in human readable units:
    du -sh path/to/directory

  - List the human-readable sizes of a directory and of all the files and directories within it:
    du -ah path/to/directory

  - List the human-readable sizes of a directory and any subdirectories, up to N levels deep:
    du -h --max-depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N path/to/directory

  - List the human-readable size of all .jpg files in subdirectories of the current directory, and show a cumulative total at the end:
    du -ch */*.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; du --help
Usage: du &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
  or:  du &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... --files0-from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;F
Summarize disk usage of the set of FILEs, recursively &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; directories.

Mandatory arguments to long options are mandatory &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; short options too.
  -0, --null            end each output line with NUL, not newline
  -a, --all             write counts &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; all files, not just directories
      --apparent-size   print apparent sizes, rather than disk usage; although
                          the apparent size is usually smaller, it may be
                          larger due to holes in &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sparse&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; files, internal
                          fragmentation, indirect blocks, and the like
  -B, --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SIZE  scale sizes by SIZE before printing them; e.g.,
                           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-BM&amp;#39;&lt;/span&gt; prints sizes in units of 1,048,576 bytes;
                           see SIZE format below
  -b, --bytes           equivalent to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--apparent-size --block-size=1&amp;#39;&lt;/span&gt;
  -c, --total           produce a grand total
  -D, --dereference-args  dereference only symlinks that are listed on the
                          command line
  -d, --max-depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N     print the total &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a directory &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or file, with --all&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                          only &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it is N or fewer levels below the command
                          line argument;  --max-depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; is the same as
                          --summarize
      --files0-from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;F   summarize disk usage of the
                          NUL-terminated file names specified in file F;
                          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; F is -, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; read names from standard input
  -H                    equivalent to --dereference-args &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-D&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -h, --human-readable  print sizes in human readable format &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g., 1K 234M 2G&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      --inodes          list inode usage information instead of block usage
  -k                    like --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1K
  -L, --dereference     dereference all symbolic links
  -l, --count-links     count sizes many times &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; hard linked
  -m                    like --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1M
  -P, --no-dereference  don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t follow any symbolic links (this is the default)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  -S, --separate-dirs   for directories do not include size of subdirectories
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --si              like -h, but use powers of 1000 not 1024
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  -s, --summarize       display only a total for each argument
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  -t, --threshold=SIZE  exclude entries smaller than SIZE if positive,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                          or entries greater than SIZE if negative
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --time            show time of the last modification of any file in the
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                          directory, or any of its subdirectories
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --time=WORD       show time as WORD instead of modification time:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                          atime, access, use, ctime or status
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --time-style=STYLE  show times using STYLE, which can be:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                            full-iso, long-iso, iso, or +FORMAT;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                            FORMAT is interpreted like in &amp;#39;&lt;/span&gt;date&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  -X, --exclude-from=FILE  exclude files that match any pattern in FILE
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --exclude=PATTERN    exclude files that match PATTERN
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  -x, --one-file-system    skip directories on different file systems
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --help     display this help and exit
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      --version  output version information and exit
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Display values are in units of the first available SIZE from --block-size,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;and the DU_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Otherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GNU coreutils online help: &amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Full documentation at: &amp;lt;http://www.gnu.org/software/coreutils/du&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;or available locally via: info &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;coreutils&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; du invocation&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>df command</title>
      <link>/posts/linux/command/2020-08-18-df/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-18-df/</guid>
      <description>linux의 df 명령어를 통해 현재 디스크의 전체 사용량을 확인 할 수 있습니다.
기본 사용법 $&amp;gt; df Filesystem 1K-blocks Used Available Use% Mounted on udev 8123612 0 8123612 0% /dev tmpfs 1630992 17960 1613032 2% /run /dev/mapper/mint--vg-root 229063924 159664024 57741048 74% / tmpfs 8154948 554936 7600012 7% /dev/shm tmpfs 5120 4 5116 1% /run/lock tmpfs 8154948 0 8154948 0% /sys/fs/cgroup /dev/sda1 482922 279826 178162 62% /boot cgmfs 100 0 100 0% /run/cgmanager/fs tmpfs 1630992 520 1630472 1% /run/user/1000 출력된 정보는 다음과 같습니다.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;df&lt;/code&gt; 명령어를 통해 현재 디스크의 전체 사용량을 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; df
Filesystem                1K-blocks      Used Available Use% Mounted on
udev                        &lt;span style=&#34;color:#ae81ff&#34;&gt;8123612&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;8123612&lt;/span&gt;   0% /dev
tmpfs                       &lt;span style=&#34;color:#ae81ff&#34;&gt;1630992&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;17960&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1613032&lt;/span&gt;   2% /run
/dev/mapper/mint--vg-root &lt;span style=&#34;color:#ae81ff&#34;&gt;229063924&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;159664024&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;57741048&lt;/span&gt;  74% /
tmpfs                       &lt;span style=&#34;color:#ae81ff&#34;&gt;8154948&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;554936&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;7600012&lt;/span&gt;   7% /dev/shm
tmpfs                          &lt;span style=&#34;color:#ae81ff&#34;&gt;5120&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;5116&lt;/span&gt;   1% /run/lock
tmpfs                       &lt;span style=&#34;color:#ae81ff&#34;&gt;8154948&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;8154948&lt;/span&gt;   0% /sys/fs/cgroup
/dev/sda1                    &lt;span style=&#34;color:#ae81ff&#34;&gt;482922&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;279826&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;178162&lt;/span&gt;  62% /boot
cgmfs                           &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;   0% /run/cgmanager/fs
tmpfs                       &lt;span style=&#34;color:#ae81ff&#34;&gt;1630992&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;520&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1630472&lt;/span&gt;   1% /run/user/1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Filesystem&lt;/code&gt; : 파일 시스템 이름&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1K-blocks&lt;/code&gt;  : 전체 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Used&lt;/code&gt;       : 사용중인 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Available&lt;/code&gt;  : 사용가능한 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Use%&lt;/code&gt;       : 사용중인 크기 백분율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mounted on&lt;/code&gt; : 마운트된 파일 시스템&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;활용&#34;&gt;활용&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; df -x tmpfs | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^\/dev\/loop/d&amp;#39;&lt;/span&gt;
Filesystem                1K-blocks      Used Available Use% Mounted on
udev                        &lt;span style=&#34;color:#ae81ff&#34;&gt;8123612&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;8123612&lt;/span&gt;   0% /dev
/dev/mapper/mint--vg-root &lt;span style=&#34;color:#ae81ff&#34;&gt;229063924&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;159665860&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;57739212&lt;/span&gt;  74% /
/dev/sda1                    &lt;span style=&#34;color:#ae81ff&#34;&gt;482922&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;279826&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;178162&lt;/span&gt;  62% /boot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; df --help
Usage: df &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Show information about the file system on which each FILE resides,
or all file systems by default.

Mandatory arguments to long options are mandatory &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; short options too.
  -a, --all             include pseudo, duplicate, inaccessible file systems
  -B, --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SIZE  scale sizes by SIZE before printing them; e.g.,
                           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-BM&amp;#39;&lt;/span&gt; prints sizes in units of 1,048,576 bytes;
                           see SIZE format below
  -h, --human-readable  print sizes in powers of &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g., 1023M&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -H, --si              print sizes in powers of &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g., 1.1G&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -i, --inodes          list inode information instead of block usage
  -k                    like --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1K
  -l, --local           limit listing to local file systems
      --no-sync         &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not invoke sync before getting usage info &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      --output&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;FIELD_LIST&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  use the output format defined by FIELD_LIST,
                               or print all fields &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; FIELD_LIST is omitted.
  -P, --portability     use the POSIX output format
      --sync            invoke sync before getting usage info
      --total           elide all entries insignificant to available space,
                          and produce a grand total
  -t, --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;TYPE       limit listing to file systems of type TYPE
  -T, --print-type      print file system type
  -x, --exclude-type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;TYPE   limit listing to file systems not of type TYPE
  -v                    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ignored&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      --help     display this help and exit
      --version  output version information and exit

Display values are in units of the first available SIZE from --block-size,
and the DF_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.
Otherwise, units default to &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; POSIXLY_CORRECT is set&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.

The SIZE argument is an integer and optional unit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;example: 10K is 10*1024&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
Units are K,M,G,T,P,E,Z,Y &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;powers of 1024&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or KB,MB,... &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;powers of 1000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.

FIELD_LIST is a comma-separated list of columns to be included.  Valid
field names are: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;source&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fstype&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;itotal&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iused&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iavail&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipcent&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;used&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avail&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pcent&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;target&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;see info page&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.

GNU coreutils online help: &amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
Full documentation at: &amp;lt;http://www.gnu.org/software/coreutils/df&amp;gt;
or available locally via: info &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(coreutils) df invocation&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr df

  df

  Gives an overview of the file system disk space usage.

  - Display all file systems and their disk usage:
    df

  - Display all file systems and their disk usage in human readable form:
    df -h

  - Display the file system and its disk usage containing the given file or directory:
    df path/to/file_or_directory

  - Display statistics on the number of free inodes:
    df -i

  - Display file systems but exclude the specified type:
    df -x squashfs -x tmpfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Df_(Unix)&#34; title=&#34;df Wikipedia&#34;&gt;df wiki&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>netstat command</title>
      <link>/posts/linux/command/2020-08-18-netstat/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-18-netstat/</guid>
      <description>linux의 netstat 명령어를 통해 현재 연결된 네트워크 상태, 라우팅 테이블, 인터페이스 상태, IP Masquerade, 멀티캐스트 멤버쉽 등을 확인 할 수 있습니다.
기본 사용법 $&amp;gt; netstat Active Internet connections (w/o servers) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 192.168.0.50:38608 nrt20s21-in-f10.1:https ESTABLISHED ... Active UNIX domain sockets (w/o servers) Proto RefCnt Flags Type State I-Node Path unix 2 [ ] DGRAM 34946 /run/user/1000/systemd/notify unix 3 [ ] DGRAM 19785 /run/systemd/notify unix 3 [ ] SEQPACKET CONNECTED 238454 @0002d .</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;netstat&lt;/code&gt; 명령어를 통해 현재 연결된 네트워크 상태, 라우팅 테이블,
인터페이스 상태, IP Masquerade, 멀티캐스트 멤버쉽 등을 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; netstat
Active Internet connections &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;w/o servers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 192.168.0.50:38608      nrt20s21-in-f10.1:https ESTABLISHED
...
Active UNIX domain sockets &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;w/o servers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Proto RefCnt Flags       Type       State         I-Node   Path
unix  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;         DGRAM                    &lt;span style=&#34;color:#ae81ff&#34;&gt;34946&lt;/span&gt;    /run/user/1000/systemd/notify
unix  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;         DGRAM                    &lt;span style=&#34;color:#ae81ff&#34;&gt;19785&lt;/span&gt;    /run/systemd/notify
unix  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;         SEQPACKET  CONNECTED     &lt;span style=&#34;color:#ae81ff&#34;&gt;238454&lt;/span&gt;   @0002d
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Active Internet Connections&lt;/code&gt; : TCP, UDP, RAW로 연결된 목록
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Proto&lt;/code&gt;           : 프로토콜&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Recv-Q&lt;/code&gt;          : 소켓에 연결된 사용자 프로그램에서 복사하지 않는 받은 바이트 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Send-Q&lt;/code&gt;          : 원격 호스트에서 승인하지 않은 바이트 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Local Address&lt;/code&gt;   : 로컬 주소와 포트 번호&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Foreign Address&lt;/code&gt; : 원격 주소와 포트 번호&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-n(--numeric)&lt;/code&gt; 옵션을 사용하지 않으면 소켓 주소는 표준 호스트 이름(FQDN)으로 확장되고
포트 번호는 해당 서비스 이름으로 변환된다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;State&lt;/code&gt;           : 소켓 상태&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ESTABLISHED&lt;/code&gt; : 소켓이 연결된 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SYN_SENT&lt;/code&gt;    : 소켓이 연결을 시도하고 있는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SYN_RECV&lt;/code&gt;    : 네트워크 연결 요청을 받은 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIN_WAIT1&lt;/code&gt;   : 소켓이 닫히고 연결이 종료되고 있는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIN_WAIT2&lt;/code&gt;   : 연결이 닫히고 소켓이 원격으로부터 종료를 기다리는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TIME_WAIT&lt;/code&gt;   : 연결 종료후 소켓이 네트워크에 있는 패킷을 처리하기 위해 대기중인 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CLOSE&lt;/code&gt;       : 소켓이 사용되지 않는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CLOSE_WAIT&lt;/code&gt;  : 종료 대기중인 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LAST_ACK&lt;/code&gt;    : 원격 연결 종료 요구 승인을 기다리는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt;      : 연결요청에 대한 응답준비가 되어 있는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CLOSING&lt;/code&gt;     : 두 소켓이 모두 종료되었지만 모든 데이터가 전송되지 않는 상태(메시지 유실 상태)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;     : 소켓 상태를 알 수 없음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Active UNIX domain sockets (w/o servers)&lt;/code&gt; : 도메인 소켓으로 연결된 목록&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Proto&lt;/code&gt;  : 프로토콜&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RefCnt&lt;/code&gt; : 참조 숫자&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Flags&lt;/code&gt;  : 표시되는 플래그는 ACC(SO_ACCEPTON), W(SO_WAITDATA), N(SO_NOSPACE)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Type&lt;/code&gt;   : 소켓 액세스 유형
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SOCK_DGRAM&lt;/code&gt;     : 소켓이 Datagram(연결없는) 모드에 사용&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;    : Stream(연결) 소켓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_RAW&lt;/code&gt;       : RAW 소켓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_RDM&lt;/code&gt;       : 안정적으로 전달 된 메시지&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt; : 순차 패킷 소켓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCK_PACKET&lt;/code&gt;    : RAW 인터페이스 액세스 소켓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;        : 모름&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;State&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FREE&lt;/code&gt;          : 할당되지 않은 소켓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LISTENING&lt;/code&gt;     : 연결 요청에 대한 응답 준비가 되어 있는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CONNECTING&lt;/code&gt;    : 연결중인 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CONNECTED&lt;/code&gt;     : 연결된 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DISCONNECTING&lt;/code&gt; : 연결이 해제되고 있는 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(empty)&lt;/code&gt;       : 소켓이 다른 소켓에 연결되어 있지 않은 상태&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;       : 절대로 나와서는 안되는 상태&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I-Node&lt;/code&gt; : 아이노드&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Path&lt;/code&gt;   : 소켓에 연결된 해당 프로세스의 경로&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr netstat

  netstat

  Displays network-related information such as open connections, open socket ports, etc.

  - List all ports:
    netstat -a

  - List all listening ports:
    netstat -l

  - List listening TCP ports:
    netstat -t

  - Display PID and program names:
    netstat -p

  - List information continuously:
    netstat -c

  - List routes and &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not resolve IP to hostname:
    netstat -rn

  - List listening TCP and UDP ports &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+ user and process &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;re root&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    netstat -lepunt

  - Print the routing table:
    netstat -nr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;활용&#34;&gt;활용&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; netstat -anp
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Active Internet connections &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;servers and established&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 0.0.0.0:8009            0.0.0.0:*               LISTEN      25272/java
...
Active UNIX domain sockets &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;servers and established&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Proto RefCnt Flags       Type       State         I-Node   PID/Program name    Path
unix  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;         DGRAM                    &lt;span style=&#34;color:#ae81ff&#34;&gt;34946&lt;/span&gt;    2800/systemd        /run/user/1000/systemd/notify
unix  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ACC &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;     STREAM     LISTENING     &lt;span style=&#34;color:#ae81ff&#34;&gt;34947&lt;/span&gt;    2800/systemd        /run/user/1000/systemd/private
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help&#34;&gt;Help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; netstat --help
usage: netstat &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-vWeenNcCF&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;Af&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -r         netstat &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;-V|--version|-h|--help&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
       netstat &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-vWnNcaeol&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;Socket&amp;gt; ...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
       netstat &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-vWeenNac&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -i | &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-cWnNe&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -M | -s &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

        -r, --route              display routing table
        -i, --interfaces         display interface table
        -g, --groups             display multicast group memberships
        -s, --statistics         display networking statistics &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;like SNMP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        -M, --masquerade         display masqueraded connections

        -v, --verbose            be verbose
        -W, --wide               don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t truncate IP addresses
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -n, --numeric            don&amp;#39;&lt;/span&gt;t resolve names
        --numeric-hosts          don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t resolve host names
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        --numeric-ports          don&amp;#39;&lt;/span&gt;t resolve port names
        --numeric-users          don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t resolve user names
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -N, --symbolic           resolve hardware names
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -e, --extend             display other/more information
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -p, --programs           display PID/Program name for sockets
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -c, --continuous         continuous listing
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -l, --listening          display listening server sockets
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -a, --all, --listening   display all sockets (default: connected)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -o, --timers             display timers
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -F, --fib                display Forwarding Information Base (default)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -C, --cache              display routing cache instead of FIB
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;lt;Socket&amp;gt;={-t|--tcp} {-u|--udp} {-w|--raw} {-x|--unix} --ax25 --ipx --netrom
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;lt;AF&amp;gt;=Use &amp;#39;&lt;/span&gt;-6|-4&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; or &amp;#39;&lt;/span&gt;-A &amp;lt;af&amp;gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; or &amp;#39;&lt;/span&gt;--&amp;lt;af&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;; default: inet
  List of possible address families &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;which support routing&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    inet &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;DARPA Internet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; inet6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ax25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR AX.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    netrom &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR NET/ROM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ipx &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Novell IPX&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ddp &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Appletalk DDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    x25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CCITT X.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.linuxlab.co.kr/docs/5-4.htm&#34; title=&#34;IP Masquerade&#34;&gt;IP Masquerade&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Inode&#34; title=&#34;I-Node&#34;&gt;I-Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>iostat command</title>
      <link>/posts/linux/command/2020-08-14-iostat/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-14-iostat/</guid>
      <description>linux의 iostat 명령어를 통해 평균 CPU 부하 및 디스크 I/O 정보를 확인 할 수 있습니다.
기본 사용법 $&amp;gt; iostat Linux 4.15.0-112-generic (geeksaga) 08/14/2020 _x86_64_	(8 CPU) avg-cpu: %user %nice %system %iowait %steal %idle 6.92 0.00 2.11 0.03 0.00 90.94 Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn sda 6.00 21.54 202.41 15318970 143972371 dm-0 9.19 21.52 229.52 15308169 163262564 dm-1 0.01 0.00 0.04 2456 30392 출력된 정보는 다음과 같습니다.
 Device : 디바이스 목록 tps : 초당 전송 요청 건수 KB_read/s : 디바이스에서 초당 읽은 데이터 블락 수 KB_wrtn/s : 디바이스에 초당 쓴 데이터 블락 수 KB_read : 디바이스에서 읽은 총 블락 수 KB_wrtn : 디바이스에 쓴 총 블락 수  옵션 사용법  -x : 확장 통계를 보여줍니다.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;iostat&lt;/code&gt; 명령어를 통해 평균 CPU 부하 및 디스크 I/O 정보를 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; iostat
Linux 4.15.0-112-generic &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;geeksaga&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 	08/14/2020 	_x86_64_	&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; CPU&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           6.92    0.00    2.11    0.03    0.00   90.94

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sda               6.00        21.54       202.41   &lt;span style=&#34;color:#ae81ff&#34;&gt;15318970&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;143972371&lt;/span&gt;
dm-0              9.19        21.52       229.52   &lt;span style=&#34;color:#ae81ff&#34;&gt;15308169&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;163262564&lt;/span&gt;
dm-1              0.01         0.00         0.04       &lt;span style=&#34;color:#ae81ff&#34;&gt;2456&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;30392&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Device&lt;/code&gt;    : 디바이스 목록&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tps&lt;/code&gt;       : 초당 전송 요청 건수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KB_read/s&lt;/code&gt; : 디바이스에서 초당 읽은 데이터 블락 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KB_wrtn/s&lt;/code&gt; : 디바이스에 초당 쓴 데이터 블락 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KB_read&lt;/code&gt;   : 디바이스에서 읽은 총 블락 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KB_wrtn&lt;/code&gt;   : 디바이스에 쓴 총 블락 수&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;옵션-사용법&#34;&gt;옵션 사용법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; : 확장 통계를 보여줍니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; iostat -x
Linux 4.15.0-112-generic &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;geeksaga&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 	08/14/2020 	_x86_64_	&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; CPU&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           6.89    0.00    2.09    0.03    0.00   90.99

Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util
sda               0.04     3.46    1.43    4.56    21.48   201.39    74.32     0.02    3.20    0.92    3.91   0.40   0.24
dm-0              0.00     0.00    1.47    7.71    21.47   228.42    54.41     0.04    4.31    1.44    4.86   0.26   0.24
dm-1              0.00     0.00    0.00    0.01     0.00     0.04     8.48     0.00   19.23    0.35   19.62   0.15   0.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-iostat&#34;&gt;TLDR iostat&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr iostat

  iostat

  Report statistics &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; devices and partitions.

  - Display a report of CPU and disk statistics since system startup:
    iostat

  - Display a report of CPU and disk statistics with units converted to megabytes:
    iostat -m

  - Display CPU statistics:
    iostat -c

  - Display disk statistics with disk names &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;including LVM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    iostat -N

  - Display extended disk statistics with disk names &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; device &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sda&amp;#34;&lt;/span&gt;:
    iostat -xN sda

  - Display incremental reports of CPU and disk statistics every &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; seconds:
    iostat &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>vmstat command</title>
      <link>/posts/linux/command/2020-08-14-vmstat/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-14-vmstat/</guid>
      <description>linux의 vmstat 명령어를 통해 프로세스, 메모리, 페이징, I/O, CPU 관련 정보를 확인 할 수 있습니다.
기본 사용법 $&amp;gt; vmstat procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu----- r b swpd free buff cache si so bi bo in cs us sy id wa st 0 0 31232 935260 2147660 4477324 0 0 3 13 4 3 7 2 91 0 0 출력된 정보는 다음과 같습니다.
 procs  r : 실행중이거나 대기중인 기다리고 있는 프로세스의 수 b : 인터럽트가 불가능한 상태로 sleep 상태에 있는 프로세스의 수   memory  swpd : 가상메모리로 사용되는 크기 free : 남아있는 메모리 크기 buff : 버퍼에 사용되고 있는 메모리 크기 cache : 캐시에 사용되고 있는 메로리 크기   swap  si : swap in 된 크기(초당 디스크에서 읽어 메모리 호출된 크기) so : swap out 된 크기(*초당 메모리에서 디스크로 보내지는 크기)   io  bi : 블락 디바이스에서 받은 블락 수 bo : 블락 디바이스로 보낸 블락 수   system  in : 초당 발생하는 인터럽트 수 cs : 초당 발생하는 컨텍스트 스위치 수   cpu  us : nice 시간을 포함하는 사용자 시간 비율 sy : 시스템이 사용한 시간 비율 id : 대기시간 비율(IO-wait 시간 포함) wa : 입출력 대기시간 비율(idle 시간 포함) st : VM 사용시 가상머신이 실제 CPU 를 기다리는 시간 비율     디바이스 종류는 블락 디바이스(Block Device)와 캐릭터 디바이스(Character Device)가 있습니다.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;vmstat&lt;/code&gt; 명령어를 통해 프로세스, 메모리, 페이징, I/O, CPU 관련 정보를 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; vmstat
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;31232&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;935260&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2147660&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4477324&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;procs&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;     : 실행중이거나 대기중인 기다리고 있는 프로세스의 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;     : 인터럽트가 불가능한 상태로 sleep 상태에 있는 프로세스의 수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;swpd&lt;/code&gt;  : 가상메모리로 사용되는 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;free&lt;/code&gt;  : 남아있는 메모리 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buff&lt;/code&gt;  : 버퍼에 사용되고 있는 메모리 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt; : 캐시에 사용되고 있는 메로리 크기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;si&lt;/code&gt;    : swap in 된 크기(초당 디스크에서 읽어 메모리 호출된 크기)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;so&lt;/code&gt;    : swap out 된 크기(*초당 메모리에서 디스크로 보내지는 크기)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bi&lt;/code&gt;    : 블락 디바이스에서 받은 블락 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bo&lt;/code&gt;    : 블락 디바이스로 보낸 블락 수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;in&lt;/code&gt;    : 초당 발생하는 인터럽트 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cs&lt;/code&gt;    : 초당 발생하는 컨텍스트 스위치 수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;    : nice 시간을 포함하는 사용자 시간 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sy&lt;/code&gt;    : 시스템이 사용한 시간 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;    : 대기시간 비율(IO-wait 시간 포함)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wa&lt;/code&gt;    : 입출력 대기시간 비율(idle 시간 포함)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;st&lt;/code&gt;    : VM 사용시 가상머신이 실제 CPU 를 기다리는 시간 비율&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;디바이스 종류는 블락 디바이스(Block Device)와 캐릭터 디바이스(Character Device)가 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;블락 디바이스 : 하드 디스크, CD/DVD, 플로피 디스크등의 장치를 의미하며, 블락이나 섹터 등의 정해진 단위로 데이터를 주고 받습니다.&lt;/li&gt;
&lt;li&gt;캐릭터 디바이스 : 키보드, 마우스, 모니터, 프린터, 테이프 등의 장치가 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;help-vmstat&#34;&gt;help vmstat&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; vmstat --help

Usage:
 vmstat &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;delay &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;count&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;

Options:
 -a, --active           active/inactive memory
 -f, --forks            number of forks since boot
 -m, --slabs            slabinfo
 -n, --one-header       &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not redisplay header
 -s, --stats            event counter statistics
 -d, --disk             disk statistics
 -D, --disk-sum         summarize disk statistics
 -p, --partition &amp;lt;dev&amp;gt;  partition specific statistics
 -S, --unit &amp;lt;char&amp;gt;      define display unit
 -w, --wide             wide output
 -t, --timestamp        show timestamp

 -h, --help     display this help and exit
 -V, --version  output version information and exit

For more details see vmstat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-vmstat&#34;&gt;tldr vmstat&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr vmstat

  vmstat

  Report information about processes, memory, paging, block IO, traps, disks and CPU activity.
  More information: https://linux.die.net/man/8/vmstat.

  - Display virtual memory statistics:
    vmstat

  - Display reports every &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; seconds &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; times:
    vmstat &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>free command</title>
      <link>/posts/linux/command/2020-08-12-free/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-12-free/</guid>
      <description>linux의 free 명령어를 통해 메모리에 대한 정보를 확인 할 수 있습니다.
기본 사용법 $&amp;gt; free total used free shared buff/cache available Mem: 16309896 8769820 983176 423232 6556900 6621048 Swap: 16658428 768 16657660 출력된 정보는 다음과 같습니다.
 Mem : 실제 메모리 Swap : 가상 메모리 total : 전체 메모리 크기(MemTotal and SwapTotal /proc/meminfo) used : 사용중인 메모리 크기(used = total - free -buffers - cache) free : 사용되지 않은 메모리(MemFree and SwapFree /proc/meminfo) shared : buff/cache : 버퍼와 캐시의 합  buffers : 커널이 사용중인 버퍼 크기(Buffers /proc/meminfo) cache : 페이지 캐시와 Slab(Cached and Slab /proc/meminfo)   available : 사용가능한 메모리 크기  help free $&amp;gt; free --help Usage: free [options] Options: -b, --bytes show output in bytes -k, --kilo show output in kilobytes -m, --mega show output in megabytes -g, --giga show output in gigabytes --tera show output in terabytes -h, --human show human-readable output --si use powers of 1000 not 1024 -l, --lohi show detailed low and high memory statistics -t, --total show total for RAM + swap -s N, --seconds N repeat printing every N seconds -c N, --count N repeat printing N times, then exit -w, --wide wide output --help display this help and exit -V, --version output version information and exit For more details see free(1).</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;free&lt;/code&gt; 명령어를 통해 메모리에 대한 정보를 확인 할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; free
              total        used        free      shared  buff/cache   available
Mem:       &lt;span style=&#34;color:#ae81ff&#34;&gt;16309896&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;8769820&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;983176&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;423232&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;6556900&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;6621048&lt;/span&gt;
Swap:      &lt;span style=&#34;color:#ae81ff&#34;&gt;16658428&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;768&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;16657660&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Mem&lt;/code&gt;        : 실제 메모리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Swap&lt;/code&gt;       : 가상 메모리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;total&lt;/code&gt;      : 전체 메모리 크기(MemTotal and SwapTotal /proc/meminfo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;used&lt;/code&gt;       : 사용중인 메모리 크기(used = total - free -buffers - cache)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;free&lt;/code&gt;       : 사용되지 않은 메모리(MemFree and SwapFree /proc/meminfo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shared&lt;/code&gt;     :&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buff/cache&lt;/code&gt; : 버퍼와 캐시의 합
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffers&lt;/code&gt; : 커널이 사용중인 버퍼 크기(Buffers /proc/meminfo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt;   : 페이지 캐시와 Slab(Cached and Slab /proc/meminfo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;available&lt;/code&gt; : 사용가능한 메모리 크기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;help-free&#34;&gt;help free&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; free --help

Usage:
 free &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

Options:
 -b, --bytes         show output in bytes
 -k, --kilo          show output in kilobytes
 -m, --mega          show output in megabytes
 -g, --giga          show output in gigabytes
     --tera          show output in terabytes
 -h, --human         show human-readable output
     --si            use powers of &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; not &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
 -l, --lohi          show detailed low and high memory statistics
 -t, --total         show total &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; RAM + swap
 -s N, --seconds N   repeat printing every N seconds
 -c N, --count N     repeat printing N times, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; exit
 -w, --wide          wide output

     --help     display this help and exit
 -V, --version  output version information and exit

For more details see free&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-free&#34;&gt;tldr free&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr free

  free

  Display amount of free and used memory in the system.

  - Display system memory:
    free

  - Display memory in Bytes/KB/MB/GB:
    free -b|k|m|g

  - Display memory in human readable units:
    free -h

  - Refresh the output every &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; seconds:
    free -s &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Rust Released</title>
      <link>/posts/rust/2020-08-11-rust-released/</link>
      <pubDate>Tue, 11 Aug 2020 10:10:13 +0000</pubDate>
      
      <guid>/posts/rust/2020-08-11-rust-released/</guid>
      <description>Rust 1.51.0 stable is released
Rust Blog  Rust Blog{:target=&amp;ldquo;blank&amp;rdquo;} Inside Rust Blog{:target=&amp;ldquo;blank&amp;rdquo;}  Rust Released  Rust 1.51.0{:target=&amp;ldquo;blank&amp;rdquo;} Rust 1.50.0{:target=&amp;ldquo;blank&amp;rdquo;} Rust 1.45.2{:target=&amp;ldquo;blank&amp;rdquo;} Rust 1.44.0{:target=&amp;ldquo;blank&amp;rdquo;}  </description>
      <content>&lt;p&gt;Rust 1.51.0 stable is released&lt;/p&gt;
&lt;h2 id=&#34;rust-blog&#34;&gt;Rust Blog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org&#34; title=&#34;Rust Blog&#34;&gt;Rust Blog&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/inside-rust/index.html&#34; title=&#34;Inside Rust Blog&#34;&gt;Inside Rust Blog&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rust-released&#34;&gt;Rust Released&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html&#34; title=&#34;Rust 1.51.0&#34;&gt;Rust 1.51.0&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2021/02/11/Rust-1.50.0.html&#34; title=&#34;Rust 1.50.0&#34;&gt;Rust 1.50.0&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2020/08/03/Rust-1.45.2.html&#34; title=&#34;Rust 1.45.2&#34;&gt;Rust 1.45.2&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2020/06/04/Rust-1.44.0.html&#34; title=&#34;Rust 1.44.0&#34;&gt;Rust 1.44.0&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>ifconfig</title>
      <link>/posts/linux/command/2020-08-11-ifconfig/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-11-ifconfig/</guid>
      <description>linux의 ifconfig는 시스템에 설정된 네트워크 인터페이스의 상태를 확인 할 수 있는 명령어 입니다.
$&amp;gt; ifconfig docker0 Link encap:Ethernet HWaddr 02:42:ed:b0:91:f2 inet addr:172.17.0.1 Bcast:172.17.255.255 Mask:255.255.0.0 UP BROADCAST MULTICAST MTU:1500 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) enp3s0 Link encap:Ethernet HWaddr 74:d4:35:1e:a9:87 inet addr:192.168.0.50 Bcast:192.168.0.255 Mask:255.255.255.0 inet6 addr: fe80::3be5:4edf:81f5:2037/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:11149676 errors:0 dropped:0 overruns:0 frame:0 TX packets:9835684 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:3583344722 (3.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;ifconfig&lt;/code&gt;는 시스템에 설정된 네트워크 인터페이스의 상태를 확인 할 수 있는 명령어 입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ifconfig
docker0   Link encap:Ethernet  HWaddr 02:42:ed:b0:91:f2  
          inet addr:172.17.0.1  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0.0 B&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  TX bytes:0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0.0 B&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

enp3s0    Link encap:Ethernet  HWaddr 74:d4:35:1e:a9:87  
          inet addr:192.168.0.50  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::3be5:4edf:81f5:2037/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:11149676 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9835684 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:3583344722 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.5 GB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  TX bytes:1229319911 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.2 GB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:376652 errors:0 dropped:0 overruns:0 frame:0
          TX packets:376652 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:31212407 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;31.2 MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  TX bytes:31212407 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;31.2 MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력된 내용은 부분별로 다음을 의미 합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker0&lt;/code&gt;    : Docker가 설치되어 있는 경우 Docker용 가상 인터페이스가 추가로 설정되어 있습니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enp3s0&lt;/code&gt;     : 유선 네트워크 인터페이스를 의미 합니다.(랜카드)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lo&lt;/code&gt;         : 루프 백 인터페이스로 자기자신과 통신하는데 사용하는 가상 장치를 의미합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HWaddr&lt;/code&gt;     : 하드웨어 주소, 즉 MAC address를 나타낸다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inet addr&lt;/code&gt;  : 할당된 IPv4 주소&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inet6 addr&lt;/code&gt; : 할당된 IPv6 주소&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bcast&lt;/code&gt;      : 브로드캐스트 주소&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mask&lt;/code&gt;       : 넷마스크&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MTU&lt;/code&gt;        : 네트워크 최대 전송 단위(Maxium Transter Unit)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RX packets&lt;/code&gt; : 받은 패킷 정보&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TX packets&lt;/code&gt; : 보낸 패킷 정보&lt;/li&gt;
&lt;li&gt;&lt;code&gt;collisions&lt;/code&gt; : 충돌된 패킷 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;txqueuelen&lt;/code&gt; : 송신 큐 길이를 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;help-ifconfig&#34;&gt;help ifconfig&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ifconfig --help
Usage:
  ifconfig &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-a&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-v&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-s&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;interface&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;&amp;lt;AF&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;add &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;/&amp;lt;prefixlen&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;del &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;/&amp;lt;prefixlen&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;broadcast &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;pointopoint &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;netmask &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dstaddr &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;tunnel &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;outfill &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;keepalive &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hw &amp;lt;HW&amp;gt; &amp;lt;address&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;metric &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mtu &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;trailers&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;arp&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;allmulti&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;multicast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;promisc&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mem_start &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;io_addr &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;irq &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;media &amp;lt;type&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;txqueuelen &amp;lt;NN&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;dynamic&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;up|down&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ...

  &amp;lt;HW&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Hardware Type.
  List of possible hardware types:
    loop &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Local Loopback&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; slip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Serial Line IP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; cslip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;VJ Serial Line IP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    slip6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6-bit Serial Line IP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; cslip6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;VJ 6-bit Serial Line IP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; adaptive &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Adaptive Serial Line IP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    ash &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Ash&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ether &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Ethernet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ax25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR AX.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    netrom &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR NET/ROM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; rose &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR ROSE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; tunnel &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPIP Tunnel&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    ppp &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Point-to-Point Protocol&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; hdlc &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;Cisco&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-HDLC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; lapb &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LAPB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    arcnet &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ARCnet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; dlci &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Frame Relay DLCI&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; frad &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Frame Relay Access Device&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    sit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6-in-IPv4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; fddi &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Fiber Distributed Data Interface&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; hippi &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HIPPI&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    irda &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IrLAP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ec &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Econet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; x25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;generic X.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    eui64 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Generic EUI-64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
  &amp;lt;AF&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Address family. Default: inet
  List of possible address families:
    unix &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UNIX Domain&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; inet &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;DARPA Internet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; inet6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    ax25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR AX.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; netrom &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR NET/ROM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; rose &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AMPR ROSE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    ipx &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Novell IPX&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ddp &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Appletalk DDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ec &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Econet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
    ash &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Ash&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; x25 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CCITT X.25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-ifconfig&#34;&gt;tldr ifconfig&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr ifconfig

  ifconfig

  Network Interface Configurator.

  - View network settings of an ethernet adapter:
    ifconfig eth0

  - Display details of all interfaces, including disabled interfaces:
    ifconfig -a

  - Disable eth0 interface:
    ifconfig eth0 down

  - Enable eth0 interface:
    ifconfig eth0 up

  - Assign IP address to eth0 interface:
    ifconfig eth0 ip_address
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;hhttps://unix.stackexchange.com/questions/134483/why-is-my-ethernet-interface-called-enp0s10-instead-of-eth0&#34; title=&#34;Why is my ethernet interface called enp0s10 instead of eth0?&#34;&gt;Why is my ethernet interface called enp0s10 instead of eth0?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>bash &amp; zsh Shortcuts</title>
      <link>/posts/linux/shell/2020-08-05-zsh-shortcut/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/shell/2020-08-05-zsh-shortcut/</guid>
      <description>자주 사용하는 단축키 목록  CTRL + A : 라인 시작으로 이동 CTRL + E : 라인 끝으로 이동 CTRL + Left Arrow : 한단어 왼쪽으로 이동  ALT + B   CTRL + Right Arrow : 한단어 오른쪽으로 이동  ALT + F   CTRL + U (bash) : 라인 시작 부터 현재 커서까지 삭제 CTRL + U (zsh) : 라인 삭제 CTRL + K : 현재 커서 위치 부터 라인 끝까지 삭제 CTRL + W : 커서 앞 단어 삭제 CTRL + R : 히스토리 검색 CTRL + G : 히스토리 검색 빠져나오기 CTRL + + : 콘솔 폰트 키우기 CTRL + - : 콘솔 폰트 줄이기  zsh 사용시 bindkey 명령어를 이용하여 단축키 목록을 볼 수 있다.</description>
      <content>&lt;h2 id=&#34;자주-사용하는-단축키-목록&#34;&gt;자주 사용하는 단축키 목록&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CTRL + A&lt;/code&gt; : 라인 시작으로 이동&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + E&lt;/code&gt; : 라인 끝으로 이동&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + Left Arrow&lt;/code&gt; : 한단어 왼쪽으로 이동
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ALT + B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + Right Arrow&lt;/code&gt; : 한단어 오른쪽으로 이동
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ALT + F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + U (bash)&lt;/code&gt; : 라인 시작 부터 현재 커서까지 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + U (zsh)&lt;/code&gt; : 라인 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + K&lt;/code&gt; : 현재 커서 위치 부터 라인 끝까지 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + W&lt;/code&gt; : 커서 앞 단어 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + R&lt;/code&gt; : 히스토리 검색&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + G&lt;/code&gt; : 히스토리 검색 빠져나오기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + +&lt;/code&gt; : 콘솔 폰트 키우기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + -&lt;/code&gt; : 콘솔 폰트 줄이기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zsh&lt;/code&gt; 사용시 &lt;code&gt;bindkey&lt;/code&gt; 명령어를 이용하여 단축키 목록을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;전체-단축키-목록&#34;&gt;전체 단축키 목록&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^@&amp;#34;&lt;/span&gt; set-mark-command
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^A&amp;#34;&lt;/span&gt; beginning-of-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^B&amp;#34;&lt;/span&gt; backward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^D&amp;#34;&lt;/span&gt; delete-char-or-list
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^E&amp;#34;&lt;/span&gt; end-of-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^F&amp;#34;&lt;/span&gt; forward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^G&amp;#34;&lt;/span&gt; send-break
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^H&amp;#34;&lt;/span&gt; backward-delete-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^I&amp;#34;&lt;/span&gt; fzf-completion
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^J&amp;#34;&lt;/span&gt; accept-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^K&amp;#34;&lt;/span&gt; kill-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^L&amp;#34;&lt;/span&gt; clear-screen
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^M&amp;#34;&lt;/span&gt; accept-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^N&amp;#34;&lt;/span&gt; down-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^O&amp;#34;&lt;/span&gt; accept-line-and-down-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^P&amp;#34;&lt;/span&gt; up-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Q&amp;#34;&lt;/span&gt; push-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^R&amp;#34;&lt;/span&gt; fzf-history-widget
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^S&amp;#34;&lt;/span&gt; history-incremental-search-forward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^T&amp;#34;&lt;/span&gt; fzf-file-widget
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt; kill-whole-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^V&amp;#34;&lt;/span&gt; quoted-insert
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^W&amp;#34;&lt;/span&gt; backward-kill-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^B&amp;#34;&lt;/span&gt; vi-match-bracket
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^E&amp;#34;&lt;/span&gt; edit-command-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^F&amp;#34;&lt;/span&gt; vi-find-next-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^J&amp;#34;&lt;/span&gt; vi-join
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^K&amp;#34;&lt;/span&gt; kill-buffer
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^N&amp;#34;&lt;/span&gt; infer-next-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^O&amp;#34;&lt;/span&gt; overwrite-mode
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^U&amp;#34;&lt;/span&gt; undo
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^V&amp;#34;&lt;/span&gt; vi-cmd-mode
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X^X&amp;#34;&lt;/span&gt; exchange-point-and-mark
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X*&amp;#34;&lt;/span&gt; expand-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^X=&amp;#34;&lt;/span&gt; what-cursor-position
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^XG&amp;#34;&lt;/span&gt; list-expand
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Xg&amp;#34;&lt;/span&gt; list-expand
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Xr&amp;#34;&lt;/span&gt; history-incremental-search-backward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Xs&amp;#34;&lt;/span&gt; history-incremental-search-forward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Xu&amp;#34;&lt;/span&gt; undo
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Y&amp;#34;&lt;/span&gt; yank
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^D&amp;#34;&lt;/span&gt; list-choices
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^G&amp;#34;&lt;/span&gt; send-break
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^H&amp;#34;&lt;/span&gt; backward-kill-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^I&amp;#34;&lt;/span&gt; self-insert-unmeta
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^J&amp;#34;&lt;/span&gt; self-insert-unmeta
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^L&amp;#34;&lt;/span&gt; clear-screen
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^M&amp;#34;&lt;/span&gt; self-insert-unmeta
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^_&amp;#34;&lt;/span&gt; copy-prev-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[ &amp;#34;&lt;/span&gt; expand-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[!&amp;#34;&lt;/span&gt; expand-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[\&amp;#34;&amp;#34;&lt;/span&gt; quote-region
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[\$&amp;#34;&lt;/span&gt; spell-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[&amp;#39;&amp;#34;&lt;/span&gt; quote-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[-&amp;#34;&lt;/span&gt; neg-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[.&amp;#34;&lt;/span&gt; insert-last-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[0&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[1&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[2&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[3&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[4&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[5&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[6&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[7&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[8&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[9&amp;#34;&lt;/span&gt; digit-argument
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[&amp;lt;&amp;#34;&lt;/span&gt; beginning-of-buffer-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[&amp;gt;&amp;#34;&lt;/span&gt; end-of-buffer-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[?&amp;#34;&lt;/span&gt; which-command
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[A&amp;#34;&lt;/span&gt; accept-and-hold
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[B&amp;#34;&lt;/span&gt; backward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[C&amp;#34;&lt;/span&gt; capitalize-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[D&amp;#34;&lt;/span&gt; kill-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[F&amp;#34;&lt;/span&gt; forward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[G&amp;#34;&lt;/span&gt; get-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[H&amp;#34;&lt;/span&gt; run-help
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[L&amp;#34;&lt;/span&gt; down-case-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[N&amp;#34;&lt;/span&gt; history-search-forward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OA&amp;#34;&lt;/span&gt; up-line-or-beginning-search
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OB&amp;#34;&lt;/span&gt; down-line-or-beginning-search
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OC&amp;#34;&lt;/span&gt; forward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OD&amp;#34;&lt;/span&gt; backward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OF&amp;#34;&lt;/span&gt; end-of-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[OH&amp;#34;&lt;/span&gt; beginning-of-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[P&amp;#34;&lt;/span&gt; history-search-backward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[Q&amp;#34;&lt;/span&gt; push-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[S&amp;#34;&lt;/span&gt; spell-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[T&amp;#34;&lt;/span&gt; transpose-words
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[U&amp;#34;&lt;/span&gt; up-case-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[W&amp;#34;&lt;/span&gt; copy-region-as-kill
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[1;5C&amp;#34;&lt;/span&gt; forward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[1;5D&amp;#34;&lt;/span&gt; backward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[200~&amp;#34;&lt;/span&gt; bracketed-paste
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[2~&amp;#34;&lt;/span&gt; overwrite-mode
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[3~&amp;#34;&lt;/span&gt; delete-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[5~&amp;#34;&lt;/span&gt; up-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[6~&amp;#34;&lt;/span&gt; down-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[A&amp;#34;&lt;/span&gt; up-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[B&amp;#34;&lt;/span&gt; down-line-or-history
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[C&amp;#34;&lt;/span&gt; forward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[D&amp;#34;&lt;/span&gt; backward-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[[Z&amp;#34;&lt;/span&gt; reverse-menu-complete
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[_&amp;#34;&lt;/span&gt; insert-last-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[a&amp;#34;&lt;/span&gt; accept-and-hold
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[b&amp;#34;&lt;/span&gt; backward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[c&amp;#34;&lt;/span&gt; fzf-cd-widget
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[d&amp;#34;&lt;/span&gt; kill-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[f&amp;#34;&lt;/span&gt; forward-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[g&amp;#34;&lt;/span&gt; get-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[h&amp;#34;&lt;/span&gt; run-help
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[l&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ls^J&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[m&amp;#34;&lt;/span&gt; copy-prev-shell-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[n&amp;#34;&lt;/span&gt; history-search-forward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[p&amp;#34;&lt;/span&gt; history-search-backward
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[q&amp;#34;&lt;/span&gt; push-line
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[s&amp;#34;&lt;/span&gt; spell-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[t&amp;#34;&lt;/span&gt; transpose-words
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[u&amp;#34;&lt;/span&gt; up-case-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[w&amp;#34;&lt;/span&gt; kill-region
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[x&amp;#34;&lt;/span&gt; execute-named-cmd
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[y&amp;#34;&lt;/span&gt; yank-pop
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[z&amp;#34;&lt;/span&gt; execute-last-named-cmd
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[|&amp;#34;&lt;/span&gt; vi-goto-column
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^[^?&amp;#34;&lt;/span&gt; backward-kill-word
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^_&amp;#34;&lt;/span&gt; undo
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; magic-space
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;-&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~&amp;#34;&lt;/span&gt; self-insert
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^?&amp;#34;&lt;/span&gt; backward-delete-char
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\M-^@&amp;#34;&lt;/span&gt;-&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\M-^?&amp;#34;&lt;/span&gt; self-insert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.geekmind.net/2011/01/shortcuts-to-improve-your-bash-zsh.html&#34; title=&#34;Shortcuts to improve your bash &amp;amp; zsh productivity&#34;&gt;Shortcuts to improve your bash &amp;amp; zsh productivit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>xargs command</title>
      <link>/posts/linux/command/2020-08-05-xargs/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-05-xargs/</guid>
      <description>linux의 xargs 명령어는 출력된 결과를 인자값으로 이용하여 다른 명령어를 활용할 수 있게 만들어 주는 명령어입니다.
$&amp;gt; find /etc -name &amp;#34;*.conf&amp;#34; | xargs ls -l 위 명령어는 /etc 경로 밑에 있는 .conf로 끝나는 모든 파일을 찾은 다음 파이프(|)를 통해 xargs에 인자값으로 넘겨 주고 ls -l 명령어를 통해서 출력하도록 하는 조합입니다.
응용으로 다음 처럼 특정 파일들만 찾은 후에 파일을 압축하는데 사용할 수도 있습니다.
$&amp;gt; find ~/Downloads -name &amp;#34;*.jpg&amp;#34; -type f | xargs tar -cvzf jpg-images.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;xargs&lt;/code&gt; 명령어는 출력된 결과를 인자값으로 이용하여 다른 명령어를 활용할 수 있게 만들어 주는 명령어입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find /etc -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.conf&amp;#34;&lt;/span&gt; | xargs ls -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 명령어는 &lt;code&gt;/etc&lt;/code&gt; 경로 밑에 있는 &lt;code&gt;.conf&lt;/code&gt;로 끝나는 모든 파일을 찾은 다음 파이프(&lt;code&gt;|&lt;/code&gt;)를 통해 &lt;code&gt;xargs&lt;/code&gt;에 인자값으로 넘겨 주고 &lt;code&gt;ls -l&lt;/code&gt; 명령어를 통해서 출력하도록 하는 조합입니다.&lt;/p&gt;
&lt;p&gt;응용으로 다음 처럼 특정 파일들만 찾은 후에 파일을 압축하는데 사용할 수도 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find ~/Downloads -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.jpg&amp;#34;&lt;/span&gt; -type f | xargs tar -cvzf jpg-images.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-xargs&#34;&gt;help xargs&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; xargs --help
Usage: xargs &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... COMMAND &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INITIAL-ARGS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Run COMMAND with arguments INITIAL-ARGS and more arguments read from input.

Mandatory and optional arguments to long options are also
mandatory or optional &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the corresponding short option.
  -0, --null                   items are separated by a null, not whitespace;
                                 disables quote and backslash processing and
                                 logical EOF processing
  -a, --arg-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE          read arguments from FILE, not standard input
  -d, --delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CHARACTER    items in input stream are separated by CHARACTER,
                                 not by whitespace; disables quote and backslash
                                 processing and logical EOF processing
  -E END                       set logical EOF string; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; END occurs as a line
                                 of input, the rest of the input is ignored
                                 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ignored &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; -0 or -d was specified&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -e, --eof&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;END&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;              equivalent to -E END &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; END is specified;
                                 otherwise, there is no end-of-file string
  -I R                         same as --replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;R
  -i, --replace&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;R&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;            replace R in INITIAL-ARGS with names read
                                 from standard input; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; R is unspecified,
                                 assume &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
  -L, --max-lines&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-LINES    use at most MAX-LINES non-blank input lines per
                                 command line
  -l&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;MAX-LINES&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                similar to -L but defaults to at most one non-
                                 blank input line &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; MAX-LINES is not specified
  -n, --max-args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-ARGS      use at most MAX-ARGS arguments per command line
  -P, --max-procs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-PROCS    run at most MAX-PROCS processes at a time
  -p, --interactive            prompt before running commands
      --process-slot-var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;VAR   set environment variable VAR in child processes
  -r, --no-run-if-empty        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there are no arguments, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not run COMMAND;
                                 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; this option is not given, COMMAND will be
                                 run at least once
  -s, --max-chars&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-CHARS    limit length of command line to MAX-CHARS
      --show-limits            show limits on command-line length
  -t, --verbose                print commands before executing them
  -x, --exit                   exit &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;see -s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; is exceeded
      --help                   display this help and exit
      --version                output version information and exit

Please see also the documentation at http://www.gnu.org/software/findutils/.
You can report &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;and track progress on fixing&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; bugs in the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xargs&amp;#34;&lt;/span&gt;
program via the GNU findutils bug-reporting page at
https://savannah.gnu.org/bugs/?group&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;findutils or, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
you have no web access, by sending email to &amp;lt;bug-findutils@gnu.org&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-xargs&#34;&gt;tldr xargs&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr xargs

  xargs

  Execute a command with piped arguments coming from another command, a file, etc.
  The input is treated as a single block of text and split into separate arguments on spaces, tabs, newlines and end-of-file.

  - Main usage pattern:
    arguments_source | xargs command

  - Delete all files with a .backup extension. -print0 on find uses a null character to split the files, and -0 changes the delimiter to the null character &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;useful &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s whitespace in filenames):
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    find . -name &amp;#39;&lt;/span&gt;*.backup&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; -print0 | xargs -0 rm -v

  - Execute the command once &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each input line, replacing any occurrences of the placeholder &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;here marked as _&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; with the input line:
    arguments_source | xargs -I _ command _ optional_extra_arguments

  - Parallel runs of up to max-procs processes at a time; the default is 1. If max-procs is 0, xargs will run as many processes as possible at a time:
    arguments_source | xargs -P max-procs command
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>awk &amp; gawk command</title>
      <link>/posts/linux/command/2020-08-03-awk/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-03-awk/</guid>
      <description>linux의 awk 명령어는 GNU 버전의 gawk로 심볼릭 링크되어 있습니다.
awk는 최초 기능을 만든 Aho + Weinberger + Kernighan(A:Alfred V. Aho, W:Peter J. Weinberger, K:Brian W. Kernighan) 3명의 이니셜을 조합하여 만든 이름 입니다.
표준 입력에 의한 데이터를 조작하거나 데이터화하는 용도로 사용하는 명령어 입니다.
기본 사용법 표준 입력 또는 파일을 읽어들여 &amp;lsquo;&amp;lsquo;로 둘러싸인 패턴을 읽어 들여 공백 또는 탭을 기준으로 파싱해서 $1 부터 시작하는 변수를 만들어 줍니다.
참고로 $0은 입력된 모든 값을 가지고 있습니다.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;awk&lt;/code&gt; 명령어는 GNU 버전의 &lt;code&gt;gawk&lt;/code&gt;로 심볼릭 링크되어 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;는 최초 기능을 만든 Aho + Weinberger + Kernighan(A:Alfred V. Aho, W:Peter J. Weinberger, K:Brian W. Kernighan) 3명의 이니셜을 조합하여 만든 이름 입니다.&lt;/p&gt;
&lt;p&gt;표준 입력에 의한 데이터를 조작하거나 데이터화하는 용도로 사용하는 명령어 입니다.&lt;/p&gt;
&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;p&gt;표준 입력 또는 파일을 읽어들여 &amp;lsquo;&amp;lsquo;로 둘러싸인 패턴을 읽어 들여 공백 또는 탭을 기준으로
파싱해서 $1 부터 시작하는 변수를 만들어 줍니다.&lt;/p&gt;
&lt;p&gt;참고로 $0은 입력된 모든 값을 가지고 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ls -l | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $0}&amp;#39;&lt;/span&gt;
drwxr-xr-x     - geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; May 11:56 Desktop
drwxr-xr-x     - geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; May 14:03 Documents
drwxrwxr-x     - geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Jan 11:42 dotfiles
drwxr-xr-x     - geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; Aug 10:33 Downloads
drwxrwxr-x     - geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt; Jul 10:54 geeksaga
drwxrwxr-x     - geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; Apr  &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; node_modules
drwxr-xr-x     - geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt; Public
drwxr-xr-x     - geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt; Templates

$&amp;gt; ls -l | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;
drwxr-xr-x
drwxr-xr-x
drwxrwxr-x
drwxr-xr-x
drwxrwxr-x
drwxrwxr-x
drwxr-xr-x
drwxr-xr-x

.$&amp;gt; ls -l | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1, $7}&amp;#39;&lt;/span&gt;
drwxr-xr-x Desktop
drwxr-xr-x Documents
drwxrwxr-x dotfiles
drwxr-xr-x Downloads
drwxrwxr-x geeksaga
drwxrwxr-x node_modul
drwxr-xr-x Public
drwxr-xr-x Templates
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-awk&#34;&gt;help awk&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; awk --help
Usage: awk &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;POSIX or GNU style options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -f progfile &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;--&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; file ...
Usage: awk &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;POSIX or GNU style options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;--&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;program&amp;#39;&lt;/span&gt; file ...
POSIX options:		GNU long options: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;standard&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	-f progfile		--file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;progfile
	-F fs			--field-separator&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fs
	-v var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;val		--assign&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;val
Short options:		GNU long options: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;extensions&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	-b			--characters-as-bytes
	-c			--traditional
	-C			--copyright
	-d&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;		--dump-variables&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	-D&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;		--debug&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	-e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;program-text&amp;#39;&lt;/span&gt;	--source&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;program-text&amp;#39;&lt;/span&gt;
	-E file			--exec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;file
	-g			--gen-pot
	-h			--help
	-i includefile		--include&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;includefile
	-l library		--load&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;library
	-L&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fatal|invalid&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;	--lint&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;fatal|invalid&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	-M			--bignum
	-N			--use-lc-numeric
	-n			--non-decimal-data
	-o&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;		--pretty-print&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	-O			--optimize
	-p&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;		--profile&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	-P			--posix
	-r			--re-interval
	-S			--sandbox
	-t			--lint-old
	-V			--version

To report bugs, see node &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;Bugs&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; in `gawk.info&amp;#39;&lt;/span&gt;, which is
section &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;Reporting Problems and Bugs&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; in the printed version.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;gawk is a pattern scanning and processing language.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;By default it reads standard input and writes standard output.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Examples:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	gawk &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; sum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; $1 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; END &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; print sum &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; file
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	gawk -F: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; print $1 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; /etc/passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-awk&#34;&gt;tldr awk&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr awk

  awk

  A versatile programming language &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; working on files.
  More information: https://github.com/onetrueawk/awk.

  - Print the fifth column &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a.k.a. field&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in a space-separated file:
    awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $5}&amp;#39;&lt;/span&gt; filename

  - Print the second column of the lines containing &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;something&amp;#34;&lt;/span&gt; in a space-separated file:
    awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/something/ {print $2}&amp;#39;&lt;/span&gt; filename

  - Print the last column of each line in a file, using a comma &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;instead of space&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as a field separator:
    awk -F &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $NF}&amp;#39;&lt;/span&gt; filename

  - Sum the values in the first column of a file and print the total:
    awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{s+=$1} END {print s}&amp;#39;&lt;/span&gt; filename

  - Sum the values in the first column and pretty-print the values and &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; the total:
    awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{s+=$1; print $1} END {print &amp;#34;--------&amp;#34;; print s}&amp;#39;&lt;/span&gt; filename

  - Print every third line starting from the first line:
    awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NR%3==1&amp;#39;&lt;/span&gt; filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>grep command</title>
      <link>/posts/linux/command/2020-08-03-grep/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-03-grep/</guid>
      <description>linux의 grep은 파일 또는 표준 입력(Standard input)에 대해서 특정 패턴을 통해 검색 해주는 명령어 입니다.
패턴에 대해서는 기본값으로 기본 정규 표현식(basic regular expression - BRE)을 지원 합니다.
기본적인 사용 법은 다음과 같습니다.
$&amp;gt; grep Usage: grep [OPTION]... PATTERN [FILE]... Try &amp;#39;grep --help&amp;#39; for more information. $&amp;gt; grep Error /var/log/syslog Aug 3 10:20:25 geeksaga org.a11y.Bus[4449]: ** (process:4467): WARNING **: Failed to register client: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .</description>
      <content>&lt;p&gt;linux의 grep은 파일 또는 표준 입력(Standard input)에 대해서 특정 패턴을 통해 검색 해주는 명령어 입니다.&lt;/p&gt;
&lt;p&gt;패턴에 대해서는 기본값으로 기본 정규 표현식(basic regular expression - BRE)을 지원 합니다.&lt;/p&gt;
&lt;p&gt;기본적인 사용 법은 다음과 같습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; grep
Usage: grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... PATTERN &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Try &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep --help&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more information.

$&amp;gt; grep Error /var/log/syslog
Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 10:20:25 geeksaga org.a11y.Bus&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4449&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: ** &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;process:4467&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: WARNING **: Failed to register client: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .service files
Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 10:20:25 geeksaga org.freedesktop.systemd1&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4449&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: ** &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;process:4476&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: WARNING **: cgmanager method call org.linuxcontainers.cgmanager0_0.MovePidAbs failed: GDBus.Error:org.freedesktop.DBus.Error.InvalidArgs: invalid request.  Use G_DBUS_DEBUG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;message &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more info.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;표준 입력(Standard input)을 이용한 방법&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; dmesg | grep random
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    0.000000&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: get_random_bytes called from start_kernel+0x99/0x51e with crng_init&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    1.035100&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: systemd-udevd: uninitialized urandom read &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; bytes read&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    1.035156&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: systemd-udevd: uninitialized urandom read &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; bytes read&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    1.035164&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: systemd-udevd: uninitialized urandom read &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; bytes read&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    1.991103&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: fast init &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;   45.515726&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: crng init &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;   45.515727&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; random: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; urandom warning&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; missed due to ratelimiting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-grep&#34;&gt;help grep&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; grep --help
Usage: grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... PATTERN &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; PATTERN in each FILE or standard input.
PATTERN is, by default, a basic regular expression &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;BRE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
Example: grep -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt; menu.h main.c

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ERE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -F, --fixed-strings       PATTERN is a set of newline-separated strings
  -G, --basic-regexp        PATTERN is a basic regular expression &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;BRE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -P, --perl-regexp         PATTERN is a Perl regular expression
  -e, --regexp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PATTERN      use PATTERN &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; matching
  -f, --file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines
  -z, --null-data           a data line ends in &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; byte, not newline

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --invert-match        &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; non-matching lines
  -V, --version             display version information and exit
      --help                display this help text and exit

Output control:
  -m, --max-count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUM       stop after NUM matches
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
      --line-buffered       flush output on every line
  -H, --with-filename       print the file name &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each match
  -h, --no-filename         suppress the file name prefix on output
      --label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LABEL         use LABEL as the standard input file name prefix
  -o, --only-matching       show only the part of a line matching PATTERN
  -q, --quiet, --silent     suppress all normal output
      --binary-files&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;TYPE   assume that binary files are TYPE;
                            TYPE is &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;binary&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;, or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;without-match&amp;#39;&lt;/span&gt;
  -a, --text                equivalent to --binary-files&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;text
  -I                        equivalent to --binary-files&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;without-match
  -d, --directories&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ACTION  how to handle directories;
                            ACTION is &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;read&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;recurse&amp;#39;&lt;/span&gt;, or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;skip&amp;#39;&lt;/span&gt;
  -D, --devices&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ACTION      how to handle devices, FIFOs and sockets;
                            ACTION is &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;read&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;skip&amp;#39;&lt;/span&gt;
  -r, --recursive           like --directories&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;recurse
  -R, --dereference-recursive  likewise, but follow all symlinks
      --include&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE_PATTERN  search only files that match FILE_PATTERN
      --exclude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE_PATTERN  skip files and directories matching FILE_PATTERN
      --exclude-from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE   skip files matching any file pattern from FILE
      --exclude-dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PATTERN  directories that match PATTERN will be skipped.
  -L, --files-without-match  print only names of FILEs containing no match
  -l, --files-with-matches  print only names of FILEs containing matches
  -c, --count               print only a count of matching lines per FILE
  -T, --initial-tab         make tabs line up &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; needed&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -Z, --null                print &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; byte after FILE name

Context control:
  -B, --before-context&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUM  print NUM lines of leading context
  -A, --after-context&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUM   print NUM lines of trailing context
  -C, --context&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUM         print NUM lines of output context
  -NUM                      same as --context&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NUM
      --color&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;WHEN&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
      --colour&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;WHEN&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;       use markers to highlight the matching strings;
                            WHEN is &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;always&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;never&amp;#39;&lt;/span&gt;, or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auto&amp;#39;&lt;/span&gt;
  -U, --binary              &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not strip CR characters at EOL &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MSDOS/Windows&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -u, --unix-byte-offsets   report offsets as &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; CRs were not there
                            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MSDOS/Windows&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;egrep&amp;#39;&lt;/span&gt; means &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep -E&amp;#39;&lt;/span&gt;.  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fgrep&amp;#39;&lt;/span&gt; means &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep -F&amp;#39;&lt;/span&gt;.
Direct invocation as either &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;egrep&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fgrep&amp;#39;&lt;/span&gt; is deprecated.
When FILE is -, read standard input.  With no FILE, read . &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a command-line
-r is given, - otherwise.  If fewer than two FILEs are given, assume -h.
Exit status is &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; any line is selected, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; otherwise;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; any error occurs and -q is not given, the exit status is 2.

Report bugs to: bug-grep@gnu.org
GNU grep home page: &amp;lt;http://www.gnu.org/software/grep/&amp;gt;
General help using GNU software: &amp;lt;http://www.gnu.org/gethelp/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-grep&#34;&gt;tldr grep&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr grep

  grep

  Matches patterns in input text.
  Supports simple patterns and regular expressions.

  - Search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; an exact string:
    grep search_string path/to/file

  - Search in &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;-insensitive mode:
    grep -i search_string path/to/file

  - Search recursively &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ignoring non-text files&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in current directory &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; an exact string:
    grep -RI search_string .

  - Use extended regular expressions &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;supporting ?, +, &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; and |&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    grep -E ^regex$ path/to/file

  - Print &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; lines of &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;C&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;ontext around, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;B&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;efore, or &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;A&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;fter each match:
    grep -C|B|A &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; search_string path/to/file

  - Print file name with the corresponding line number &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each match:
    grep -Hn search_string path/to/file

  - Use the standard input instead of a file:
    cat path/to/file | grep search_string

  - Invert match &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; excluding specific strings:
    grep -v search_string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man1/grep.1.html&#34; title=&#34;grep man-page&#34;&gt;man7 man grep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>sed command</title>
      <link>/posts/linux/command/2020-08-03-sed/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-03-sed/</guid>
      <description>linux의 sed(Stream editor) 명령은 패턴을 통해 텍스트를 변환하여 출력해주는 스트림 편집기입니다.
help sed $&amp;gt; sed Usage: sed [OPTION]... {script-only-if-no-other-script} [input-file]... -n, --quiet, --silent suppress automatic printing of pattern space -e script, --expression=script add the script to the commands to be executed -f script-file, --file=script-file add the contents of script-file to the commands to be executed --follow-symlinks follow symlinks when processing in place -i[SUFFIX], --in-place[=SUFFIX] edit files in place (makes backup if SUFFIX supplied) -l N, --line-length=N specify the desired line-wrap length for the `l&amp;#39; command --posix disable all GNU extensions.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;sed&lt;/code&gt;(Stream editor) 명령은 패턴을 통해 텍스트를 변환하여 출력해주는 스트림 편집기입니다.&lt;/p&gt;
&lt;h2 id=&#34;help-sed&#34;&gt;help sed&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sed
Usage: sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;script-only-if-no-other-script&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;input-file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...

  -n, --quiet, --silent
                 suppress automatic printing of pattern space
  -e script, --expression&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;script
                 add the script to the commands to be executed
  -f script-file, --file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;script-file
                 add the contents of script-file to the commands to be executed
  --follow-symlinks
                 follow symlinks when processing in place
  -i&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;SUFFIX&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, --in-place&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;SUFFIX&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                 edit files in place &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;makes backup &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; SUFFIX supplied&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -l N, --line-length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N
                 specify the desired line-wrap length &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;l&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; command
  --posix
                 disable all GNU extensions.
  -r, --regexp-extended
                 use extended regular expressions in the script.
  -s, --separate
                 consider files as separate rather than as a single continuous
                 long stream.
  -u, --unbuffered
                 load minimal amounts of data from the input files and flush
                 the output buffers more often
  -z, --null-data
                 separate lines by NUL characters
      --help     display this help and exit
      --version  output version information and exit

If no -e, --expression, -f, or --file option is given, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; the first
non-option argument is taken as the sed script to interpret.  All
remaining arguments are names of input files; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; no input files are
specified, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; the standard input is read.

GNU sed home page: &amp;lt;http://www.gnu.org/software/sed/&amp;gt;.
General help using GNU software: &amp;lt;http://www.gnu.org/gethelp/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-sed&#34;&gt;tldr sed&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr sed

  sed

  Edit text in a scriptable manner.

  - Replace the first occurrence of a regular expression in each line of a file, and print the result:
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/regex/replace/&amp;#39;&lt;/span&gt; filename

  - Replace all occurrences of an extended regular expression in a file, and print the result:
    sed -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/regex/replace/g&amp;#39;&lt;/span&gt; filename

  - Replace all occurrences of a string in a file, overwriting the file &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i.e. in-place&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/find/replace/g&amp;#39;&lt;/span&gt; filename

  - Replace only on lines matching the line pattern:
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/line_pattern/s/find/replace/&amp;#39;&lt;/span&gt; filename

  - Delete lines matching the line pattern:
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/line_pattern/d&amp;#39;&lt;/span&gt; filename

  - Print only text between n-th line till the next empty line:
    sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n,/^$/p&amp;#39;&lt;/span&gt; filename

  - Apply multiple find-replace expressions to a file:
    sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/find/replace/&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/find/replace/&amp;#39;&lt;/span&gt; filename

  - Replace separator / by any other character not used in the find or replace patterns, e.g., &lt;span style=&#34;color:#75715e&#34;&gt;#:&lt;/span&gt;
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s#find#replace#&amp;#39;&lt;/span&gt; filename

  - Print only the n-th line of a file:
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nq;d&amp;#39;&lt;/span&gt; filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>watch command</title>
      <link>/posts/linux/command/2020-08-03-watch/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-03-watch/</guid>
      <description>linux의 watch 명령어는 특정 명령어를 반복하여 실행할 때 유용한 명령어 입니다.
$&amp;gt; watch -n 3 df 간단한 쉘스크립트를 이용해도 비슷한 효과를 볼 수 있습니다.
$&amp;gt; while true \n do \n df \n sleep 3 \n done help watch $&amp;gt; watch --help Usage: watch [options] command Options: -b, --beep beep if command has a non-zero exit -c, --color interpret ANSI color and style sequences -d, --differences[=&amp;lt;permanent&amp;gt;] highlight changes between updates -e, --errexit exit if command has a non-zero exit -g, --chgexit exit when output from command changes -n, --interval &amp;lt;secs&amp;gt; seconds to wait between updates -p, --precise attempt run command in precise intervals -t, --no-title turn off header -x, --exec pass command to exec instead of &amp;#34;sh -c&amp;#34; -h, --help display this help and exit -v, --version output version information and exit For more details see watch(1 Usage: uptime [options] Options: -p, --pretty show uptime in pretty format -h, --help display this help and exit -s, --since system up since -V, --version output version information and exit For more details see uptime(1).</description>
      <content>&lt;p&gt;linux의 watch 명령어는 특정 명령어를 반복하여 실행할 때 유용한 명령어 입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;간단한 쉘스크립트를 이용해도 비슷한 효과를 볼 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
df &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-watch&#34;&gt;help watch&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; watch --help

Usage:
 watch &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; command

Options:
  -b, --beep             beep &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; command has a non-zero exit
  -c, --color            interpret ANSI color and style sequences
  -d, --differences&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;&amp;lt;permanent&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                         highlight changes between updates
  -e, --errexit          exit &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; command has a non-zero exit
  -g, --chgexit          exit when output from command changes
  -n, --interval &amp;lt;secs&amp;gt;  seconds to wait between updates
  -p, --precise          attempt run command in precise intervals
  -t, --no-title         turn off header
  -x, --exec             pass command to exec instead of &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sh -c&amp;#34;&lt;/span&gt;

 -h, --help     display this help and exit
 -v, --version  output version information and exit

For more details see watch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

Usage:
 uptime &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

Options:
 -p, --pretty   show uptime in pretty format
 -h, --help     display this help and exit
 -s, --since    system up since
 -V, --version  output version information and exit

For more details see uptime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-watch&#34;&gt;tldr watch&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr watch

  watch

  Execute a command repeatedly, and monitor the output in full-screen mode.

  - Monitor files in the current directory:
    watch ls

  - Monitor disk space and highlight the changes:
    watch -d df

  - Monitor &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt; processes, refreshing every &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; seconds:
    watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ps aux | grep node&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>ulimit command</title>
      <link>/posts/linux/command/2020-07-31-ulimit/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-31-ulimit/</guid>
      <description>linux의 ulimit 명령은 프로세스의 자원 한도를 설정하는 명령어 입니다.
보여 주는 형식은 Linux 또는 커널 버전 마다 다르지만 보여주는 내용은 비슷 합니다.
제한 설정은 soft 또는 hard로 나누어 집니다.
soft : 프로그램을 새로 시작하면 기본으로 적용되는 제한. hard : soft에서 설정할 수 있는 최대 제한.
CentOS or Ubuntu 20.x LTS $&amp;gt; ulimit -a core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 3560 max locked memory (kbytes, -l) 64 max memory size (kbytes, -m) unlimited open files (-n) 1024 pipe size (512 bytes, -p) 8 POSIX message queues (bytes, -q) 819200 real-time priority (-r) 0 stack size (kbytes, -s) 8192 cpu time (seconds, -t) unlimited max user processes (-u) 3560 virtual memory (kbytes, -v) unlimited file locks (-x) unlimited Mint or Ubuntu 18.</description>
      <content>&lt;p&gt;linux의 ulimit 명령은 프로세스의 자원 한도를 설정하는 명령어 입니다.&lt;/p&gt;
&lt;p&gt;보여 주는 형식은 Linux 또는 커널 버전 마다 다르지만 보여주는 내용은 비슷 합니다.&lt;/p&gt;
&lt;p&gt;제한 설정은 soft 또는 hard로 나누어 집니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;soft&lt;/code&gt; : 프로그램을 새로 시작하면 기본으로 적용되는 제한.
&lt;code&gt;hard&lt;/code&gt; : &lt;code&gt;soft&lt;/code&gt;에서 설정할 수 있는 최대 제한.&lt;/p&gt;
&lt;h3 id=&#34;centos-or-ubuntu-20x-lts&#34;&gt;CentOS or Ubuntu 20.x LTS&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ulimit -a
core file size          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;blocks, -c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
data seg size           &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes, -d&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
scheduling priority             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
file size               &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;blocks, -f&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
pending signals                 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-i&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3560&lt;/span&gt;
max locked memory       &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes, -l&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
max memory size         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes, -m&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
open files                      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-n&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
pipe size            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes, -p&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
POSIX message queues     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;bytes, -q&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;819200&lt;/span&gt;
real-time priority              &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-r&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
stack size              &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes, -s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt;
cpu time               &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seconds, -t&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
max user processes              &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-u&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3560&lt;/span&gt;
virtual memory          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes, -v&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
file locks                      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mint-or-ubuntu-18x-lts&#34;&gt;Mint or Ubuntu 18.x LTS&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ulimit -a
-t: cpu time &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seconds&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;              unlimited
-f: file size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;blocks&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;              unlimited
-d: data seg size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;          unlimited
-s: stack size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;             &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt;
-c: core file size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;blocks&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
-m: resident set size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;      unlimited
-u: processes                       &lt;span style=&#34;color:#ae81ff&#34;&gt;63465&lt;/span&gt;
-n: file descriptors                &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
-l: locked-in-memory size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
-v: address space &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;kbytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;          unlimited
-x: file locks                      unlimited
-i: pending signals                 &lt;span style=&#34;color:#ae81ff&#34;&gt;63465&lt;/span&gt;
-q: bytes in POSIX msg queues       &lt;span style=&#34;color:#ae81ff&#34;&gt;819200&lt;/span&gt;
-e: max nice                        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
-r: max rt priority                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
-N 15:                              unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;옵션&#34;&gt;옵션&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; : 모든 제한 값 출력&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t cpu time (seconds)&lt;/code&gt; : CPU의 초당 사용시간&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f file size (blocks)&lt;/code&gt; : 쉘에 의해 생성된 파일의 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d data seg size (kbytes)&lt;/code&gt; : 프로세스의 데이터 세그먼트 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s stack size (kbytes)&lt;/code&gt; : 스택 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c core file size (blocks)&lt;/code&gt; : core 파일이 생성될 때 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m resident set size (kbytes)&lt;/code&gt; : 메모리에 상주 가능한 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u processes&lt;/code&gt; : 특정 사용자의 사용가능한 프로세스의 최대 개수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n file descriptors&lt;/code&gt; : 오픈가능한 FD의 개수
&lt;ul&gt;
&lt;li&gt;too many open file 에러 발생시 해당 값을 조절 할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l locked-in-memory size (kbytes)&lt;/code&gt; : 메모리에 잠길 수 있는 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v address space (kbytes)&lt;/code&gt; : 쉘이 사용할 수 있는 가상 메모리 최대 크기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x file locks&lt;/code&gt; : 최대 파일 잠금 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i pending signals&lt;/code&gt; : 보류중인 signal의 최대 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q bytes in POSIX msg queues&lt;/code&gt; : POSIX 메시지 대기 큐의 최대 byte 수&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e max nice, scheduling priority&lt;/code&gt; : 최대 우선 예약 순위&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r max rt priority, real-time priority&lt;/code&gt; : 최대 실시간 스케줄링 우선 순위&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p pipe size&lt;/code&gt; : 512 byte 블럭으로 파이프 크기를 설정&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N 15&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;설정&#34;&gt;설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ulimit&lt;/code&gt; 명령어를 통한 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; ulimit -n
&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
$&amp;gt; ulimit -n &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;명령어를 통한 설정은 해당 세션에서만 유요합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/security/limits.conf&lt;/code&gt; 파일을 통해 user 별로 영구적인 설정이 가능합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&amp;lt;domain&amp;gt;      &amp;lt;type&amp;gt;  &amp;lt;item&amp;gt;         &amp;lt;value&amp;gt;&lt;/span&gt;
geeksaga       soft    nofile          &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;
geeksaga       hard    nofile          &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/profile&lt;/code&gt;를 통해 로그인 한 세션에 대한 설정을 할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; vi /etc/profile
...
&lt;span style=&#34;color:#75715e&#34;&gt;# ulimit setting&lt;/span&gt;
ulimt -n &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# open files&lt;/span&gt;
...
$&amp;gt; source /etc/profile

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-ulimit&#34;&gt;tldr ulimit&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr ulimit

  ulimit

  Get and set user limits.

  - Get the properties of all the user limits:
    ulimit -a

  - Get hard limit &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the number of simultaneously opened files:
    ulimit -H -n

  - Get soft limit &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the number of simultaneously opened files:
    ulimit -S -n

  - Set max per-user process limit:
    ulimit -u &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manpagez.com/man/1/ulimit/&#34; title=&#34;ulimit man-page&#34;&gt;man-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>top command</title>
      <link>/posts/linux/command/2020-07-30-top/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-30-top/</guid>
      <description>linux의 top 명령을 통해 실시간 수행중인 프로세스들에 대한 정보를 볼 수 있습니다.
top 자체 명령어가 많기 때문에 Man page를 이용하면 좋습니다.
$&amp;gt; top top - 15:01:58 up 3 days, 51 min, 1 user, load average: 0.32, 0.21, 0.15 Tasks: 370 total, 1 running, 298 sleeping, 0 stopped, 0 zombie %Cpu(s): 1.6 us, 1.0 sy, 0.0 ni, 97.4 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st KiB Mem : 16309896 total, 5783464 free, 5049060 used, 5477372 buff/cache KiB Swap: 16658428 total, 16234492 free, 423936 used.</description>
      <content>&lt;p&gt;linux의 top 명령을 통해 실시간 수행중인 프로세스들에 대한 정보를 볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;top 자체 명령어가 많기 때문에 Man page를 이용하면 좋습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; top
top - 15:01:58 up &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; days, &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; min,  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; user,  load average: 0.32, 0.21, 0.15
Tasks: &lt;span style=&#34;color:#ae81ff&#34;&gt;370&lt;/span&gt; total,   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; running, &lt;span style=&#34;color:#ae81ff&#34;&gt;298&lt;/span&gt; sleeping,   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; stopped,   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; zombie
%Cpu&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:  1.6 us,  1.0 sy,  0.0 ni, 97.4 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem : &lt;span style=&#34;color:#ae81ff&#34;&gt;16309896&lt;/span&gt; total,  &lt;span style=&#34;color:#ae81ff&#34;&gt;5783464&lt;/span&gt; free,  &lt;span style=&#34;color:#ae81ff&#34;&gt;5049060&lt;/span&gt; used,  &lt;span style=&#34;color:#ae81ff&#34;&gt;5477372&lt;/span&gt; buff/cache
KiB Swap: &lt;span style=&#34;color:#ae81ff&#34;&gt;16658428&lt;/span&gt; total, &lt;span style=&#34;color:#ae81ff&#34;&gt;16234492&lt;/span&gt; free,   &lt;span style=&#34;color:#ae81ff&#34;&gt;423936&lt;/span&gt; used. &lt;span style=&#34;color:#ae81ff&#34;&gt;10597528&lt;/span&gt; avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
&lt;span style=&#34;color:#ae81ff&#34;&gt;15846&lt;/span&gt; geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8653140&lt;/span&gt; 2.064g &lt;span style=&#34;color:#ae81ff&#34;&gt;115348&lt;/span&gt; S   7.6 13.3  19:31.57 java
 &lt;span style=&#34;color:#ae81ff&#34;&gt;1840&lt;/span&gt; root      &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;524728&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;57744&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40812&lt;/span&gt; S   3.6  0.4 261:11.12 Xorg
 &lt;span style=&#34;color:#ae81ff&#34;&gt;3786&lt;/span&gt; geeksga   &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;545492&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;42624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;15772&lt;/span&gt; S   2.3  0.3   4:47.24 gnome-terminal-
 &lt;span style=&#34;color:#ae81ff&#34;&gt;1394&lt;/span&gt; root      &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4396&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1260&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1228&lt;/span&gt; S   0.7  0.0   1:13.78 acpid
 &lt;span style=&#34;color:#ae81ff&#34;&gt;1933&lt;/span&gt; root     -51   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; S   0.7  0.0  50:49.49 irq/33-nvidia
 &lt;span style=&#34;color:#ae81ff&#34;&gt;3816&lt;/span&gt; geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;121736&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20556&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;6540&lt;/span&gt; S   0.7  0.1   0:04.53 nvim
&lt;span style=&#34;color:#ae81ff&#34;&gt;17283&lt;/span&gt; geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;43364&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4120&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3240&lt;/span&gt; S   0.7  0.0   0:04.90 top
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위에 출력된 내용은 부분별로 다음 정보를 의미 합니다.&lt;/p&gt;
&lt;h3 id=&#34;uptime--load-averages&#34;&gt;UPTIME &amp;amp; LOAD Averages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;top - 15:01:58 up 3 days, 51 min,  1 user,  load average: 0.32, 0.21, 0.15&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../uptime/&#34; title=&#34;uptime&#34;&gt;uptime&lt;/a&gt; 부분에서 설명한 내용과 동일합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;task--cpu-states&#34;&gt;TASK &amp;amp; CPU States&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Tasks: 370 total,   1 running, 298 sleeping,   0 stopped,   0 zombie&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;전체 실행 중인 프로세스 개수를 total, running, sleeping, stopped, zombie로 구분하여 보여줍니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%Cpu(s):  1.6 us,  1.0 sy,  0.0 ni, 97.4 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;us, user&lt;/code&gt; : &lt;code&gt;un-niced&lt;/code&gt;가 아닌 user 프로세스 사용률&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sy, system&lt;/code&gt; : 시스템(kernel)이 프로세스 사용률&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ni, nice&lt;/code&gt; : &lt;code&gt;niced&lt;/code&gt; user 프로세스 사용률&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id, idle&lt;/code&gt; : 시스템(kernel)이 일하지 않는 시간 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wa, IO-wait&lt;/code&gt; : I/O를 기다리는 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hi, Hard Interrupt&lt;/code&gt; : 하드웨어 인터럽트에 소요된 시간 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;si, Soft Interrupt&lt;/code&gt; : 소프트웨어 인터럽트에 소요 시간 비율&lt;/li&gt;
&lt;li&gt;&lt;code&gt;st, Steal Time&lt;/code&gt; : 가상화 시스템에서 실제 CPU를 할당받기 위해 기다리는 시간 비율&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;memory-usage&#34;&gt;MEMORY Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;KiB Mem : 16309896 total,  2533064 free,  6246652 used,  7530180 buff/cache&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;물리 메모리의 total, free, used, buff/cache를 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KiB Swap: 16658428 total, 16244476 free,   413952 used.  9316720 avail Mem&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;가강 메모리의 total, free, used, avail Mem(물리 메모리)를 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields--columns&#34;&gt;FIELDS / Columns&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PID -- Process ID&lt;/code&gt; : 프로세스 아이디&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USER&lt;/code&gt; : 프로세스를 실행시킨 사용자 아이디&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PR -- Priority&lt;/code&gt; : 프로세스 우선순위&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NI -- Nice&lt;/code&gt; : Nice 값을 나타내며, 음수를 가지는 값이 우선순위가 높다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VIRT -- Virtual Memory Size (KiB)&lt;/code&gt; : 프로세스가 사용하고 있는 전체 가상 메모리 사용량&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RES -- Resident Memory Size (KiB)&lt;/code&gt; : 스왑되지 않고 프로세스가 실제 사용중인 물리 메모리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SHR -- Shared Memory Size (KiB)&lt;/code&gt; : 다른 프로세스와 공유할 수 있는 메모리의 크기를 나타낸다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S -- Process Status&lt;/code&gt; : 프로세스 상태
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; = uninterruptible sleep(I/O 작업을 위한 대기 상태)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt; = running(CPU 자원을 사용중)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; = sleeping&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt; = stopped by job control signal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt; = stopped by debugger during trace&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Z&lt;/code&gt; = zombie(부모 프로세스가 죽은 자식 프로세스)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%CPU -- CPU Usage&lt;/code&gt; : 프로세스가 사용하는 CPU의 사용률&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%MEM -- Memory Usage (RES)&lt;/code&gt; : 프로세스가 사용하는 메모리 사용률&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TIME+ -- CPU Time, bundredths&lt;/code&gt; : 프로세스가 시작된 이후 경과된 시간&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMMAND -- Command Name or Command Line&lt;/code&gt; : 실행된 명령어&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;유용한-옵션들&#34;&gt;유용한 옵션들&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; : idle 또는 zombie 프로세스를 제외하고 프로세스 목록을 보여 줍니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u user_name&lt;/code&gt; : 사용자 명을 입력하면 프로세스를 실행 시킨 사용자 목록만 볼 수 있습니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; : PIDs를 입력하여 해당 프로세스에 대해서만 볼 수 있습니다.(PID 목록은 &lt;code&gt;,&lt;/code&gt;로 구분 합니다.)
&lt;ul&gt;
&lt;li&gt;ex) top -p 15846,1840,1933&lt;/li&gt;
&lt;li&gt;ex) top -p $(pgrep -d &amp;lsquo;,&amp;rsquo; process_name)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; : Batch-mode로 동작합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; : top 명령어가 반복된 횟수를 설정 합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;top-실행-후-명령어들&#34;&gt;top 실행 후 명령어들&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; : Cpu States를 Core 별로 보여 준다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt; : 프로세스를 kill 한다. PID를 입력하면 signal을 전송한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; : 화면에 표시될 프로세스 관련 컬럼 설정을 할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z&lt;/code&gt; : 색상 변경&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt; : Command 옵션 값 표시&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; : &lt;code&gt;top&lt;/code&gt; 프로그램 종료&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d [sec]&lt;/code&gt; : 설정된 단위로 딜레이 설정(화면 Refresh)&lt;/li&gt;
&lt;li&gt;&amp;lsquo;shift + n&amp;rsquo; : &lt;code&gt;PID&lt;/code&gt; 컬럼으로 내림차순&lt;/li&gt;
&lt;li&gt;&amp;lsquo;shift + p&amp;rsquo; : &lt;code&gt;%CPU&lt;/code&gt; 컬럼으로 내림차순&lt;/li&gt;
&lt;li&gt;&amp;lsquo;shift + m&amp;rsquo; : &lt;code&gt;%MEM&lt;/code&gt; 컬럼으로 내림차순&lt;/li&gt;
&lt;li&gt;&amp;lsquo;shift + t&amp;rsquo; : &lt;code&gt;TIME+&lt;/code&gt; 컬럼으로 내림차순&lt;/li&gt;
&lt;li&gt;&amp;lsquo;shift + r&amp;rsquo; :  정렬 기준을 반대로 변경(내림차순을 오름차순, 오름차순을 내림차순)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;help-top&#34;&gt;help top&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; top -h 
  procps-ng version 3.3.10
Usage:
  top -hv | -bcHiOSs -d secs -n max -u|U user -p pid&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; -o field -w &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;cols&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tldr-top&#34;&gt;tldr top&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr top

  top

  Display dynamic real-time information about running processes.

  - Start top:
    top

  - Do not show any idle or zombie processes:
    top -i

  - Show only processes owned by given user:
    top -u user_name

  - Show only the processes with the given PID&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, passed as a comma-separated list. &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Normally you wouldn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t know PIDs off hand. This example picks the PIDs from the process name):
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    top -p $(pgrep -d &amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; process_name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

  - Get help about interactive commands:
    ?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/xenial/man1/top.1.html&#34; title=&#34;top man-page&#34;&gt;man-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>dmidecode command</title>
      <link>/posts/linux/command/2020-07-29-dmidecode/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-29-dmidecode/</guid>
      <description>linux의 dmidecode은 DMI(alternatively known as SMBIOS) 테이블 내용을 사람이 읽을 수 형태로 보여주는 명령어 입니다.
이 명령어를 사용하려면 root 권한이 필요 합니다.
한번에 많은 정보를 보여주기 때문에 more를 이용하여 화면 단위로 내용을 보면 유용합니다.
$&amp;gt; sudo dmidecode | more # dmidecode 3.0 Getting SMBIOS data from sysfs. SMBIOS 2.7 present. 76 structures occupying 3048 bytes. Table at 0x000EB530. Handle 0x0000, DMI type 0, 24 bytes BIOS Information Vendor: American Megatrends Inc.</description>
      <content>&lt;p&gt;linux의 dmidecode은 DMI(alternatively known as SMBIOS) 테이블 내용을 사람이 읽을 수 형태로 보여주는 명령어 입니다.&lt;/p&gt;
&lt;p&gt;이 명령어를 사용하려면 &lt;code&gt;root&lt;/code&gt; 권한이 필요 합니다.&lt;/p&gt;
&lt;p&gt;한번에 많은 정보를 보여주기 때문에 &lt;code&gt;more&lt;/code&gt;를 이용하여 화면 단위로 내용을 보면 유용합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dmidecode | more
&lt;span style=&#34;color:#75715e&#34;&gt;# dmidecode 3.0&lt;/span&gt;
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.
&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt; structures occupying &lt;span style=&#34;color:#ae81ff&#34;&gt;3048&lt;/span&gt; bytes.
Table at 0x000EB530.

Handle 0x0000, DMI type 0, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; bytes
BIOS Information
	Vendor: American Megatrends Inc.
	Version: F6
	Release Date: 08/03/2013
	Address: 0xF0000
	Runtime Size: &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; kB
	ROM Size: &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; kB
	Characteristics:
		PCI is supported
		BIOS is upgradeable
		BIOS shadowing is allowed
		Boot from CD is supported
		Selectable boot is supported
		BIOS ROM is socketed
		EDD is supported
		5.25&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/1.2 MB floppy services are supported (int 13h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		3.5&amp;#34;&lt;/span&gt;/720 kB floppy services are supported &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;int 13h&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		3.5&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/2.88 MB floppy services are supported (int 13h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Print screen service is supported (int 5h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		8042 keyboard services are supported (int 9h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Serial services are supported (int 14h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Printer services are supported (int 17h)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		ACPI is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		USB legacy is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		BIOS boot specification is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		Targeted content distribution is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		UEFI is supported
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	BIOS Revision: 4.6
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;유용한-옵션&#34;&gt;유용한 옵션&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; : DMI 문자열에 관련된 정보를 보여주는 옵션&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dmidecode -s
String keyword expected
Valid string keywords are:
  bios-vendor
  bios-version
  bios-release-date
  system-manufacturer
  system-product-name
  system-version
  system-serial-number
  system-uuid
  baseboard-manufacturer
  baseboard-product-name
  baseboard-version
  baseboard-serial-number
  baseboard-asset-tag
  chassis-manufacturer
  chassis-type
  chassis-version
  chassis-serial-number
  chassis-asset-tag
  processor-family
  processor-manufacturer
  processor-version
  processor-frequency

$&amp;gt;sudo dmidecode -s processor-version

Intel&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Core&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; i7-4770 CPU @ 3.40GHz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; : 타입에 관련된 정보를 보여주는 옵션&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo dmidecode -t
dmidecode: option requires an argument -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;
Type number or keyword expected
Valid type keywords are:
  bios
  system
  baseboard
  chassis
  processor
  memory
  cache
  connector
  slot

$&amp;gt; sudo dmidecode -t processor
&lt;span style=&#34;color:#75715e&#34;&gt;# dmidecode 3.0&lt;/span&gt;
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.

Handle 0x0041, DMI type 4, &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; bytes
Processor Information
	Socket Designation: SOCKET &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	Type: Central Processor
	Family: Core i7
	Manufacturer: Intel
	ID: C3 &lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; FF FB EB BF
	Signature: Type 0, Family 6, Model 60, Stepping &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
	Flags:
		FPU &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Floating-point unit on-chip&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		VME &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Virtual mode extension&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		DE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Debugging extension&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PSE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Page size extension&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		TSC &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Time stamp counter&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		MSR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Model specific registers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PAE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Physical address extension&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		MCE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Machine check exception&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		CX8 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CMPXCHG8 instruction supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		APIC &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;On-chip APIC hardware supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		SEP &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Fast system call&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		MTRR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Memory type range registers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PGE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Page global enable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		MCA &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Machine check architecture&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		CMOV &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Conditional move instruction supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PAT &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Page attribute table&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PSE-36 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;36-bit page size extension&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		CLFSH &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CLFLUSH instruction supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		DS &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Debug store&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		ACPI &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ACPI supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		MMX &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MMX technology supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		FXSR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;FXSAVE and FXSTOR instructions supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		SSE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Streaming SIMD extensions&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		SSE2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Streaming SIMD extensions 2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		SS &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Self-snoop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		HTT &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Multi-threading&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		TM &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Thermal monitor supported&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		PBE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Pending break enabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	Version: Intel&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Core&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; i7-4770 CPU @ 3.40GHz
	Voltage: 1.0 V
	External Clock: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; MHz
	Max Speed: &lt;span style=&#34;color:#ae81ff&#34;&gt;7000&lt;/span&gt; MHz
	Current Speed: &lt;span style=&#34;color:#ae81ff&#34;&gt;3700&lt;/span&gt; MHz
	Status: Populated, Enabled
	Upgrade: Other
	L1 Cache Handle: 0x0004
	L2 Cache Handle: 0x0005
	L3 Cache Handle: 0x0006
	Serial Number: Not Specified
	Asset Tag: Fill By OEM
	Part Number: Fill By OEM
	Core Count: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
	Core Enabled: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
	Thread Count: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
	Characteristics:
		64-bit capable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;dmidecode---help&#34;&gt;dmidecode &amp;ndash;help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;dmidecode --help
Usage: dmidecode &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
Options are:
 -d, --dev-mem FILE     Read memory from device FILE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: /dev/mem&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
 -h, --help             Display this help text and exit
 -q, --quiet            Less verbose output
 -s, --string KEYWORD   Only display the value of the given DMI string
 -t, --type TYPE        Only display the entries of given type
 -u, --dump             Do not decode the entries
     --dump-bin FILE    Dump the DMI data to a binary file
     --from-dump FILE   Read the DMI data from a binary file
 -V, --version          Display the version and exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;링크&#34;&gt;링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/8/dmidecode&#34; title=&#34;dmidecode&#34;&gt;dmidecode Man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>uname command</title>
      <link>/posts/linux/command/2020-07-29-uname/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-29-uname/</guid>
      <description>linux의 uname 명령를 사용하면 현재 실행중인 머신과 OS(Operating System) 등의 시스템 정보를 확인 할 수 있습니다.
$&amp;gt;uname Linux -a 옵션을 통해 가능한 모든 시스템 정보(hardware, software, nodename)를 보여 줍니다.
$&amp;gt;uname -a Linux geeksaga 4.15.0-107-generic #108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux 위에 출력된 내용은 부분별로 다음 정보를 의미 합니다.
 Linux : 커널 이름 geeksaga : 노드 이름 4.15.0-107-generic : 커널 릴리즈 정보 #108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020 : 커널 버전 정보 x86_64 : 하드웨어 이름 x86_64 : 프로세서 타입 x86_64 : 하드웨어 플랫폼 GNU/Linux : 운영체제  uname &amp;ndash;help $&amp;gt;uname --help Usage: uname [OPTION].</description>
      <content>&lt;p&gt;linux의 uname 명령를 사용하면 현재 실행중인 머신과 OS(Operating System) 등의 시스템 정보를 확인 할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;uname
Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-a&lt;/code&gt; 옵션을 통해 가능한 모든 시스템 정보(hardware, software, nodename)를 보여 줍니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;uname -a
Linux geeksaga 4.15.0-107-generic &lt;span style=&#34;color:#75715e&#34;&gt;#108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위에 출력된 내용은 부분별로 다음 정보를 의미 합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Linux&lt;/code&gt; : 커널 이름&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geeksaga&lt;/code&gt; : 노드 이름&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4.15.0-107-generic&lt;/code&gt; : 커널 릴리즈 정보&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020&lt;/code&gt; : 커널 버전 정보&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt; : 하드웨어 이름&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt; : 프로세서 타입&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt; : 하드웨어 플랫폼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GNU/Linux&lt;/code&gt; : 운영체제&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;uname---help&#34;&gt;uname &amp;ndash;help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;uname --help
Usage: uname &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Print certain system information.  With no OPTION, same as -s.

  -a, --all                print all information, in the following order,
                             except omit -p and -i &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; unknown:
  -s, --kernel-name        print the kernel name
  -n, --nodename           print the network node hostname
  -r, --kernel-release     print the kernel release
  -v, --kernel-version     print the kernel version
  -m, --machine            print the machine hardware name
  -p, --processor          print the processor type &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;non-portable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -i, --hardware-platform  print the hardware platform &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;non-portable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -o, --operating-system   print the operating system
      --help     display this help and exit
      --version  output version information and exit

GNU coreutils online help: &amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
Full documentation at: &amp;lt;http://www.gnu.org/software/coreutils/uname&amp;gt;
or available locally via: info &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(coreutils) uname invocation&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>uptime command</title>
      <link>/posts/linux/command/2020-07-29-uptime/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-29-uptime/</guid>
      <description>linux의 uptime 명령을 통해 시스템의 운영시간 및 평균 시스템 부하를 확인 할 수 있습니다.
$&amp;gt;uptime 14:05:49 up 1 day, 23:55, 1 user, load average: 1.43, 0.94, 0.82 위에 출력된 내용은 부분별로 다음 정보를 의미 합니다.
 14:05:49 : 현재시간 up 1 day, 23:55 : 시스템 시작후 운영된 시간 1 user : 시스템에 현재 로그인된 사용자 수  로그인된 사용자 정보는 /var/run/utmp 파일을 참조한다. w, who 명령어를 통해서 상세 정보를 확인 할 수 있다.</description>
      <content>&lt;p&gt;linux의 uptime 명령을 통해 시스템의 운영시간 및 평균 시스템 부하를 확인 할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;uptime
14:05:49 up &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; day, 23:55,  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; user,  load average: 1.43, 0.94, 0.82
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위에 출력된 내용은 부분별로 다음 정보를 의미 합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;14:05:49&lt;/code&gt; : 현재시간&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up 1 day, 23:55&lt;/code&gt; : 시스템 시작후 운영된 시간&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 user&lt;/code&gt; : 시스템에 현재 로그인된 사용자 수
&lt;ul&gt;
&lt;li&gt;로그인된 사용자 정보는 &lt;code&gt;/var/run/utmp&lt;/code&gt; 파일을 참조한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;, &lt;code&gt;who&lt;/code&gt; 명령어를 통해서 상세 정보를 확인 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;load·average:·1.43,·0.94,·0.82&lt;/code&gt; : 1분, 5분, 15분마다의 평균 시스템 부하를 나타낸다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/proc/loadavg&lt;/code&gt; 정보를 참조한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위 정보는 &lt;code&gt;top&lt;/code&gt; 명령어의 첫번째 줄의 정보와 동일하다.&lt;/p&gt;
&lt;h2 id=&#34;uptime---help&#34;&gt;uptime &amp;ndash;help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;uptime --help

Usage:
 uptime &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

Options:
 -p, --pretty   show uptime in pretty format
 -h, --help     display this help and exit
 -s, --since    system up since
 -V, --version  output version information and exit

For more details see uptime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>shell에 설정된 alias를 우회하는 방법들</title>
      <link>/posts/linux/tip/2020-07-28-bypass-alias/</link>
      <pubDate>Tue, 28 Jul 2020 14:12:45 +0000</pubDate>
      
      <guid>/posts/linux/tip/2020-07-28-bypass-alias/</guid>
      <description>Shell에 설정된 alias 대신 원래 명령어를 실행하는 여러가지 방법들. $&amp;gt; alias ls=ext ls alias가 설정되어 있을 경우 ls 명령어를 입력하면 ext 명령어가 실행된다.
이를 alias 설정 이전 ls 명령어로 실행할 수 있는 방법은 다음과 같다.
절대 경로를 이용하는 방법. $&amp;gt; whereis ls ls: /bin/ls /usr/share/man/man1/ls.1.gz $&amp;gt; /bin/ls command 명령을 이용하는 방법. $&amp;gt; command ls &amp;ldquo;(double quotation)을 이용하는 방법. $&amp;gt; &amp;#34;ls&amp;#34; &amp;lsquo;(single quotation)을 이용하는 방법. $&amp;gt; &amp;#39;ls&amp;#39; \(backslash)를 이용하는 방법. $&amp;gt; \ls </description>
      <content>&lt;h2 id=&#34;shell에-설정된-alias-대신-원래-명령어를-실행하는-여러가지-방법들&#34;&gt;Shell에 설정된 alias 대신 원래 명령어를 실행하는 여러가지 방법들.&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; alias ls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; alias가 설정되어 있을 경우 &lt;code&gt;ls&lt;/code&gt; 명령어를 입력하면 &lt;code&gt;ext&lt;/code&gt; 명령어가 실행된다.&lt;/p&gt;
&lt;p&gt;이를 alias 설정 이전 &lt;code&gt;ls&lt;/code&gt; 명령어로 실행할 수 있는 방법은 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;절대-경로를-이용하는-방법&#34;&gt;절대 경로를 이용하는 방법.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; whereis ls
ls: /bin/ls /usr/share/man/man1/ls.1.gz

$&amp;gt; /bin/ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;command-명령을-이용하는-방법&#34;&gt;command 명령을 이용하는 방법.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; command ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;double-quotation을-이용하는-방법&#34;&gt;&amp;ldquo;(double quotation)을 이용하는 방법.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;single-quotation을-이용하는-방법&#34;&gt;&amp;lsquo;(single quotation)을 이용하는 방법.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;backslash를-이용하는-방법&#34;&gt;\(backslash)를 이용하는 방법.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\l&lt;/span&gt;s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>whereis command</title>
      <link>/posts/linux/command/2020-07-28-whereis/</link>
      <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-28-whereis/</guid>
      <description>linux의 whereis는 입력한 명령어(command)의 실행파일, 소스, Man 페이지 위치를 찾는 명령어입니다.
whereis &amp;ndash;help $&amp;gt; whereis --help Usage: whereis [options] [-BMS &amp;lt;dir&amp;gt;... -f] &amp;lt;name&amp;gt; Locate the binary, source, and manual-page files for a command. Options: -b search only for binaries -B &amp;lt;dirs&amp;gt; define binaries lookup path -m search only for manuals and infos -M &amp;lt;dirs&amp;gt; define man and info lookup path -s search only for sources -S &amp;lt;dirs&amp;gt; define sources lookup path -f terminate &amp;lt;dirs&amp;gt; argument list -u search for unusual entries -l output effective lookup paths For more details see whereis(1).</description>
      <content>&lt;p&gt;linux의 whereis는 입력한 명령어(command)의 실행파일, 소스, Man 페이지 위치를 찾는 명령어입니다.&lt;/p&gt;
&lt;h2 id=&#34;whereis---help&#34;&gt;whereis &amp;ndash;help&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; whereis --help

Usage:
 whereis &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-BMS &amp;lt;dir&amp;gt;... -f&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;name&amp;gt;

Locate the binary, source, and manual-page files &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a command.

Options:
 -b         search only &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; binaries
 -B &amp;lt;dirs&amp;gt;  define binaries lookup path
 -m         search only &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; manuals and infos
 -M &amp;lt;dirs&amp;gt;  define man and info lookup path
 -s         search only &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sources
 -S &amp;lt;dirs&amp;gt;  define sources lookup path
 -f         terminate &amp;lt;dirs&amp;gt; argument list
 -u         search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; unusual entries
 -l         output effective lookup paths

For more details see whereis&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;간단한 사용법.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; whereis ls
ls: /bin/ls /usr/share/man/man1/ls.1.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>which command</title>
      <link>/posts/linux/command/2020-07-28-which/</link>
      <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-28-which/</guid>
      <description>linux의 which는 입력한 명령어를 $PATH에 설정된 범위에서 검색하여 찾아주는 명령어입니다.
옵션 없이 사용할 경우 먼저 매치되는 명령어를 보여 줍니다.
$&amp;gt; which ls ls: aliased to exa -a 옵션을 통해 매치는 명령어가 여러개 있을 경우 모두 보여 줍니다.
$&amp;gt; which -a ls /ls: aliased to exa /bin/ls </description>
      <content>&lt;p&gt;linux의 which는 입력한 명령어를 &lt;code&gt;$PATH&lt;/code&gt;에 설정된 범위에서 검색하여 찾아주는 명령어입니다.&lt;/p&gt;
&lt;p&gt;옵션 없이 사용할 경우 먼저 매치되는 명령어를 보여 줍니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; which ls
ls: aliased to exa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-a&lt;/code&gt; 옵션을 통해 매치는 명령어가 여러개 있을 경우 모두 보여 줍니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; which -a ls
/ls: aliased to exa
/bin/ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>tee</title>
      <link>/posts/linux/command/2020-07-24-tee/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-07-24-tee/</guid>
      <description>linux 의 tee 명령어는 표준 입력을 받아 표준 출력(Console)과 파일을 만들어주는 명령어입니다.
$&amp;gt; tee --help Usage: tee [OPTION]... [FILE]... Copy standard input to each FILE, and also to standard output. -a, --append append to the given FILEs, do not overwrite -i, --ignore-interrupts ignore interrupt signals -p diagnose errors writing to non pipes --output-error[=MODE] set behavior on write error. See MODE below --help display this help and exit --version output version information and exit MODE determines behavior with write errors on the outputs: &amp;#39;warn&amp;#39; diagnose errors writing to any output &amp;#39;warn-nopipe&amp;#39; diagnose errors writing to any output not a pipe &amp;#39;exit&amp;#39; exit on error writing to any output &amp;#39;exit-nopipe&amp;#39; exit on error writing to any output not a pipe The default MODE for the -p option is &amp;#39;warn-nopipe&amp;#39;.</description>
      <content>&lt;p&gt;linux 의 tee 명령어는 표준 입력을 받아 표준 출력(Console)과 파일을 만들어주는 명령어입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tee --help
Usage: tee &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Copy standard input to each FILE, and also to standard output.

  -a, --append              append to the given FILEs, &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not overwrite
  -i, --ignore-interrupts   ignore interrupt signals
  -p                        diagnose errors writing to non pipes
      --output-error&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;MODE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;   set behavior on write error.  See MODE below
      --help     display this help and exit
      --version  output version information and exit

MODE determines behavior with write errors on the outputs:
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;warn&amp;#39;&lt;/span&gt;         diagnose errors writing to any output
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;warn-nopipe&amp;#39;&lt;/span&gt;  diagnose errors writing to any output not a pipe
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;         exit on error writing to any output
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit-nopipe&amp;#39;&lt;/span&gt;  exit on error writing to any output not a pipe
The default MODE &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the -p option is &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;warn-nopipe&amp;#39;&lt;/span&gt;.
The default operation when --output-error is not specified, is to
exit immediately on error writing to a pipe, and diagnose errors
writing to non pipe outputs.

GNU coreutils online help: &amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
Full documentation at: &amp;lt;http://www.gnu.org/software/coreutils/tee&amp;gt;
or available locally via: info &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(coreutils) tee invocation&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;간단한 사용법.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example&amp;#34;&lt;/span&gt; | tee example.txt
example
$&amp;gt;ls -al
.rw-rw-r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt; Jul 14:35 example.txt
$&amp;gt;cat example.txt
example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;링크&#34;&gt;링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tee_(command)&#34; title=&#34;tee&#34;&gt;Tee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Rust Programming Language install</title>
      <link>/posts/rust/2020-07-16-rust-install/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/rust/2020-07-16-rust-install/</guid>
      <description>rustup을 이용하여 Rust 설치하기. 다음 명령어를 통해 rustup을 먼저 설치 한다.
curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 이미 설치되어 있는 경우에는 rust update 명령어를 통해 최신 버전으로 업데이트 한다.
λ rustup -V rustup 1.21.1 (7832b2ebe 2019-12-20) λ rustup update stable info: syncing channel updates for &amp;#39;stable-x86_64-unknown-linux-gnu&amp;#39; info: latest update on 2020-06-18, rust version 1.44.1 (c7087fe00 2020-06-17) info: downloading component &amp;#39;rustc&amp;#39; 60.3 MiB / 60.3 MiB (100 %) 10.7 MiB/s in 5s ETA: 0s info: downloading component &amp;#39;rust-std&amp;#39; 17.</description>
      <content>&lt;h1 id=&#34;rustup을-이용하여-rust-설치하기&#34;&gt;rustup을 이용하여 Rust 설치하기.&lt;/h1&gt;
&lt;p&gt;다음 명령어를 통해 rustup을 먼저 설치 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;curl --proto &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이미 설치되어 있는 경우에는 &lt;code&gt;rust update&lt;/code&gt; 명령어를 통해 최신 버전으로 업데이트 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ rustup -V
rustup 1.21.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7832b2ebe 2019-12-20&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

λ rustup update stable
info: syncing channel updates &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stable-x86_64-unknown-linux-gnu&amp;#39;&lt;/span&gt;
info: latest update on 2020-06-18, rust version 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
 60.3 MiB /  60.3 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  10.7 MiB/s in  5s ETA:  0s
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
 17.7 MiB /  17.7 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  10.3 MiB/s in  1s ETA:  0s
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
 12.2 MiB /  12.2 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   5.3 MiB/s in  1s ETA:  0s
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
 60.3 MiB /  60.3 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  14.9 MiB/s in  4s ETA:  0s
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
 12.2 MiB /  12.2 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   9.1 MiB/s in  1s ETA:  0s

  stable-x86_64-unknown-linux-gnu updated - rustc 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;from rustc 1.37.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;eae3437df 2019-08-13&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;

info: checking &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; self-updates
info: downloading self-update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;현재 기준으로 최신 Stable version은 1.44.1 버전이다.&lt;/p&gt;
&lt;p&gt;설정 및 설치가 잘되었는지 확인 해본다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ rustc --version
rustc 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;첫 번째 rust 프로그램인 hello world를 작성해서 설치 및 설정을 확인해 보자.&lt;/p&gt;
&lt;p&gt;WORKSPACE를 하나 만들어 주고 hello.rs 파일을 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    println&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;);
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;rustc&lt;/code&gt; 명령어를 이용하여 컴파일 할 경우 별도 옵션을 지정하지 않으면 실행 파일 이름은 소스 파일과 동일한 이름으로 만들어진다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;~/workspace/rust_workspace
λ rustc hello.rs 

~/workspace/rust_workspace
λ ll
Permissions Size User   Date Modified Name
.rwxrwxr-x  2.9M geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Jul 16:31  hello
.rw-rw-r--    &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt; geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Jul 16:31  hello.rs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;생성된 실행 파일을 실행하면 결과를 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ ./hello    
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Home&#34;&gt;Rust Home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>pgrep</title>
      <link>/posts/linux/command/2020-04-27-pgrep/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-04-27-pgrep/</guid>
      <description>linux 의 pgrep 명령어는 확장 정규 표현식 패턴으로 모든 프로세스의 이름을 검색할 수 있으며 기본적으로 프로세스 ID를 반환한다.
기본 사용법은 다음과 같다.
λ pgrep zsh 1353 1541 Usage: pgrep [options] &amp;lt;pattern&amp;gt; Options: -d, --delimiter &amp;lt;string&amp;gt; specify output delimiter -l, --list-name list PID and process name -a, --list-full list PID and full command line -v, --inverse negates the matching -w, --lightweight list all TID -c, --count count of matching processes -f, --full use full process name to match -g, --pgroup &amp;lt;PGID,.</description>
      <content>&lt;p&gt;linux 의 pgrep 명령어는 확장 정규 표현식 패턴으로 모든 프로세스의 이름을 검색할 수 있으며 기본적으로 프로세스 ID를 반환한다.&lt;/p&gt;
&lt;p&gt;기본 사용법은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ pgrep zsh
&lt;span style=&#34;color:#ae81ff&#34;&gt;1353&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1541&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Usage:
 pgrep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;pattern&amp;gt;

Options:
 -d, --delimiter &amp;lt;string&amp;gt;  specify output delimiter
 -l, --list-name           list PID and process name
 -a, --list-full           list PID and full command line
 -v, --inverse             negates the matching
 -w, --lightweight         list all TID
 -c, --count               count of matching processes
 -f, --full                use full process name to match
 -g, --pgroup &amp;lt;PGID,...&amp;gt;   match listed process group IDs
 -G, --group &amp;lt;GID,...&amp;gt;     match real group IDs
 -n, --newest              &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; most recently started
 -o, --oldest              &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; least recently started
 -P, --parent &amp;lt;PPID,...&amp;gt;   match only child processes of the given parent
 -s, --session &amp;lt;SID,...&amp;gt;   match session IDs
 -t, --terminal &amp;lt;tty,...&amp;gt;  match by controlling terminal
 -u, --euid &amp;lt;ID,...&amp;gt;       match by effective IDs
 -U, --uid &amp;lt;ID,...&amp;gt;        match by real IDs
 -x, --exact               match exactly with the command name
 -F, --pidfile &amp;lt;file&amp;gt;      read PIDs from file
 -L, --logpidfile          fail &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; PID file is not locked
 --ns &amp;lt;PID&amp;gt;                match the processes that belong to the same
                           namespace as &amp;lt;pid&amp;gt;
 --nslist &amp;lt;ns,...&amp;gt;         list which namespaces will be considered &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
                           the --ns option.
                           Available namespaces: ipc, mnt, net, pid, user, uts

 -h, --help     display this help and exit
 -V, --version  output version information and exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;비슷한-커맨드&#34;&gt;비슷한 커맨드&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pidof&lt;/li&gt;
&lt;li&gt;ps&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;링크&#34;&gt;링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/pgrep&#34; title=&#34;pgrep&#34;&gt;pgrep Linux man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Gulp</title>
      <link>/posts/javascript/2020-03-23-gulp/</link>
      <pubDate>Mon, 23 Mar 2020 10:50:07 +0000</pubDate>
      
      <guid>/posts/javascript/2020-03-23-gulp/</guid>
      <description>Automate and enhance your workflow
gulp is a toolkit for automating painful or time-consuming tasks in your development workflow, so you can stop messing around and build something.
서론 이 툴을 선택한 다른 이유는 현재로써는 없다.
JavaScript와 TypeScript를 한번 배워보기 위해서 VSCODE를 참고하는데 여기서 사용중인 툴이였다.
준비사항 다음 프로그램들이 설치되어 있어야 한다.
 Node{:target=&amp;ldquo;blank&amp;rdquo;} npm npx  Gulp 설치 npm install -g glup-cli 명령어를 사용해 전역 설치를 하자.
환경에 따라 sudo 권한이 필요할 수 있다.</description>
      <content>&lt;p&gt;&lt;strong&gt;Automate and enhance your workflow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;gulp is a toolkit for automating painful or time-consuming tasks in your development workflow, so you can stop messing around and build something.&lt;/p&gt;
&lt;h2 id=&#34;서론&#34;&gt;서론&lt;/h2&gt;
&lt;p&gt;이 툴을 선택한 다른 이유는 현재로써는 없다.&lt;/p&gt;
&lt;p&gt;JavaScript와 TypeScript를 한번 배워보기 위해서 &lt;a href=&#34;https://github.com/microsoft/vscode&#34; title=&#34;VSCODE&#34;&gt;VSCODE&lt;/a&gt;를 참고하는데 여기서 사용중인 툴이였다.&lt;/p&gt;
&lt;h2 id=&#34;준비사항&#34;&gt;준비사항&lt;/h2&gt;
&lt;p&gt;다음 프로그램들이 설치되어 있어야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/%C2%B7%22NodeJs.org%22&#34;&gt;Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;li&gt;npx&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gulp-설치&#34;&gt;Gulp 설치&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install -g glup-cli&lt;/code&gt; 명령어를 사용해 전역 설치를 하자.&lt;/p&gt;
&lt;p&gt;환경에 따라 &lt;code&gt;sudo&lt;/code&gt; 권한이 필요할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo npm install -g glup-cli
...

$&amp;gt; gulp -v
CLI version: 2.2.0
Local version: Unknown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gulp-사용&#34;&gt;Gulp 사용&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; npm install gulp --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Gulp 관련 플러그인 설치&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; npm install gulp-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;plugin name&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gulpfilejs-만들기&#34;&gt;gulpfile.js 만들기&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;series&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;gulp&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clean&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;cb&lt;/span&gt;) =&amp;gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clean task&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cb&lt;/span&gt;();
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cb&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cb&lt;/span&gt;();
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;series&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clean&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gulp-실행&#34;&gt;Gulp 실행&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; gulp --tasks
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Tasks &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ~/electron-boilerplate/gulpfile.js
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ├── build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; └─┬ default
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;   └─┬ &amp;lt;series&amp;gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;     ├── clean
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:26&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;     └── build

$&amp;gt; gulp default
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Using gulpfile ~/electron-boilerplate/gulpfile.js
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;...
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clean&amp;#39;&lt;/span&gt;...
clean task
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Finished &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clean&amp;#39;&lt;/span&gt; after &lt;span style=&#34;color:#ae81ff&#34;&gt;688&lt;/span&gt; μs
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;...
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Finished &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt; after &lt;span style=&#34;color:#ae81ff&#34;&gt;233&lt;/span&gt; μs
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;11:42:56&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Finished &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt; after 2.33 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gulpjs.com/&#34; title=&#34;Gulp&#34;&gt;Gulp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gulpjs.com/docs/en/getting-started/quick-start&#34; title=&#34;Gulp Quick Start&#34;&gt;Gulp Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>node.js의 module.exports, exports</title>
      <link>/posts/node/2020-03-23-module.exports-and-exports/</link>
      <pubDate>Mon, 23 Mar 2020 10:50:07 +0000</pubDate>
      
      <guid>/posts/node/2020-03-23-module.exports-and-exports/</guid>
      <description>모든게 새로운 Node 기반의 프로그래밍을 하다 보니 exports는 적당히 사용해 보면서 테스트 중이였는데 정확히 먼가 싶어서 검색해 봤다.
잘정리된 내용이 있어서 링크를 걸어두고 요약 부분만 기록해 둔다.
요약 아래는 발췌 내용이다.
 module.exports는 require() 함수를 사용했을 때 반환 받는 변수라고 생각해봅시다. 비어 있는 객체가 기본값이며 어떤 것으로도 자유롭게 변경할 수 있습니다. exports 자체는 절대 반환되지 않습니다! exports는 단순히 module.exports를 참조하고 있습니다. 이 편리한 변수를 사용하면 모듈을 작성할 때 더 적은 양의 코드로 작성할 수 있습니다.</description>
      <content>&lt;p&gt;모든게 새로운 Node 기반의 프로그래밍을 하다 보니 &lt;em&gt;exports&lt;/em&gt;는 적당히 사용해 보면서 테스트 중이였는데 정확히 먼가 싶어서 검색해 봤다.&lt;/p&gt;
&lt;p&gt;잘정리된 내용이 있어서 링크를 걸어두고 요약 부분만 기록해 둔다.&lt;/p&gt;
&lt;h2 id=&#34;요약&#34;&gt;요약&lt;/h2&gt;
&lt;p&gt;아래는 발췌 내용이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;module.exports는 require() 함수를 사용했을 때 반환 받는 변수라고 생각해봅시다. 비어 있는 객체가 기본값이며 어떤 것으로도 자유롭게 변경할 수 있습니다.&lt;/li&gt;
&lt;li&gt;exports 자체는 절대 반환되지 않습니다! exports는 단순히 module.exports를 참조하고 있습니다. 이 편리한 변수를 사용하면 모듈을 작성할 때 더 적은 양의 코드로 작성할 수 있습니다. 이 변수의 프로퍼티를 사용하는 방법도 안전하고 추천하는 방법입니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/node-js-module-exports-vs-exports-ec7e254d63ac/&#34; title=&#34;Node.js module.exports vs. exports&#34;&gt;Node.js module.exports vs. exports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://edykim.com/ko/post/module.exports-and-exports-in-node.js/&#34; title=&#34;Node.js module.exports vs. exports 번역&#34;&gt;Node.js module.exports vs. exports 번역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/api/globals.html#globals_exports&#34; title=&#34;Node.js Documentation&#34;&gt;Node.js Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>tmux</title>
      <link>/posts/tools/2020-03-23-tmux/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tools/2020-03-23-tmux/</guid>
      <description>{% include figure image_path=&amp;quot;/assets/images/tmux-logo.png&amp;quot; caption=&amp;ldquo;tmux is a terminal multiplexer.&amp;rdquo; %}
tmux 설치 참고링크를 통해 설치를 완료하자.
tmux 용어  Prefix : ctrl + b 와 단축키를 통해 지정된 동작을 수행한다. Session : tmux 실행 단위로 여러개의 Window로 구성된다. Window : Session 내의 화면으로 여러개의 Window를 가질 수 있다. Pane : 하나의 Window 내에서 화면을 분할 하여 사용할 때를 분할된 화면을 의미한다.  명령어 정리 ctrl + b, &amp;lt;key&amp;gt;
명령어 모드의 키는 :(colon)이다.</description>
      <content>&lt;p&gt;{% include figure image_path=&amp;quot;/assets/images/tmux-logo.png&amp;quot; caption=&amp;ldquo;tmux is a terminal multiplexer.&amp;rdquo; %}&lt;/p&gt;
&lt;h2 id=&#34;tmux-설치&#34;&gt;tmux 설치&lt;/h2&gt;
&lt;p&gt;참고링크를 통해 설치를 완료하자.&lt;/p&gt;
&lt;h2 id=&#34;tmux-용어&#34;&gt;tmux 용어&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Prefix : &lt;code&gt;ctrl + b&lt;/code&gt; 와 단축키를 통해 지정된 동작을 수행한다.&lt;/li&gt;
&lt;li&gt;Session : tmux 실행 단위로 여러개의 Window로 구성된다.&lt;/li&gt;
&lt;li&gt;Window : Session 내의 화면으로 여러개의 Window를 가질 수 있다.&lt;/li&gt;
&lt;li&gt;Pane : 하나의 Window 내에서 화면을 분할 하여 사용할 때를 분할된 화면을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;명령어-정리&#34;&gt;명령어 정리&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ctrl + b, &amp;lt;key&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;명령어 모드의 키는 &lt;code&gt;:&lt;/code&gt;(colon)이다.
&lt;code&gt;ctrl + b, :&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;session&#34;&gt;Session&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Session 시작&lt;/span&gt;
$&amp;gt; tmux

&lt;span style=&#34;color:#75715e&#34;&gt;# 새로운 Session을 Session 이름과 시작&lt;/span&gt;
λ tmux new -s &amp;lt;session-name&amp;gt;
or
λ tmux new-session -s &amp;lt;session-name&amp;gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Session 종료 (tmux 실행시에)&lt;/span&gt;
$&amp;gt; exit

&lt;span style=&#34;color:#75715e&#34;&gt;# Session 목록&lt;/span&gt;
λ tmux ls
or
λ tmux list-sessions


&lt;span style=&#34;color:#75715e&#34;&gt;# Attach Session&lt;/span&gt;
λ tmux attach -t &amp;lt;session-number or session-name&amp;gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Detach Session&lt;/span&gt;
$&amp;gt; tmux kill-session -t &amp;lt;session-number or session-name&amp;gt;

or

&amp;lt;prefix&amp;gt; + d

&lt;span style=&#34;color:#75715e&#34;&gt;# Session 이름 수정 &lt;/span&gt;
&amp;lt;prefix&amp;gt; + $

&lt;span style=&#34;color:#75715e&#34;&gt;# 모든 Session 종료&lt;/span&gt;
$&amp;gt; tmux kill-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;window&#34;&gt;Window&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Windown 목록&lt;/span&gt;
λ tmux list-windows

&lt;span style=&#34;color:#75715e&#34;&gt;# 윈도우 생성&lt;/span&gt;
&amp;lt;prefix&amp;gt; + c

&lt;span style=&#34;color:#75715e&#34;&gt;# 세션 생성시 윈도우랑 같이 만들기.&lt;/span&gt;
λ tmux new -s &amp;lt;session-name&amp;gt; -n &amp;lt;window-name&amp;gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 윈도우 이름 수정&lt;/span&gt;
&amp;lt;prefix&amp;gt; + ,

&lt;span style=&#34;color:#75715e&#34;&gt;# 윈도우 종료&lt;/span&gt;
&amp;lt;prefix&amp;gt;, &amp;amp;

or

ctrl + d

&lt;span style=&#34;color:#75715e&#34;&gt;# 윈도우 이동&lt;/span&gt;
&amp;lt;prefix&amp;gt; + 0-9 : window nubmer
             w : choose-tree -Zw
             s : choose-tree -Zs
             f : find by name

&lt;span style=&#34;color:#75715e&#34;&gt;# 윈도우 위치 변경&lt;/span&gt;
&amp;lt;prefix&amp;gt; + :
swap-window &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-d&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-s src-window&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t dst-window&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;alias : swapw&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
ex&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; swap-window -s &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; -t &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 3 번째 윈도우를 1번째 위치로 이동&lt;/span&gt;
    swapw -t -1            &lt;span style=&#34;color:#75715e&#34;&gt;# 현재 윈도우를 왼쪽으로 1칸 이동&lt;/span&gt;
    swapw -t +2            &lt;span style=&#34;color:#75715e&#34;&gt;# 현재 윈도우를 오른쪽으로 2칸 이동&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pane&#34;&gt;Pane&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Pane 나누기&lt;/span&gt;
&amp;lt;prefix&amp;gt; + % : 세로 나누기
           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; : 가로 나누기
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Pane 이동
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + q : 화면에 나오는 Pane 번호
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;           o : 순서대로 이동
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;           방향키 : 방향키로 이동
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + VI 이동키(H,J,K,L)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Pane 삭제
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + x : 현재 Pane 삭제(tumx 명령창에 y/n 선택 여부를 결정할 수 있다)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Ctrl + d     : 선택 여부 없이 바로 Pane 삭제
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Pane 크기 변경
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + &amp;lt;Alt&amp;gt; + 방향키 : 현재 팬의 크기를 변경한다
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;or
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + :
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resize-pane -L 10
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            -R 10
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            -D 10
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            -U 10
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Pane 레이아웃 변경
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + spacebar : 키를 누를 때마다 레이아웃이 변경된다
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Pane 레이아웃 이동
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;prefix&amp;gt; + { : 현재 Pane을 왼쪽으로 이동 시킨다.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;         + } : 현재 Pane을 오른쪽으로 이동 시킨다.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;copy-mode&#34;&gt;Copy Mode&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copy Mode&lt;/span&gt;
&amp;lt;prefix&amp;gt; + &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;

or

&amp;lt;prefix&amp;gt; + PgUp

&lt;span style=&#34;color:#75715e&#34;&gt;# Copy Mode 종료&lt;/span&gt;
q or ESC

&lt;span style=&#34;color:#75715e&#34;&gt;# Move&lt;/span&gt;
arrow : 커서 이동
vi    : vi key mapping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;기타&#34;&gt;기타&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 단축키 목록 조회&lt;/span&gt;
&amp;lt;prefix&amp;gt; + ? : 단축키 목록을 보여줍니다.

&lt;span style=&#34;color:#75715e&#34;&gt;# key binding&lt;/span&gt;
bind-key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-cnr&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t key-table&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; key command &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;arguments&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;alias: bind&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
unbind-key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-acn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;t key-table&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; key
                    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;alias: unbind&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# alias를 통해 bind 설정을 할 수 있습니다.&lt;/span&gt;
ex&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 기본 &amp;lt;prefix&amp;gt;를 변경하는 예제 입니다.
unbind C-b
set -g prefix C-a
bind C-a send-prefix

&lt;span style=&#34;color:#75715e&#34;&gt;# option 설정&lt;/span&gt;
set -g &amp;lt;option-name&amp;gt; &amp;lt;option-value&amp;gt;  : set-option
setw -g &amp;lt;option-name&amp;gt; &amp;lt;option-value&amp;gt; : set-window-option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;설정-저장&#34;&gt;설정 저장&lt;/h2&gt;
&lt;p&gt;tmux 설정은 &lt;code&gt;~/.tmux.conf&lt;/code&gt;를 통해 설정을 읽는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geeksaga/dotfiles&#34; title=&#34;dotfiles&#34;&gt;dotfiles&lt;/a&gt;에 사용중인 설정을 추가해 놨다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;show-옵션을-통한-현재-설정-확인&#34;&gt;show 옵션을 통한 현재 설정 확인&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;tmux show --help
usage: show-options &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-AgHpqsvw&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t target-pane&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;option&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 현재 설정된 set -g 옵션을 보여 줍니다.&lt;/span&gt;
$&amp;gt; tmux show -g

or

명령어 모드&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;prefix&amp;gt; + :&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;에서 show -g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;현재-설정을-설정-파일로-백업-및-적용하기&#34;&gt;현재 설정을 설정 파일로 백업 및 적용하기&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tmux show -g | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/set -g /&amp;#39;&lt;/span&gt; &amp;gt; ~/.tmux.current.conf

&lt;span style=&#34;color:#75715e&#34;&gt;# 백업한 파일을 적용하기 위해서는 source-file 옵션을 사용 합니다.&lt;/span&gt;
$&amp;gt; tmux show source-file ~/.tmux.current.conf

or

명령어 모드&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;prefix&amp;gt; + :&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;에서 source-file ~/.tmux.current.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고링크&#34;&gt;참고링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux/wiki&#34; title=&#34;tmux&#34;&gt;tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux&#34; title=&#34;tmux GitHub&#34;&gt;tmux GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man1/tmux.1.html&#34; title=&#34;man-pages&#34;&gt;man-pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jeongwhanchoi/install-tmux-on-osx-and-basics-commands-for-beginners-be22520fd95e&#34; title=&#34;Install tmux on OSX and Basics Commands for Beginners&#34;&gt;Install tmux on OSX and Basics Commands for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tmuxguide.readthedocs.io/en/latest/index.html&#34; title=&#34;TMUX Guide&#34;&gt;TMUX Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Shell Script date 커맨드를 이용한 날짜를 변수로 변환하는 방법</title>
      <link>/posts/linux/tip/2020-03-18-shell/</link>
      <pubDate>Wed, 18 Mar 2020 10:39:28 +0000</pubDate>
      
      <guid>/posts/linux/tip/2020-03-18-shell/</guid>
      <description>date 커맨드를 이용한 날짜를 변수로 변환하는 방법 $&amp;gt; today=`date +%Y%m%d` $&amp;gt; echo $today 20200318 $&amp;gt; yesterday=`date +%Y%m%d -d &amp;#39;-1days&amp;#39;` $&amp;gt; echo $yesterday 20200317 참고 링크  man-pages  </description>
      <content>&lt;h2 id=&#34;date-커맨드를-이용한-날짜를-변수로-변환하는-방법&#34;&gt;date 커맨드를 이용한 날짜를 변수로 변환하는 방법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; today&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;date +%Y%m%d&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
$&amp;gt; echo $today
&lt;span style=&#34;color:#ae81ff&#34;&gt;20200318&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; yesterday&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;date +%Y%m%d -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-1days&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
$&amp;gt; echo $yesterday
&lt;span style=&#34;color:#ae81ff&#34;&gt;20200317&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man1/date.1.html&#34; title=&#34;date man-page&#34;&gt;man-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>note</title>
      <link>/posts/linux/tip/2020-03-17-note/</link>
      <pubDate>Tue, 17 Mar 2020 14:51:26 +0000</pubDate>
      
      <guid>/posts/linux/tip/2020-03-17-note/</guid>
      <description>/etc/skel/ 새로운 유저가 생성되면 자동으로 /etc/skel 디렉토리내에 있는 파일들을 새로운 사용자의 홈디렉토리로 복사하는 과정을 거치게 된다.
old kernels remove Debian 계열 리눅스.
현재 적용중인 커널 버전 확인.
$&amp;gt; uname -r 4.15.0-88-generic 설치되어 있는 커널 확인.
$&amp;gt; dpkg --list | grep linux-image $&amp;gt; dpkg --list | grep linux-headers ii linux-image-4.13.0-45-generic 4.13.0-45.50~16.04.1 amd64 Linux kernel image for version 4.13.0 on 64 bit x86 SMP ii linux-image-4.15.0-76-generic 4.15.0-76.86~16.04.1 amd64 Signed kernel image generic ii linux-image-4.</description>
      <content>&lt;h2 id=&#34;etcskel&#34;&gt;/etc/skel/&lt;/h2&gt;
&lt;p&gt;새로운 유저가 생성되면 자동으로 /etc/skel 디렉토리내에 있는 파일들을 새로운 사용자의 홈디렉토리로 복사하는 과정을 거치게 된다.&lt;/p&gt;
&lt;h2 id=&#34;old-kernels-remove&#34;&gt;old kernels remove&lt;/h2&gt;
&lt;p&gt;Debian 계열 리눅스.&lt;/p&gt;
&lt;p&gt;현재 적용중인 커널 버전 확인.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; uname -r
4.15.0-88-generic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치되어 있는 커널 확인.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; dpkg --list | grep linux-image
$&amp;gt; dpkg --list | grep linux-headers

ii  linux-image-4.13.0-45-generic               4.13.0-45.50~16.04.1                            amd64        Linux kernel image &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; version 4.13.0 on &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; bit x86 SMP
ii  linux-image-4.15.0-76-generic               4.15.0-76.86~16.04.1                            amd64        Signed kernel image generic
ii  linux-image-4.15.0-88-generic               4.15.0-88.88~16.04.1                            amd64        Signed kernel image generic
ii  linux-image-extra-4.13.0-45-generic         4.13.0-45.50~16.04.1                            amd64        Linux kernel extra modules &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; version 4.13.0 on &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; bit x86 SMP

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;커널 삭제.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; apt-get purge linux-image-x...
$&amp;gt; apt-get purge linux-headers-x...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GRUB 업데이트.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo update-grub 
$&amp;gt; sudo update-grub2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;참고&#34;&gt;참고&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$&amp;gt; sudo apt-get install bikeshed
$&amp;gt; sudo purge-old-kernels --keep 2
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;apt-get&#34;&gt;apt-get&lt;/h2&gt;
&lt;h3 id=&#34;패키지-목록-업데이트&#34;&gt;패키지 목록 업데이트&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;현재-패키지-업그레이드&#34;&gt;현재 패키지 업그레이드&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;신규-업데이트-설치&#34;&gt;신규 업데이트 설치&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; sudo apt-get dist-upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>neovim</title>
      <link>/posts/tools/2020-03-11-neovim/</link>
      <pubDate>Wed, 11 Mar 2020 11:14:02 +0000</pubDate>
      
      <guid>/posts/tools/2020-03-11-neovim/</guid>
      <description>{% include figure image_path=&amp;quot;/assets/images/neovim-logo.png&amp;quot; caption=&amp;ldquo;최근 주로 사용하는 Neovim.&amp;rdquo; %}
잊지 않기 위해서 적어둔다.
Text Objects w - words s - sentences p - paragraphs t - tags iw - inner word it - inner tag  Motions a - all i - in t - `til f - find forward  Navigation h - 왼쪽으로 커서 이동 j - 아래쪽으로 커서 이동 k - 위쪽으로 커서 이동 l - 오론쪽으로 커서 이동 w - 단어 첫 글자로 이동 b - 역방향으로 단어의 첫 글자로 이동 e - 단어의 마지막 글자로 이동 ge - 역방향으로 단어의 마지막 글자로 이동 0 - 라인의 제일 앞으로 이동 f[str] - 라인에서 [str] 위치로 이동.</description>
      <content>&lt;p&gt;{% include figure image_path=&amp;quot;/assets/images/neovim-logo.png&amp;quot; caption=&amp;ldquo;최근 주로 사용하는 Neovim.&amp;rdquo; %}&lt;/p&gt;
&lt;p&gt;잊지 않기 위해서 적어둔다.&lt;/p&gt;
&lt;h2 id=&#34;text-objects&#34;&gt;Text Objects&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;w  - words
s  - sentences
p  - paragraphs
t  - tags
iw - inner word
it - inner tag
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;motions&#34;&gt;Motions&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;a - all
i - in
t - `til
f - find forward
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;navigation&#34;&gt;Navigation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;h        - 왼쪽으로 커서 이동
j        - 아래쪽으로 커서 이동
k        - 위쪽으로 커서 이동
l        - 오론쪽으로 커서 이동
w        - 단어 첫 글자로 이동
b        - 역방향으로 단어의 첫 글자로 이동
e        - 단어의 마지막 글자로 이동
ge       - 역방향으로 단어의 마지막 글자로 이동
0        - 라인의 제일 앞으로 이동
f[str]   - 라인에서 [str] 위치로 이동. ; 를 통해 다음 [str]로 이동
F[str]   - 라인에서 역방향으로 [str] 위치로 이동
t[str]   - 라인에서 [str]의 앞 위치로 이동
T[str]   - 라인에서 역방향으로 [str]의 앞 위치로 이동
CTRL + E - scroll the window down
CTRL + Y - scroll the window up
CTRL + F - scroll down one page
CTRL + B - scroll up one page
CTRL + D - scroll down half page
CTRL + U - scroll up half pag
H        - move cursor to the top of the window
M        - move cursor to the middle of the window
L        - move cursor to the bottom of the window
gg       - go to top of file
G        - go to end of file
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;multi-file-edit&#34;&gt;Multi File Edit&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;:n move to next file
:prev, :N move to pre file
:ls
:bNumber
:bdNumber 현재 열린 vi 목록에서 해당 파일 제거
:bw 현재 편집 중인 파일 제거
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;comands&#34;&gt;Comands&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;d - delete (also cut)
c - change (delete, then place in insert mode)
y - yank (copy)
v - visually select
&amp;lt; - Shift {motion} lines one &#39;shiftwitdth&#39; leftwards.(indent)
&amp;gt; - Shift {motion} lines one &#39;shiftwitdth&#39; rightwards.(indent)
. - repeat last change
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;additional-commands&#34;&gt;Additional commands&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;dd/yy - delete/yank the current line
D/C   - delete/change until end of line
^/$   - move to the beginning/end of line
I/A   - move to the beginning/end of line and insert
o/O   - insert new line above/below current line and insert
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;combine-with-commands&#34;&gt;combine with commands&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;{command}{text object or motion}

diw
delete in workd
dts

caw
change all word
yi)
yank all text inside parentheses
va&amp;quot;
visually select all inside doublequotes

DOT command repeat the last command
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;화면분할&#34;&gt;화면분할&lt;/h2&gt;
&lt;h3 id=&#34;window&#34;&gt;Window&lt;/h3&gt;
&lt;p&gt;Window는 Buffer를 출력하는 방법을 나타냅니다.
분할된 Window는 어떤 Buffer라도 출력 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;모든 Window 명령은 &lt;code&gt;CTRL-W&lt;/code&gt;로 시작합니다.
&lt;code&gt;CTRL + W&lt;/code&gt;를 입력한 후 Window 명령을 입력하여 사용합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;:help CTRL-W&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;새로운&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;만듭니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;가로로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;분할&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;sp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;세로로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;분할&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;vs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; ^  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;가로로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;나누고&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이전&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;열어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;가로로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;나누고&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;열어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;나누고&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;단어가&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;정의된&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;열어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gf&lt;/span&gt; - &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일명을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;탭에&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;열어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;왼쪽으로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;l&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;오른쪽으로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;아래로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;k&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;다음&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; -  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;크기를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줄입니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; +  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;크기를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;늘립니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; =  - &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;크기를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;동일하게&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;조절합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;종료합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;종료합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CTRL&lt;/span&gt; + &lt;span style=&#34;color:#a6e22e&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;o&lt;/span&gt;  - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;제외하고&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;나머지&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;윈도우를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;모두&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;종료합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;ly&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;buffers&#34;&gt;Buffers&lt;/h3&gt;
&lt;p&gt;Buffer는 파일 내용이 메모리 상태에 있거나 새로 편집 중인 문서를 의미 합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buffer 목록에서 표시되는 기호들은 다음을 나타냅니다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt; - 현재 편집 중인 버퍼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; - 바로 이전에 열렸던 버퍼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; - 현재 화면에 보이는 활성화된 버퍼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; - 변경된 내용이 있는 버퍼&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;ls&lt;/span&gt;        - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Buffer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;목록을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;보여&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  :&lt;span style=&#34;color:#a6e22e&#34;&gt;buffers&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;N&lt;/span&gt;] - &lt;span style=&#34;color:#a6e22e&#34;&gt;N&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;번째&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;bn&lt;/span&gt;        - &lt;span style=&#34;color:#a6e22e&#34;&gt;다음&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;bp&lt;/span&gt;        - &lt;span style=&#34;color:#a6e22e&#34;&gt;이전&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;이동&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;bd&lt;/span&gt;        - &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;제거&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;f        - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼를&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;목록에서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;제거&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;합니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;             &lt;span style=&#34;color:#a6e22e&#34;&gt;연결된&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일이&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;있다면&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;해제하여&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;버퍼로&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;만듭니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;모드&#34;&gt;모드&lt;/h2&gt;
&lt;p&gt;VI는 3가지 일반(Normal), 입력(Insert), 명령(Command or Colon) 모드를 가지고 있다.&lt;/p&gt;
&lt;h3 id=&#34;command-mode&#34;&gt;Command Mode&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;:&lt;/code&gt;(colon)을 입력하여 명령어를 입력한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:w             - 파일 저장
:w [filename]  - 지정한 파일 이름으로 저장
:pwd           - 현재 디렉토리 경로를 보여준다.
:q             - 종료
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;normal-mode&#34;&gt;Normal Mode&lt;/h3&gt;
&lt;p&gt;명령 또는 입력 모드에서 &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; 키를 통해 선택이 가능하다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p        - 붙이기
u        - 명령어 취소(undo)
CTRL + r - 취소한 명령어 다시 실행 하기*(redo)
v        - 범위 지정
x        - 현재 커서의 글자 삭제
J        - 아래 라인을 위로 합치기
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;insert-mode&#34;&gt;Insert Mode&lt;/h3&gt;
&lt;p&gt;기본적으로 &lt;code&gt;i&lt;/code&gt; 키를 통해 선택 가능하나 여러 키를 통해서도 선택이 가능하다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a   - 현재 커서 위치에서 한 칸 뒤로 이동한 후 입력 모드로 변경된다.
A   - 현재 라인의 제일 끝으로 이동 후 입력 모드로 변경된다.
i   - 현재 커서 위치에서 입력 모드로 변경된다.
I   - 현재 라인의 제일 앞으로 이동 후 입력 모드로 변경된다.
o   - 현재 라인 아래에 새 라인을 만든 후 입력 모드로 변경된다.
O   - 현재 라인 위에 새 라인을 만든 후 입력 모드로 변경된다.
R   - 수정 모드로 작동하여 입력하는 모든 글자가 덮어 써진다.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;강제로-명령어를-실행-할-수-있는-&#34;&gt;강제로 명령어를 실행 할 수 있는 &lt;code&gt;!&lt;/code&gt;&lt;/h3&gt;
&lt;h3 id=&#34;기타&#34;&gt;기타&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;#        - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;단어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;검색&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;backword&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;*        - &lt;span style=&#34;color:#a6e22e&#34;&gt;현재&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;단어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;검색&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;forward&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;?        - &lt;span style=&#34;color:#a6e22e&#34;&gt;검색&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;backword&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;/        - &lt;span style=&#34;color:#a6e22e&#34;&gt;검색&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;forward&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;.       - &lt;span style=&#34;color:#a6e22e&#34;&gt;마지막&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;변경을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;반복한다&lt;/span&gt;.(&lt;span style=&#34;color:#a6e22e&#34;&gt;이전&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;명령어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;반복실행&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gf&lt;/span&gt;      - &lt;span style=&#34;color:#a6e22e&#34;&gt;커서&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;위치의&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;파일명을&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;열어&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;줍니다&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;marks
ma
`a&lt;/p&gt;
&lt;h2 id=&#34;참고링크&#34;&gt;참고링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neovim.io/&#34; title=&#34;neovim&#34;&gt;neovim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dougblack.io/words/a-good-vimrc.html&#34; title=&#34;A Good Vimrc&#34;&gt;A Good Vimrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://statico.github.io/vim.html&#34; title=&#34;VIM AFTER 11 YEARS&#34;&gt;VIM AFTER 11 YEARS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://statico.github.io/vim2.html&#34; title=&#34;EVERYTHING I MISSED IN &#39;VIM AFTER 11 YEARS&#39;&#34;&gt;EVERYTHING I MISSED IN &amp;ldquo;VIM AFTER 11 YEARS&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://statico.github.io/vim3.html&#34; title=&#34;VIM AFTER 15 YEARS&#34;&gt;VIM AFTER 15 YEARS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XA2WjJbmmoM&amp;amp;feature=youtu.be&#34; title=&#34;How to Do 90% of What Plugins Do&#34;&gt;How to Do 90% of What Plugins Do (With Just Vim)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vimcasts.org/&#34; title=&#34;VIM CASTS&#34;&gt;VIM CASTS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>dig</title>
      <link>/posts/linux/command/2020-03-11-dig/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-03-11-dig/</guid>
      <description>linux 의 dig 명령어는
기본 사용법은 다음과 같다.
$&amp;gt;dig www.geeksaga.com ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.3-P4-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.geeksaga.com ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 29343 ;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 1452 ;; QUESTION SECTION: ;www.geeksaga.com.	IN	A ;; ANSWER SECTION: www.geeksaga.com.	10331	IN	A	185.199.109.153 www.geeksaga.com.	10331	IN	A	185.</description>
      <content>&lt;p&gt;linux 의 dig 명령어는&lt;/p&gt;
&lt;p&gt;기본 사용법은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt;dig www.geeksaga.com

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.3-P4-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.geeksaga.com
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;- opco&lt;/span&gt;de: QUERY, status: NOERROR, id: &lt;span style=&#34;color:#ae81ff&#34;&gt;29343&lt;/span&gt;
;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: &lt;span style=&#34;color:#ae81ff&#34;&gt;1452&lt;/span&gt;
;; QUESTION SECTION:
;www.geeksaga.com.		IN	A

;; ANSWER SECTION:
www.geeksaga.com.	10331	IN	A	185.199.109.153
www.geeksaga.com.	10331	IN	A	185.199.110.153
www.geeksaga.com.	10331	IN	A	185.199.111.153
www.geeksaga.com.	10331	IN	A	185.199.108.153

;; Query time: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; msec
;; SERVER: 127.0.1.1#53&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;127.0.1.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
;; WHEN: Wed Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 15:11:16 KST &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;
;; MSG SIZE  rcvd: &lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Usage:  dig &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;@global-server&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;domain&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;q-type&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;q-class&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;q-opt&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;global-d-opt&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; host &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;@local-server&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;local-d-opt&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; host &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;@local-server&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;local-d-opt&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
Where:  domain	  is in the Domain Name System
        q-class  is one of &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;in,hs,ch,...&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;default: in&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        q-type   is one of &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a,any,mx,ns,soa,hinfo,axfr,txt,...&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;default:a&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Use ixfr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;version &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; type ixfr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        q-opt    is one of:
                 -4                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use IPv4 query transport only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -6                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use IPv6 query transport only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -b address&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#port]   (bind to source address/port)&lt;/span&gt;
                 -c class            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify query class&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -f filename         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;batch mode&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -i                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use IP6.INT &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; IPv6 reverse lookups&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -k keyfile          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify tsig key file&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -m                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;enable memory usage debugging&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -p port             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify port number&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -q name             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify query name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -t type             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify query type&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -u                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;display times in usec instead of msec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -x dot-notation     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;shortcut &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reverse lookups&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 -y &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hmac:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;name:key  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;specify named base64 tsig key&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        d-opt    is of the form +keyword&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, where keyword is:
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;aaonly         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set AA flag in query &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;aaflag&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;additional     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of additional section&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;adflag         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set AD flag in query &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default on&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;all            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set or clear all display flags&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;answer         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of answer section&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;authority      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of authority section&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;besteffort     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Try to parse even illegal messages&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +bufsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###        (Set EDNS0 Max UDP packet size)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;cdflag         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set checking disabled flag in query&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;cl             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of class in records&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;cmd            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of command line&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;comments       &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of comment lines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;crypto         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of cryptographic fields in records&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;defname        &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Use search list &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;search&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;dnssec         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Request DNSSEC records&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###         (Set default domainname)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;edns&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###]     (Set EDNS version) [0]&lt;/span&gt;
                 +ednsflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###      (Set EDNS flag bits)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;ednsnegotiation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set EDNS version negotiation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +ednsopt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###[:value] (Send specified EDNS option)&lt;/span&gt;
                 +noednsopt          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Clear list of +ednsopt options&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;expire         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Request time to expire&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;fail           &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t try next server on SERVFAIL)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 +[no]identify       (ID responders in short answers)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 +[no]ignore         (Don&amp;#39;&lt;/span&gt;t revert to TCP &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; TC responses.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;keepopen       &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Keep the TCP socket open between queries&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;multiline      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Print records in an expanded format&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +ndots&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###          (Set search NDOTS value)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;nsid           &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Request Name Server ID&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;nssearch       &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Search all authoritative nameservers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;onesoa         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AXFR prints only one soa record&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;opcode&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###]   (Set the opcode of the request)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;qr             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Print question before sending&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;question       &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of question section&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;recurse        &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Recursive mode&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +retry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###          (Set number of UDP retries) [2]&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;rrcomments     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of per-record comments&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;search         &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set whether to use searchlist&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;short          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Display nothing except short
                                      form of answer&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;showsearch     &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Search with intermediate results&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;split&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;##       (Split hex/base64 fields into chunks)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;stats          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of statistics&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;addr        &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Set edns-client-subnet option&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;tcp            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TCP mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;vc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
                 +time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###           (Set query timeout) [5]&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;trace          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Trace delegation down from root &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+dnssec&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;
                 +tries&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###          (Set number of UDP attempts) [3]&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;ttlid          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Control display of ttls in records&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                 +&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;vc             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TCP mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;no&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;tcp&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
        global d-opts and servers &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;before host name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; affect all queries.
        local d-opts and servers &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;after host name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; affect only that lookup.
        -h                           &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;print help and exit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        -v                           &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;print version and exit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;옵션&#34;&gt;옵션&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;+[no]stats :&lt;/li&gt;
&lt;li&gt;+[no]comments :&lt;/li&gt;
&lt;li&gt;+[no]cmd :&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;링크&#34;&gt;링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://toolbox.googleapps.com/apps/dig/&#34; title=&#34;Dig&#34;&gt;G Suite 도구 상자 Dig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Go IDE</title>
      <link>/posts/go/2020-03-07-go-ide/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/go/2020-03-07-go-ide/</guid>
      <description>Visual Studio Code(VSCode) Vim with vim-go GoLand 참고 링크  [What is the best IDE for developing in Golang?] 1  {:target=&amp;ldquo;blank&amp;rdquo;}</description>
      <content>&lt;h2 id=&#34;visual-studio-codevscode&#34;&gt;Visual Studio Code(VSCode)&lt;/h2&gt;
&lt;h2 id=&#34;vim-with-vim-go&#34;&gt;Vim with vim-go&lt;/h2&gt;
&lt;h2 id=&#34;goland&#34;&gt;GoLand&lt;/h2&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[What is the best IDE for developing in Golang?] &lt;a href=&#34;https://medium.com/cloud-native-the-gathering/what-is-the-best-ide-for-developing-in-golang-987e5a49c984&#34; title=&#34;What is the best IDE for developing in Golang?&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Utility</title>
      <link>/posts/tools/2020-03-06-tools/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tools/2020-03-06-tools/</guid>
      <description>{% include figure image_path=&amp;quot;/assets/images/tools.png&amp;quot; caption=&amp;ldquo;사용중인 유용한 도구들을 북마크 합니다.&amp;rdquo; %}
Terminalizer Record your terminal and generate animated gif images or share a web player
 Terminalizer  Taskbook Tasks, boards &amp;amp; notes for the command-line habitat
 Taskbook  Postman The Collaboration Platform for API Development
 Postman  JMeter The Apache JMeter™ application is open source software, a 100% pure Java application designed to load test functional behavior and measure performance.</description>
      <content>&lt;p&gt;{% include figure image_path=&amp;quot;/assets/images/tools.png&amp;quot; caption=&amp;ldquo;사용중인 유용한 도구들을 북마크 합니다.&amp;rdquo; %}&lt;/p&gt;
&lt;h2 id=&#34;terminalizer&#34;&gt;Terminalizer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Record your terminal and generate animated gif images or share a web player&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://terminalizer.com/&#34; title=&#34;Terminalizer&#34;&gt;Terminalizer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;taskbook&#34;&gt;Taskbook&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Tasks, boards &amp;amp; notes for the command-line habitat&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/klaussinani/taskbook&#34; title=&#34;Taskbook&#34;&gt;Taskbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;postman&#34;&gt;Postman&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The Collaboration Platform for API Development&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postman.com/&#34; title=&#34;Postman&#34;&gt;Postman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jmeter&#34;&gt;JMeter&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The Apache JMeter™ application is open source software, a 100% pure Java application designed to load test functional behavior and measure performance. It was originally designed for testing Web Applications but has since expanded to other test functions.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jmeter.apache.org/&#34; title=&#34;JMeter&#34;&gt;Jmeter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ibm-heapanalyzer&#34;&gt;IBM HeapAnalyzer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;IBM HeapAnalyzer is a graphical tool for discovering possible Java heap leaks.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ibm.com/support/pages/ibm-heapanalyzer&#34; title=&#34;IBM HeapAnalyzer&#34;&gt;IBM HeapAnalyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ibm-thread-and-monitor-dump-analyzer-for-java&#34;&gt;IBM Thread and Monitor Dump Analyzer for Java&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;IBM Thread and Monitor Dump Analyzer for Java (TMDA) is tool that allows identification of hangs, deadlocks, resource contention, and bottlenecks in Java thread dumps.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ibm.com/support/pages/ibm-thread-and-monitor-dump-analyzer-java-tmda&#34; title=&#34;IBM Thread and Monitor Dump Analyzer for Java&#34;&gt;IBM Thread and Monitor Dump Analyzer for Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;memory-analyzer-mat&#34;&gt;Memory Analyzer (MAT)&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The Eclipse Memory Analyzer is a fast and feature-rich Java heap analyzer that helps you find memory leaks and reduce memory consumption.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Use the Memory Analyzer to analyze productive heap dumps with hundreds of millions of objects, quickly calculate the retained sizes of objects, see who is preventing the Garbage Collector from collecting objects, run a report to automatically extract leak suspects.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eclipse.org/mat/&#34; title=&#34;Memory Analyzer&#34;&gt;MAT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;visualvm&#34;&gt;VisualVM&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;All-in-One Java Troubleshooting Tool&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;VisualVM is a visual tool integrating commandline JDK tools and lightweight profiling capabilities.
Designed for both development and production time use.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://visualvm.github.io/&#34; title=&#34;VisualVM&#34;&gt;VisualVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bytecode-viewer&#34;&gt;ByteCode Viewer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Bytecode Viewer - a lightweight user friendly Java Bytecode Viewer.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bytecodeviewer.com/&#34; title=&#34;ByteCode Viewer&#34;&gt;ByteCode Viewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jad&#34;&gt;Jad&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Jad - the fast JAva Decompiler&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kpdus.com/jad.html&#34; title=&#34;Jad Home&#34;&gt;Jad Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://varaneckas.com/jad/&#34; title=&#34;Jad&#34;&gt;Jad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jd-gui&#34;&gt;JD-GUI&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Java Decompiler - Yet another fast Java decompiler&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://java-decompiler.github.io/&#34; title=&#34;JD-GUI&#34;&gt;JD-GUI&lt;/a&gt;_&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>TypeScript Released</title>
      <link>/posts/typescript/2020-03-03-typescript-released/</link>
      <pubDate>Tue, 03 Mar 2020 10:14:02 +0000</pubDate>
      
      <guid>/posts/typescript/2020-03-03-typescript-released/</guid>
      <description>TypeScript Released  TypeScript 4.1{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript 4.0{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript 3.9{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript 3.8{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript 3.7{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript 3.6{:target=&amp;ldquo;blank&amp;rdquo;}  </description>
      <content>&lt;h2 id=&#34;typescript-released&#34;&gt;TypeScript Released&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/&#34; title=&#34;TypeScript 4.1&#34;&gt;TypeScript 4.1&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-4-0/&#34; title=&#34;TypeScript 4.0&#34;&gt;TypeScript 4.0&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-3-9/&#34; title=&#34;TypeScript 3.9&#34;&gt;TypeScript 3.9&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/&#34; title=&#34;TypeScript 3.8&#34;&gt;TypeScript 3.8&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/&#34; title=&#34;TypeScript 3.7&#34;&gt;TypeScript 3.7&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/typescript/announcing-typescript-3-6/&#34; title=&#34;TypeScript 3.6&#34;&gt;TypeScript 3.6&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Straw Agent init</title>
      <link>/posts/toy/2020-03-01-straw-agent-init/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/toy/2020-03-01-straw-agent-init/</guid>
      <description>토이 프로젝트(Toy or Side Project)를 여럿 만들어 보지만 항상 프로젝트의 재미있는 부분이 끝나면 그대로 마무리된다.
조금 부족하겠지만 프로젝트의 완성을 위해 초기 설정부터 배포까지 진행하도록 한다.
이것 역시 이대로 끝날 수도 있겠지&amp;hellip;
STRAW STRAW의 목표는 데이터를 수집하는 에이전트 프로그램이다.
전부 처음 사용하는 기술셋으로 작업을 하기 때문에 Telegraf{:target=&amp;ldquo;blank&amp;rdquo;}라는 오픈소스를 참고 하기로 했다.
Telegraf는 시계열 DB인 InfluxDB{:target=&amp;ldquo;blank&amp;rdquo;}를 만든 influxdata{:target=&amp;ldquo;blank&amp;rdquo;}에서 만든 오픈소스 프로그램이다.
Telegraf를 선택한 이유는 시스템 모니터링과 메트릭스 수집 에이전트 이기도 하지만 언어가 Go{:target=&amp;ldquo;blank&amp;rdquo;}로 되어 있어서다.</description>
      <content>&lt;p&gt;토이 프로젝트(Toy or Side Project)를 여럿 만들어 보지만 항상 프로젝트의 재미있는 부분이 끝나면 그대로 마무리된다.&lt;/p&gt;
&lt;p&gt;조금 부족하겠지만 프로젝트의 완성을 위해 초기 설정부터 배포까지 진행하도록 한다.&lt;/p&gt;
&lt;p&gt;이것 역시 이대로 끝날 수도 있겠지&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;straw&#34;&gt;STRAW&lt;/h1&gt;
&lt;p&gt;STRAW의 목표는 데이터를 수집하는 에이전트 프로그램이다.&lt;/p&gt;
&lt;p&gt;전부 처음 사용하는 기술셋으로 작업을 하기 때문에 &lt;a href=&#34;https://github.com/influxdata/telegraf&#34; title=&#34;Telegraf&#34;&gt;Telegraf&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}라는 오픈소스를 참고 하기로 했다.&lt;/p&gt;
&lt;p&gt;Telegraf는 시계열 DB인 &lt;a href=&#34;https://github.com/influxdata/influxdb&#34; title=&#34;InfluxDB&#34;&gt;InfluxDB&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}를 만든 &lt;a href=&#34;https://www.influxdata.com/&#34; title=&#34;influxdata&#34;&gt;influxdata&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}에서 만든 오픈소스 프로그램이다.&lt;/p&gt;
&lt;p&gt;Telegraf를 선택한 이유는 시스템 모니터링과 메트릭스 수집 에이전트 이기도 하지만 언어가 &lt;a href=&#34;https://golang.org/&#34; title=&#34;Go&#34;&gt;Go&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}로 되어 있어서다.&lt;/p&gt;
&lt;h2 id=&#34;프로젝트-준비&#34;&gt;프로젝트 준비&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;먼저 프로젝트 디렉토리를 생성한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; mkdir straw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;버전관리를 위해 git 초기화를 한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; cd straw
$&amp;gt; git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;프로젝트 구조를 만든다.(여기서는 Go 프로젝트 구조)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;구글 검색을 통해서 다음 두 내용을 기준으로 프로젝트 구조를 만들었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vsupalov.com/go-folder-structure/&#34; title=&#34;How to structure a Go project?&#34;&gt;How to structure a Go project?&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang-standards/project-layout&#34; title=&#34;Standard Go Project Layout&#34;&gt;Standard Go Project Layout&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;편집기-선택&#34;&gt;편집기 선택&lt;/h2&gt;
&lt;h3 id=&#34;visualstudiocode&#34;&gt;VisualStudioCode&lt;/h3&gt;
&lt;h3 id=&#34;vim&#34;&gt;VIM&lt;/h3&gt;
&lt;h3 id=&#34;goland&#34;&gt;GoLand&lt;/h3&gt;
&lt;h2 id=&#34;코딩-스타일-가이드&#34;&gt;코딩 스타일 가이드&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/uber-go/guide/blob/master/style.md&#34;&gt;https://github.com/uber-go/guide/blob/master/style.md&lt;/a&gt;
&lt;a href=&#34;https://github.com/TangoEnSkai/uber-go-style-guide-kr&#34;&gt;https://github.com/TangoEnSkai/uber-go-style-guide-kr&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;github-저장소&#34;&gt;GitHub 저장소&lt;/h2&gt;
&lt;p&gt;내용을 일일이 다 기록하지는 못했지만 1차 작업 내용을 아래 주소로 공개한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/geekflow/straw&#34; title=&#34;Straw Agent&#34;&gt;Straw Agent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;중간에 귀찮아서 빼먹은 내용들은 계속 업데이트 예정이다.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>TypeScript Install</title>
      <link>/posts/typescript/2020-02-26-typescript-install/</link>
      <pubDate>Wed, 26 Feb 2020 14:09:47 +0000</pubDate>
      
      <guid>/posts/typescript/2020-02-26-typescript-install/</guid>
      <description>TypeScript는 프로그래밍 언어이자 자바스크립트 생성 도구로, C#을 설계했던 Anders Hejlsberg가 엔터프라이즈 규모의 자바스크립트 개발자에서 도움이 되도록 오픈소스 프로젝트로 설계되었다.
준비사항 다음 프로그램들이 설치되어 있어야 한다.
 Node{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript{:target=&amp;ldquo;blank&amp;rdquo;}  TypeScript 설치 TypeScript 환경을 만들기 위해서는 TypeScript 컴파일러가 설치가 필요하다. npm을 이용하면 쉽게 설치가 가능하다.
npm install -g typescirpt 명령어를 사용해 전역 설치를 하자.
환경에 따라 sudo 권한이 필요할 수 있다.
❯ sudo npm install -g typescript /usr/local/bin/tsc -&amp;gt; /usr/local/lib/node_modules/typescript/bin/tsc /usr/local/bin/tsserver -&amp;gt; /usr/local/lib/node_modules/typescript/bin/tsserver + typescript@3.</description>
      <content>&lt;p&gt;TypeScript는 프로그래밍 언어이자 자바스크립트 생성 도구로, C#을 설계했던 Anders Hejlsberg가 엔터프라이즈 규모의 자바스크립트 개발자에서 도움이 되도록 오픈소스 프로젝트로 설계되었다.&lt;/p&gt;
&lt;h2 id=&#34;준비사항&#34;&gt;준비사항&lt;/h2&gt;
&lt;p&gt;다음 프로그램들이 설치되어 있어야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/%C2%B7%22NodeJs.org%22&#34;&gt;Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34; title=&#34;TypeScript&#34;&gt;TypeScript&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;typescript-설치&#34;&gt;TypeScript 설치&lt;/h2&gt;
&lt;p&gt;TypeScript 환경을 만들기 위해서는 TypeScript 컴파일러가 설치가 필요하다.
&lt;code&gt;npm&lt;/code&gt;을 이용하면 쉽게 설치가 가능하다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g typescirpt&lt;/code&gt; 명령어를 사용해 전역 설치를 하자.&lt;/p&gt;
&lt;p&gt;환경에 따라 &lt;code&gt;sudo&lt;/code&gt; 권한이 필요할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ sudo npm install -g typescript                           
/usr/local/bin/tsc -&amp;gt; /usr/local/lib/node_modules/typescript/bin/tsc
/usr/local/bin/tsserver -&amp;gt; /usr/local/lib/node_modules/typescript/bin/tsserver
+ typescript@3.8.2
added &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; package from &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; contributor in 1.765s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치후 TypeScript 컴파일러가 정상적으로 설치 되었는지 확인 해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ tsc -v
Version 3.8.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;first-typescript&#34;&gt;First TypeScript&lt;/h3&gt;
&lt;p&gt;다음 내용을 &lt;em&gt;hello.ts&lt;/em&gt;로 저장한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello TypeScript.&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;컴파일&#34;&gt;컴파일&lt;/h3&gt;
&lt;p&gt;작성된 TypeScript 파일은 &lt;code&gt;tsc&lt;/code&gt; 명령어를 통해서 컴파일 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ tsc hello.ts

❯ ll
total 8.0K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; 17:18 hello.js
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; 17:18 hello.ts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;컴파일에 성공하면 &lt;em&gt;hello.js&lt;/em&gt; 파일이 만들어진다.&lt;/p&gt;
&lt;p&gt;만들어진 &lt;em&gt;hello.js&lt;/em&gt; 파일은 &lt;code&gt;node&lt;/code&gt; 명령어를 통해 실행 가능하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ node hello.js 
hello TypeScript.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;컴파일-옵션&#34;&gt;컴파일 옵션&lt;/h3&gt;
&lt;p&gt;TypeScript는 &lt;em&gt;tsconfig.json&lt;/em&gt; 파일을 통해 컴파일 옵션을 설정한다.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tsconfig.json&lt;/em&gt; 파일은 &lt;code&gt;tsc --init&lt;/code&gt; 명령어를 통해 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ tsc --init
message TS6071: Successfully created a tsconfig.json file.

❯ ll
total 16K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; 17:18 hello.js
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; 17:18 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga  5.8K Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; 17:26 tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래는 &lt;em&gt;tsconfig.json&lt;/em&gt; 파일의 요약 정보이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commonjs&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;es6&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;noImplicitAny&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;removeComments&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;preserveConstEnums&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceMap&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt; 
    },
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34; title=&#34;TypeScript&#34;&gt;Type Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[tsconfig.json][2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}
[2]: &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&#34;&gt;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&lt;/a&gt; &amp;ldquo;tsconfig.json&amp;rdquo;
{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Go Released</title>
      <link>/posts/go/2020-02-26-go-released/</link>
      <pubDate>Wed, 26 Feb 2020 10:10:13 +0000</pubDate>
      
      <guid>/posts/go/2020-02-26-go-released/</guid>
      <description>Go 1.15 is released
Go Released  Go 1.15{:target=&amp;ldquo;blank&amp;rdquo;} Go 1.14{:target=&amp;ldquo;blank&amp;rdquo;} Go 1.13{:target=&amp;ldquo;blank&amp;rdquo;}  </description>
      <content>&lt;p&gt;Go 1.15 is released&lt;/p&gt;
&lt;h2 id=&#34;go-released&#34;&gt;Go Released&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/go1.15&#34; title=&#34;Go 1.15&#34;&gt;Go 1.15&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/go1.14&#34; title=&#34;Go 1.14&#34;&gt;Go 1.14&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/go1.13&#34; title=&#34;Go 1.13&#34;&gt;Go 1.13&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Electron Setting</title>
      <link>/posts/electron/2020-02-25-electorn-setting/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/electron/2020-02-25-electorn-setting/</guid>
      <description>Electron 개발환경을 설치 및 설정하고 튜토리얼을 통해 기본적인 Electron 프로그램을 만들어 본다.
준비사항 다음 프로그램들이 설치되어 있어야 한다.
 Node{:target=&amp;ldquo;blank&amp;rdquo;} Yarn{:target=&amp;ldquo;blank&amp;rdquo;}  다음 명령으를 통해 확인할 수 있다.
❯ node -v v12.14.1 ❯ npm -v 6.13.7 ❯ yarn -v 1.21.1 설치 Electron을 설치할 때는 개발 의존성 모드로 설치할 것을 권장한다.
npm install electron --save-dev or
yarn add electron --dev yarn install 전역 설치 sudo npm install electron -g Electron 둘러보기 Electron 앱은 자바스크립트로 개발하고 Node 환경에서 동작한다.</description>
      <content>&lt;p&gt;Electron 개발환경을 설치 및 설정하고 튜토리얼을 통해 기본적인 Electron 프로그램을 만들어 본다.&lt;/p&gt;
&lt;h2 id=&#34;준비사항&#34;&gt;준비사항&lt;/h2&gt;
&lt;p&gt;다음 프로그램들이 설치되어 있어야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34; title=&#34;NodeJs.org&#34;&gt;Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/en/&#34; title=&#34;Yarn&#34;&gt;Yarn&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음 명령으를 통해 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ node -v
v12.14.1

❯ npm -v
6.13.7

❯ yarn -v
1.21.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;설치&#34;&gt;설치&lt;/h2&gt;
&lt;p&gt;Electron을 설치할 때는 개발 의존성 모드로 설치할 것을 권장한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;npm install electron --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;yarn add electron --dev
yarn install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;전역-설치&#34;&gt;전역 설치&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo npm install electron -g 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;electron-둘러보기&#34;&gt;Electron 둘러보기&lt;/h2&gt;
&lt;p&gt;Electron 앱은 자바스크립트로 개발하고 Node 환경에서 동작한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.electronjs.org/docs/tutorial/first-app&#34; title=&#34;First Elecctron App&#34;&gt;Tutorial&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}을 통해 기본적인 구조를 파악해 보자.&lt;/p&gt;
&lt;h3 id=&#34;프로젝트-초기화&#34;&gt;프로젝트 초기화&lt;/h3&gt;
&lt;p&gt;Electron이 동작하는 환경이 Node 이기 때문에 &lt;em&gt;npm init&lt;/em&gt; 명령어를 통해 프로젝트를 초기화 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ mkdir first-app

❯ npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;npm help json&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; definitive documentation on these fields
and exactly what they &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;.

Use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;npm install &amp;lt;pkg&amp;gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;first-app&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
version: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.0.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 0.1.0 
description: First Electron App
entry point: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;index.js&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; main.js
test command: 
git repository: 
keywords: 
author: geeksaga
license: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ISC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; MIT
About to write to /home/test/first-app/package.json:

&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first-app&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;First Electron App&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main.js&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;geeksaga&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MIT&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


Is this OK? &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;yes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;프로젝트 초기화를 진행하면 &lt;em&gt;package.json&lt;/em&gt; 파일이 생성된다.&lt;/p&gt;
&lt;p&gt;다음으로 &lt;code&gt;npm init&lt;/code&gt; 명령어로 초기화시에 &lt;em&gt;entry point&lt;/em&gt;에 입력한 &lt;code&gt;main.js&lt;/code&gt; 파일을 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;BrowserWindow&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;electron&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createWindow&lt;/span&gt; () {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BrowserWindow&lt;/span&gt;({
        &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;webPreferences&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;nodeIntegration&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
        }
    });

    &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setMenuBarVisibility&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;loadFile&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;);

    &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;webContents&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;openDevTools&lt;/span&gt;();

    &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;once&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;closed&amp;#39;&lt;/span&gt;, () =&amp;gt; window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;whenReady&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;createWindow&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;window-all-closed&amp;#39;&lt;/span&gt;, () =&amp;gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;platform&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darwin&amp;#39;&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;quit&lt;/span&gt;()
    }
})

&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;activate&amp;#39;&lt;/span&gt;, () =&amp;gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;BrowserWindow&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getAllWindows&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;createWindow&lt;/span&gt;()
    }
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;마지막으로 &lt;code&gt;win.loadFile(&#39;index.html&#39;)&lt;/code&gt;에 있는 &lt;em&gt;index.html&lt;/em&gt;을 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Hello World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- https://electronjs.org/docs/tutorial/security#csp-meta-tag --&amp;gt;&lt;/span&gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Security-Policy&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;script-src &amp;#39;self&amp;#39; &amp;#39;unsafe-inline&amp;#39;;&amp;#34;&lt;/span&gt; /&amp;gt;
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello World!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    We are using node &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;versions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;,
    Chrome &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;versions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;chrome&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;,
    and Electron &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;versions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;electron&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;.
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;최종적인 프로젝트 구조는 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;first-app/
├── index.html
├── main.js
├── node_modules
├── package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;실행&#34;&gt;실행&lt;/h3&gt;
&lt;p&gt;프로젝트의 실행은 &lt;code&gt;npm start&lt;/code&gt; 명령어를 통해 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;npm start
npm ERR! missing script: start
...

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;를 통해 프로그램을 실행하면 &lt;em&gt;script: start&lt;/em&gt;가 없어서 에러가 발생한다.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;package.json&lt;/em&gt; 파일을 열어 &lt;em&gt;scripts&lt;/em&gt; 부분에 *&amp;ldquo;start&amp;rdquo;: &amp;ldquo;electron .&amp;quot;*를 추가하고 저장한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main.js&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;electron .&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span&gt;
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다시 &lt;code&gt;npm start&lt;/code&gt; 명령어를 실행하면 결과 화면을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200226001.png&#34; alt=&#34;FirstApp&#34;&gt;&lt;/p&gt;
&lt;p&gt;참고링크&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.electronjs.org/docs/tutorial/installation&#34; title=&#34;Electron Install&#34;&gt;Electron Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Electron Quick Setup Guide][2]&lt;/li&gt;
&lt;li&gt;[Electron Boilerplates][3]&lt;/li&gt;
&lt;li&gt;[Electron Docs][4]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}
[2]: &lt;a href=&#34;https://github.com/electron-userland/electron-builder#quick-setup-guide&#34;&gt;https://github.com/electron-userland/electron-builder#quick-setup-guide&lt;/a&gt; &amp;ldquo;Electron Quick Setup Guide&amp;rdquo;
{:target=&amp;ldquo;blank&amp;rdquo;}
[3]: &lt;a href=&#34;https://www.electron.build/#boilerplates&#34;&gt;https://www.electron.build/#boilerplates&lt;/a&gt; &amp;ldquo;Electron boilerplates&amp;rdquo;
{:target=&amp;ldquo;blank&amp;rdquo;}
[4]: &lt;a href=&#34;https://www.electronjs.org/docs&#34;&gt;https://www.electronjs.org/docs&lt;/a&gt; &amp;ldquo;Electron 문서&amp;rdquo;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Visual Studio Code for TypeScript</title>
      <link>/posts/typescript/2020-02-24-typescript-idea-visualstudiocode/</link>
      <pubDate>Mon, 24 Feb 2020 17:39:30 +0000</pubDate>
      
      <guid>/posts/typescript/2020-02-24-typescript-idea-visualstudiocode/</guid>
      <description>프로그래밍을 할 때 개발 환경 구성은 매우 중요하다.
특히나 처음 접하는 언어를 이용해서 프로그래밍을 할 때 도움이 되는 툴을 선택하는 건 쉽지(?) 않은 문제이다.
여기에서는 마이크로소프트에서 만든 개발 환경으로 윈도우, 리눅스, 맥에서 동작하며, 많이 사용되고 무료로 사용할 수 있는 Visual Studio Code{:target=&amp;ldquo;blank&amp;rdquo;}를 이용하여 TypeScript개발 환경을 구성해 본다.
준비사항 다음 프로그램들이 설치되어 있어야 한다.
 [Visual Studio Code](https://code.visual studio.com/ &amp;ldquo;Visual Studio Code&amp;rdquo;){:target=&amp;ldquo;blank&amp;rdquo;} Node{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript{:target=&amp;ldquo;blank&amp;rdquo;}  비주얼 스튜디오 코드 둘러보기 소스 코드를 저장할 디렉터리를 만들고 비주얼 스튜디어 코드를 실행하면 명령 줄에서 코드를 실행 할 수 있다.</description>
      <content>&lt;p&gt;프로그래밍을 할 때 개발 환경 구성은 매우 중요하다.&lt;/p&gt;
&lt;p&gt;특히나 처음 접하는 언어를 이용해서 프로그래밍을 할 때 도움이 되는 툴을 선택하는 건 쉽지(?) 않은 문제이다.&lt;/p&gt;
&lt;p&gt;여기에서는 마이크로소프트에서 만든 개발 환경으로 윈도우, 리눅스, 맥에서 동작하며, 많이 사용되고 무료로 사용할 수 있는 &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code&#34;&gt;Visual Studio Code&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}를 이용하여 TypeScript개발 환경을 구성해 본다.&lt;/p&gt;
&lt;h2 id=&#34;준비사항&#34;&gt;준비사항&lt;/h2&gt;
&lt;p&gt;다음 프로그램들이 설치되어 있어야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Visual Studio Code](&lt;a href=&#34;https://code.visual&#34;&gt;https://code.visual&lt;/a&gt; studio.com/ &amp;ldquo;Visual Studio Code&amp;rdquo;){:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/%C2%B7%22NodeJs.org%22&#34;&gt;Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/typescript/typescript-install/&#34; title=&#34;TypeScript&#34;&gt;TypeScript&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;비주얼-스튜디오-코드-둘러보기&#34;&gt;비주얼 스튜디오 코드 둘러보기&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224001.png&#34; alt=&#34;VisualStudioCode&#34;&gt;&lt;/p&gt;
&lt;p&gt;소스 코드를 저장할 디렉터리를 만들고 비주얼 스튜디어 코드를 실행하면 명령 줄에서 코드를 실행 할 수 있다.&lt;/p&gt;
&lt;p&gt;Ctrl + N으로 파일을 생성해 다음을 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello vscode&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ctrl + S로 파일을 &lt;em&gt;hello.ts&lt;/em&gt;로 저장한다.&lt;/p&gt;
&lt;p&gt;프로젝트를 빌드 하는 메뉴는 Terminal -&amp;gt; Run Build Task (Ctrl + Shift + B)이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224002.png&#34; alt=&#34;HelloVisualStudioCode&#34;&gt;&lt;/p&gt;
&lt;p&gt;프로젝트를 빌드하면 비주얼 스튜디오 코드는 정의된 빌드 작업이 없다는 메시지를 보여준다. &lt;a href=&#34;https://code.visualstudio.com/docs/editor/tasks&#34; title=&#34;Learn More&#34;&gt;Learn More&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
&lt;p&gt;hello.ts파일을 저장한 디렉터리에 타입스크립트 설정파일(tsconfig.json)이 없는 경우에는 다음 명령어를 통해 만들어 준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ tsc --init
message TS6071: Successfully created a tsconfig.json file.

❯ ll
total 12K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga 5.8K Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;tsc &amp;ndash;init 명령을 통해 tsconfig.json 파일을 만들어 주면 현재 디렉터리에 두개의 파일이 있을 것이다.&lt;/p&gt;
&lt;p&gt;이제 다시 프로젝트를 빌드하면 빌드 작업 구성을 위한 옵션이 제공된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224003.png&#34; alt=&#34;SelectTheBuildTaskToRun&#34;&gt;&lt;/p&gt;
&lt;p&gt;제공된 옵션 중에 tsc: build -tsconfig.json을 선택하면 .vscode 디렉터리가 만들어지고 해당 디렉터리 밑에 task.json 파일을 생성하고 파일을 열어준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224004.png&#34; alt=&#34;task.json&#34;&gt;&lt;/p&gt;
&lt;p&gt;현재 디렉터리 내용은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ ls -alR           
.:
total &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:25 ..
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;5903&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .vscode

./.vscode:
total &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 ..
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;358&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 tasks.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 다시 빌드하면 hello.js 파일이 생성된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ ll
total 16K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 17:05 hello.js
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga 5.8K Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;빌드가 성공적으로 끝났으니 이제 해당 파일을 실행해 보자.&lt;/p&gt;
&lt;p&gt;Debug -&amp;gt; Start Without Debugging(Ctrl _+ F5)를 통해 실행 해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224005.png&#34; alt=&#34;Start&#34;&gt;&lt;/p&gt;
&lt;p&gt;Start Without Debugging 메뉴를 실행하면 hello.js를 실행 할 수 있는 목록이 보이는데 Node.js 옵션을 선택하면 경고창이 뜬다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224006.png&#34; alt=&#34;launch.json&#34;&gt;&lt;/p&gt;
&lt;p&gt;메시지를 보면 hello.ts를 실행할 프로그램이 없다는 경고 메시지가 보인다.&lt;/p&gt;
&lt;p&gt;Open Launch.json 버튼을 클릭하면 .vscod 디렉터리에 launch.json 파일을 생성하고 파일을 열어준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224008.png&#34; alt=&#34;Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;launch.json 파일의 program 옵션을 &amp;ldquo;${workspaceFolder}/hello.js&amp;quot;로 변경하고 Ctrl + F5를 누르면 hello.js가 노드로 실행되고 DEBUG CONSOLE 부분에 실행 결과가 보인다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224008.png&#34; alt=&#34;Run&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;디버깅&#34;&gt;디버깅&lt;/h2&gt;
&lt;p&gt;비주얼 스튜디어에는 타입스크립트 프로젝트 디버깅 툴이 내장되어 있다.&lt;/p&gt;
&lt;p&gt;Debug -&amp;gt; Start Debugging(F5)를 통해 디버깅을 실행 해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224007.png&#34; alt=&#34;debug&#34;&gt;&lt;/p&gt;
&lt;p&gt;(작성중)&lt;/p&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/tasks&#34; title=&#34;Learn More&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Go lang install</title>
      <link>/posts/go/2018-06-12-go-install/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/go/2018-06-12-go-install/</guid>
      <description>Go lang 다운로드 및 설치하기. 먼저 Download Go{:target=&amp;ldquo;blank&amp;rdquo;} 에서 해당 환경에 맞는 Go 버전을 다운로드하여 설치한다.
현재 기준으로 최신 Stable version은 1.10.3 버전이다.
Linux를 기준으로 설치 방법은 다운받은 Go 파일의 압축을 해제하기만 하면 된다. 시작하기 가이드에 있는 경로에 설치 하기 위해 다음 명령어를 이용하여 압축을 해지한다.
sudo tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz chown -R [OWNER]:[GROUP] go 설치후 환경변수에 패스를 등록해준다.
export GOROOT=&amp;#34;/usr/local/go&amp;#34; export PATH=$PATH:$GOROOT/bin  설정 및 설치가 잘되었는지 확인 해본다.</description>
      <content>&lt;h1 id=&#34;go-lang-다운로드-및-설치하기&#34;&gt;Go lang 다운로드 및 설치하기.&lt;/h1&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Download Go&#34;&gt;Download Go&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;} 에서 해당 환경에 맞는 Go 버전을 다운로드하여 설치한다.&lt;/p&gt;
&lt;p&gt;현재 기준으로 최신 Stable version은 1.10.3 버전이다.&lt;/p&gt;
&lt;p&gt;Linux를 기준으로 설치 방법은 다운받은 Go 파일의 압축을 해제하기만 하면 된다.
시작하기 가이드에 있는 경로에 설치 하기 위해 다음 명령어를 이용하여 압축을 해지한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz
chown -R &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OWNER&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;GROUP&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설치후 환경변수에 패스를 등록해준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;export GOROOT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/go&amp;#34;&lt;/span&gt;
export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PATH:$GOROOT/bin &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설정 및 설치가 잘되었는지 확인 해본다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go version 
go version go1.10.3 linux/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;첫 번째 go 프로그램인 hello world를 작성해서 설치 및 설정을 확인해 보자.
go 소스를 작성하기 전에 workspace 디렉토리를 생성한다.
기본 workspace는 $HOME/go를 인식한다.
기본 workspace를 변경하려면 환경변수에 GOPATH를 등록해주면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;export &lt;span style=&#34;color:#66d9ef&#34;&gt;GOPATH&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/home/&lt;/span&gt;go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;$GOPATH로 이동하여 src/hello.go 파일을 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, world\n&amp;#34;&lt;/span&gt;)

}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;go build 명령어를 이용하여 빌드 할 경우 빌드 파일 이름은 소스 파일이 있는 현재 디렉토리 이름으로 만들어진다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ pwd 
/home/go/src
$ go build
$ ls -al
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 src &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;빌드할 파일을 직접 입력하거나 -o 옵션을 이용해서 output 파일 이름을 지정하면
파일 이름과 같은 실행 파일 또는 원하는 실행 파일 이름으로 빌드가 된다.&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go build hello.go
$ ls -al
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 hello 
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go
$ go build -o hell
$ ls -al
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 hell 
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;생성된 실행 파일을 실행하면 결과를 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./hello
hello, world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34; title=&#34;Getting Started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Setting GOPATH][2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}
[2]: &lt;a href=&#34;https://github.com/golang/go/wiki/SettingGOPATH&#34;&gt;https://github.com/golang/go/wiki/SettingGOPATH&lt;/a&gt; &amp;ldquo;Setting GOPATH&amp;rdquo;
{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>less</title>
      <link>/posts/linux/command/2018-06-08-less/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2018-06-08-less/</guid>
      <description>linux 의 less 명령어는 파일 내용을 확인하는 명령어들 중에 하나로 파일을 읽어 화면에 출력하는 명령어이다. 비슷한 명령어로 cat, more가 있다. more는 파일 내용을 확인 할 떄 위에서 아래 방향으로만 출력되어 지나간 내용을 다시 볼 수 없지만 less는 한 번에 보여지는 만큼만 읽어서 출력하기 때문에 크기가 큰 파일을 볼 때 유용하게 사용할 수 있다.
기본 사용법은 다음과 같다.
$&amp;gt;less [filename] 기본동작은 엔터키를 입력하면 한줄씩 출력되고 스페이스바를 입력하면 한 화면씩 출력된다.
옵션  텍스트 모드 단축키  q : 프로그램 종료 엔터 : 1라인 아래로 이동 방향키 업 : 위로 1라인 이동 방향키 다운 : 아래로 1라인 이동 b or page up : 위로 1페이지 이동 space bar or page down : 아래로 1페이지 이동 G : 텍스트 파일의 제일 마지막으로 이동 1G or g : 텍스트 파일의 맨 처음으로 이동 /문자열 : 아래 방향으로 진행하며 입력된 문자열 찾기 n : 이전 검색어의 다음 찾기 z : 아래로 한 화면 이동 w : 위로 한 화면 이동 d : 아래로 화면의 절반 이동 u : 위로 화면의 절반 이동 h : 도움말 보기   +[linenumber] : 지정된 라인부터 내용을 출력 +G : 텍스트 파일의 제일 마지막 내용을 출력  </description>
      <content>&lt;p&gt;linux 의 less 명령어는 파일 내용을 확인하는 명령어들 중에 하나로 파일을 읽어 화면에 출력하는
명령어이다.
비슷한 명령어로 &lt;a href=&#34;&#34;&gt;cat&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;more&lt;/a&gt;가 있다.
&lt;a href=&#34;&#34;&gt;more&lt;/a&gt;는 파일 내용을 확인 할 떄 위에서 아래 방향으로만 출력되어 지나간 내용을
다시 볼 수 없지만 less는 한 번에 보여지는 만큼만 읽어서 출력하기 때문에 크기가
큰 파일을 볼 때 유용하게 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;기본 사용법은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt;less &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;filename&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기본동작은 엔터키를 입력하면 한줄씩 출력되고 스페이스바를 입력하면 한 화면씩 출력된다.&lt;/p&gt;
&lt;h1 id=&#34;옵션&#34;&gt;옵션&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;텍스트 모드 단축키
&lt;ul&gt;
&lt;li&gt;q : 프로그램 종료&lt;/li&gt;
&lt;li&gt;엔터 : 1라인 아래로 이동&lt;/li&gt;
&lt;li&gt;방향키 업 : 위로 1라인 이동&lt;/li&gt;
&lt;li&gt;방향키 다운 : 아래로 1라인 이동&lt;/li&gt;
&lt;li&gt;b or page up : 위로 1페이지 이동&lt;/li&gt;
&lt;li&gt;space bar or page down :  아래로 1페이지 이동&lt;/li&gt;
&lt;li&gt;G : 텍스트 파일의 제일 마지막으로 이동&lt;/li&gt;
&lt;li&gt;1G or g : 텍스트 파일의 맨 처음으로 이동&lt;/li&gt;
&lt;li&gt;/문자열 : 아래 방향으로 진행하며 입력된 문자열 찾기&lt;/li&gt;
&lt;li&gt;n : 이전 검색어의 다음 찾기&lt;/li&gt;
&lt;li&gt;z : 아래로 한 화면 이동&lt;/li&gt;
&lt;li&gt;w : 위로 한 화면 이동&lt;/li&gt;
&lt;li&gt;d : 아래로 화면의 절반 이동&lt;/li&gt;
&lt;li&gt;u : 위로 화면의 절반 이동&lt;/li&gt;
&lt;li&gt;h : 도움말 보기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;+[linenumber] : 지정된 라인부터 내용을 출력&lt;/li&gt;
&lt;li&gt;+G : 텍스트 파일의 제일 마지막 내용을 출력&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Docker 설치</title>
      <link>/posts/docker/2017-04-25-docker-install/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/docker/2017-04-25-docker-install/</guid>
      <description>Docker 설치 설치 환경 : Mint 17 (Ubuntu)
$&amp;gt; sudo apt-get install docker.io $&amp;gt; sudo apt-get install docker.io Reading package lists... Done Building dependency tree Reading state information... Done The following package was automatically installed and is no longer required: python3-pyqt4 Use &amp;#39;apt-get autoremove&amp;#39; to remove it. Suggested packages: btrfs-tools debootstrap lxc rinse Recommended packages: aufs-tools The following packages will be REMOVED: docker-engine The following NEW packages will be installed: docker.</description>
      <content>&lt;h3 id=&#34;docker-설치&#34;&gt;Docker 설치&lt;/h3&gt;
&lt;p&gt;설치 환경 : Mint 17 (Ubuntu)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; sudo apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;get install docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; sudo apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;get install docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io
&lt;span style=&#34;color:#66d9ef&#34;&gt;Reading&lt;/span&gt; package lists&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Done&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Building&lt;/span&gt; dependency tree       
&lt;span style=&#34;color:#66d9ef&#34;&gt;Reading&lt;/span&gt; state information&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Done&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;The&lt;/span&gt; following package was automatically installed &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; is no longer &lt;span style=&#34;color:#e6db74&#34;&gt;required&lt;/span&gt;:
  python3&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pyqt4
&lt;span style=&#34;color:#66d9ef&#34;&gt;Use&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apt-get autoremove&amp;#39;&lt;/span&gt; to remove it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Suggested&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;packages&lt;/span&gt;:
  btrfs&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tools debootstrap lxc rinse
&lt;span style=&#34;color:#66d9ef&#34;&gt;Recommended&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;packages&lt;/span&gt;:
  aufs&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tools
&lt;span style=&#34;color:#66d9ef&#34;&gt;The&lt;/span&gt; following packages will be &lt;span style=&#34;color:#e6db74&#34;&gt;REMOVED&lt;/span&gt;:
  docker&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;engine
&lt;span style=&#34;color:#66d9ef&#34;&gt;The&lt;/span&gt; following &lt;span style=&#34;color:#66d9ef&#34;&gt;NEW&lt;/span&gt; packages will be &lt;span style=&#34;color:#e6db74&#34;&gt;installed&lt;/span&gt;:
  docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; upgraded, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; newly installed, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; to remove &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; upgraded&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Need&lt;/span&gt; to get &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; B&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;749&lt;/span&gt; kB of archives&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;After&lt;/span&gt; this operation, &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MB&lt;/span&gt; disk space will be freed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Do&lt;/span&gt; you want to continue? &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Y&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;Reading&lt;/span&gt; database &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;184935&lt;/span&gt; files &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; directories currently installed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;Removing&lt;/span&gt; docker&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;engine (&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;ce&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;ubuntu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;trusty) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
docker stop&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;waiting
&lt;span style=&#34;color:#66d9ef&#34;&gt;Processing&lt;/span&gt; triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; man&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;db (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ubuntu1) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Selecting&lt;/span&gt; previously unselected package docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;Reading&lt;/span&gt; database &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;184733&lt;/span&gt; files &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; directories currently installed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;Preparing&lt;/span&gt; to unpack &lt;span style=&#34;color:#f92672&#34;&gt;.../&lt;/span&gt;docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io_1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;dfsg1&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ubuntu4&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;_amd64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deb &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Unpacking&lt;/span&gt; docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;dfsg1&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ubuntu4&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Processing&lt;/span&gt; triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; man&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;db (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ubuntu1) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Processing&lt;/span&gt; triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ureadahead (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Setting&lt;/span&gt; up docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;io (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;dfsg1&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ubuntu4&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Installing&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; version of config file &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/ini&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Installing&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; version of config file &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;bash_completion&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;d&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Installing&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; version of config file &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Installing&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; version of config file &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/ini&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conf &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
docker start&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;running, process &lt;span style=&#34;color:#ae81ff&#34;&gt;2405&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Processing&lt;/span&gt; triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ureadahead (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;https://docs.docker.com/engine/installation/&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Docker 옵션</title>
      <link>/posts/docker/2017-04-25-docker-options/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/docker/2017-04-25-docker-options/</guid>
      <description>Docker 옵션 $&amp;gt; docker docker info Containers: 1 Images: 3 Storage Driver: aufs Root Dir: /var/lib/docker/aufs Backing Filesystem: extfs Dirs: 5 Dirperm1 Supported: false Execution Driver: native-0.2 Kernel Version: 3.13.0-24-generic Operating System: Ubuntu 14.04.3 LTS CPUs: 8 Total Memory: 15.56 GiB Name: geeksaga ID: LABC:D6KO:QT4K:WOXZ:YLE4:CPBY:DFM2:2SKJ:A6ZG:MTLJ:M6NC:ANFW WARNING: No swap limit support Docker 설정 파일 /etc/default/docker
$&amp;gt; cat /etc/default/docker # Docker Upstart and SysVinit configuration file # Customize location of Docker binary (especially for development testing).</description>
      <content>&lt;h3 id=&#34;docker-옵션&#34;&gt;Docker 옵션&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; docker docker info
&lt;span style=&#34;color:#e6db74&#34;&gt;Containers&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;Images&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Storage&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Driver&lt;/span&gt;: aufs
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Root&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Dir&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;/var/&lt;/span&gt;lib&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;aufs
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Backing&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem&lt;/span&gt;: extfs
 &lt;span style=&#34;color:#e6db74&#34;&gt;Dirs&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Dirperm1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Supported&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Execution&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Driver&lt;/span&gt;: native&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;generic
&lt;span style=&#34;color:#66d9ef&#34;&gt;Operating&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;System&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Ubuntu&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LTS&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;CPUs&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Total&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GiB&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;Name&lt;/span&gt;: geeksaga
&lt;span style=&#34;color:#e6db74&#34;&gt;ID&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;LABC&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;D6KO&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;QT4K&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;WOXZ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;YLE4&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;CPBY&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;DFM2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SKJ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;A6ZG&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;MTLJ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;M6NC&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;ANFW&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;WARNING&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;No&lt;/span&gt; swap limit support&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;docker-설정-파일&#34;&gt;Docker 설정 파일&lt;/h3&gt;
&lt;p&gt;/etc/default/docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; cat &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;docker 
&lt;span style=&#34;color:#75715e&#34;&gt;# Docker Upstart and SysVinit configuration file&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Customize location of Docker binary (especially for development testing).&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#DOCKER=&amp;#34;/usr/local/bin/docker&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Use DOCKER_OPTS to modify the daemon startup options.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#DOCKER_OPTS=&amp;#34;--dns 8.8.8.8 --dns 8.8.4.4&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If you need Docker to use an HTTP proxy, it can also be specified here.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#export http_proxy=&amp;#34;http://127.0.0.1:3128/&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# This is also a handy place to tweak where Docker&amp;#39;s temporary files go.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#export TMPDIR=&amp;#34;/mnt/bigdrive/docker-tmp&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;docker-image-경로-수정&#34;&gt;Docker Image 경로 수정&lt;/h3&gt;
&lt;p&gt;Docker 설정 파일에 추가 다음 옵션 추가.&lt;/p&gt;
&lt;p&gt;DOCKER_OPTS=&amp;quot;-g /home/docker&amp;quot;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; sudo stop docker
docker stop&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;waiting
$&amp;gt;  sudo start docker
docker start&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;running, process &lt;span style=&#34;color:#ae81ff&#34;&gt;5832&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; docker docker info
&lt;span style=&#34;color:#e6db74&#34;&gt;Containers&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;Images&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Storage&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Driver&lt;/span&gt;: aufs
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Root&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Dir&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;/home/&lt;/span&gt;docker&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;aufs
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Backing&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem&lt;/span&gt;: extfs
 &lt;span style=&#34;color:#e6db74&#34;&gt;Dirs&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;Dirperm1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Supported&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Execution&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Driver&lt;/span&gt;: native&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;generic
&lt;span style=&#34;color:#66d9ef&#34;&gt;Operating&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;System&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Ubuntu&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LTS&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;CPUs&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Total&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GiB&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;Name&lt;/span&gt;: geeksaga
&lt;span style=&#34;color:#e6db74&#34;&gt;ID&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;LABC&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;D6KO&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;QT4K&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;WOXZ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;YLE4&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;CPBY&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;DFM2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SKJ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;A6ZG&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;MTLJ&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;M6NC&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;ANFW&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;WARNING&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;No&lt;/span&gt; swap limit support&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>Strategy Pattern</title>
      <link>/posts/design-pattern/2017-01-10-strategy-pattern/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/design-pattern/2017-01-10-strategy-pattern/</guid>
      <description>###Strategy Pattern Strategy Pattern 은 알고리즘군을 정의하고 각각의 알고리즘 클래스 별로 캡슐화하여 동적으로 알고리즘을 변경할 수 있는 구조로된 패턴이다.</description>
      <content>&lt;p&gt;###Strategy Pattern
Strategy Pattern 은 알고리즘군을 정의하고 각각의 알고리즘 클래스 별로 캡슐화하여 동적으로 알고리즘을 변경할 수 있는 구조로된 패턴이다.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Design Pattern Catalog</title>
      <link>/posts/2017-01-09-pattern-index/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/2017-01-09-pattern-index/</guid>
      <description>(Object) Behavioral Patterns
  [Strategy Pattern]({% post_url design-pattern/2017-01-10-strategy-pattern %})
 클래스 내부의 알고리즘을 캡슐화한다.    [Template method Pattern]
  </description>
      <content>&lt;p&gt;(Object) Behavioral Patterns&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Strategy Pattern]({% post_url design-pattern/2017-01-10-strategy-pattern %})&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클래스 내부의 알고리즘을 캡슐화한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Template method Pattern]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>git 설정</title>
      <link>/posts/tools/2016-12-16-git-setting/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/posts/tools/2016-12-16-git-setting/</guid>
      <description>git config git config --global user.name &amp;#34;name&amp;#34; git config --global user.email &amp;#34;email address&amp;#34; 사용중인 gitconfig 기본 설정(~/.gitconfig)
[user] name = name email = email address [core] autocrlf = input eol = native [color] ui = auto [alias] tree = log --oneline --decorate --all --graph </description>
      <content>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;git config
git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;global user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;
git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;global user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email address&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;사용중인 gitconfig 기본 설정(~/.gitconfig)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name
	email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; email address
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;core&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	autocrlf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input
	eol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; native
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;color&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; auto
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;alias&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; log &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;oneline &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;decorate &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;all &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;graph&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>파이썬3 가상환경(venv) 설정</title>
      <link>/posts/python/2016-12-16-python3-venv-setting/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/posts/python/2016-12-16-python3-venv-setting/</guid>
      <description>Python virtualenv 를 사용하는 기본적인 목적은 프로젝트 별로 필요한 환경을 만들기 위해 사용한다.
virtualenv 설정 하기 Linux 계열 환경에서 Python3 이 설치 되어있을 경우 가상환경 설정은 다음과 같은 순서로 진행한다. 설정은 사용자 홈 디렉토리 밑에 설정하는 것으로 한다.
$&amp;gt; cd ~ $&amp;gt; mkdir dev_env $&amp;gt; python3 -m venv dev_env 설치된 가상환경을 이용하려면 해당 가상환경을 활성화해야 한다.
$&amp;gt; source ~/dev_env/bin/activate 가상환경을 종료하려면 가상머신을 비활성화 한다.
$&amp;gt; source ~/dev_env/bin/deactivate vritualenv 활용  virtualenv 환경에 설치된 package 목록 가져오기  $&amp;gt; pip freeze &amp;gt; requirements.</description>
      <content>&lt;p&gt;Python virtualenv 를 사용하는 기본적인 목적은 프로젝트 별로 필요한 환경을 만들기 위해 사용한다.&lt;/p&gt;
&lt;h3 id=&#34;virtualenv-설정-하기&#34;&gt;virtualenv 설정 하기&lt;/h3&gt;
&lt;p&gt;Linux 계열 환경에서 Python3 이 설치 되어있을 경우 가상환경 설정은 다음과 같은 순서로 진행한다.
설정은 사용자 홈 디렉토리 밑에 설정하는 것으로 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; cd &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;
$&amp;gt; mkdir dev_env
$&amp;gt; python3 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m venv dev_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설치된 가상환경을 이용하려면 해당 가상환경을 활성화해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; source &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev_env/&lt;/span&gt;bin&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;activate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;가상환경을 종료하려면 가상머신을 비활성화 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; source &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev_env/&lt;/span&gt;bin&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;deactivate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;vritualenv-활용&#34;&gt;vritualenv 활용&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;virtualenv 환경에 설치된 package 목록 가져오기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; pip freeze &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; requirements&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;freeze 옵션을 사용하면 현재 가상환경에 설치된 package 이름과 버전이 출력된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;click&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Flask&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
itsdangerous&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Jinja2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;MarkupSafe&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;
newrelic&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Werkzeug&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
wheel&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;새로운 virtualenv 환경에 필요한 package 설치하기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;$&amp;gt; pip install &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r requirements&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
    </item>
    
    <item>
      <title>파이썬 설치 및 설정</title>
      <link>/posts/python/2016-12-15-python-install/</link>
      <pubDate>Thu, 15 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/posts/python/2016-12-15-python-install/</guid>
      <description>python3 install for ubunto linux
apt-get install build-essential libbz2-dev libsqlite3-dev sqlite3
wget http://python.org/ftp/python/3.4.1/Python-3.4.1.tgz tar -xvzf Python-3.4.1.tgz cd Python-3.4.1
sudo apt-get install build-essential sudo apt-get install libreadline-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev
./configure -with-zlib=/usr/include &amp;ndash;prefix=/opt/python3.4.1 &amp;ndash;enable-shared
vi Modules/Setup.dist 213/SSL
wget https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea sudo sh setuptools-0.6c11-py2.7.egg
curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py sudo python get-pip.py
./configure &amp;ndash;prefix=$PYTHON_HOME make make test make install</description>
      <content>&lt;p&gt;python3 install for ubunto linux&lt;/p&gt;
&lt;p&gt;apt-get install build-essential libbz2-dev libsqlite3-dev sqlite3&lt;/p&gt;
&lt;p&gt;wget &lt;a href=&#34;http://python.org/ftp/python/3.4.1/Python-3.4.1.tgz&#34;&gt;http://python.org/ftp/python/3.4.1/Python-3.4.1.tgz&lt;/a&gt;
tar -xvzf Python-3.4.1.tgz
cd Python-3.4.1&lt;/p&gt;
&lt;p&gt;sudo apt-get install build-essential
sudo apt-get install libreadline-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev&lt;/p&gt;
&lt;p&gt;./configure -with-zlib=/usr/include &amp;ndash;prefix=/opt/python3.4.1 &amp;ndash;enable-shared&lt;/p&gt;
&lt;p&gt;vi Modules/Setup.dist  213/SSL&lt;/p&gt;
&lt;p&gt;wget &lt;a href=&#34;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&#34;&gt;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&lt;/a&gt;
sudo sh setuptools-0.6c11-py2.7.egg&lt;/p&gt;
&lt;p&gt;curl -O &lt;a href=&#34;https://raw.github.com/pypa/pip/master/contrib/get-pip.py&#34;&gt;https://raw.github.com/pypa/pip/master/contrib/get-pip.py&lt;/a&gt;
sudo python get-pip.py&lt;/p&gt;
&lt;p&gt;./configure &amp;ndash;prefix=$PYTHON_HOME
make
make test
make install&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
