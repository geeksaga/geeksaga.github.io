<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Try to write anyway</title>
    <link>https://geeksaga.com/categories/python/</link>
    <description>Recent content in python on Try to write anyway</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://geeksaga.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>파이썬3 가상환경(venv) 설정</title>
      <link>https://geeksaga.com/2016/12/%ED%8C%8C%EC%9D%B4%EC%8D%AC3-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDvenv-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://geeksaga.com/2016/12/%ED%8C%8C%EC%9D%B4%EC%8D%AC3-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDvenv-%EC%84%A4%EC%A0%95/</guid>
      <description>Python virtualenv 를 사용하는 기본적인 목적은 프로젝트 별로 필요한 환경을 만들기 위해 사용한다.
virtualenv 설정 하기 Linux 계열 환경에서 Python3 이 설치 되어있을 경우 가상환경 설정은 다음과 같은 순서로 진행한다. 설정은 사용자 홈 디렉토리 밑에 설정하는 것으로 한다.
$&amp;gt; cd ~ $&amp;gt; mkdir dev_env $&amp;gt; python3 -m venv dev_env 설치된 가상환경을 이용하려면 해당 가상환경을 활성화해야 한다.
$&amp;gt; source ~/dev_env/bin/activate 가상환경을 종료하려면 가상머신을 비활성화 한다.
$&amp;gt; source ~/dev_env/bin/deactivate vritualenv 활용 virtualenv 환경에 설치된 package 목록 가져오기 $&amp;gt; pip freeze &amp;gt; requirements.</description>
    </item>
    
    <item>
      <title>파이썬 설치 및 설정</title>
      <link>https://geeksaga.com/2016/12/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Thu, 15 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://geeksaga.com/2016/12/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</guid>
      <description>python3 install for ubunto linux
apt-get install build-essential libbz2-dev libsqlite3-dev sqlite3
wget http://python.org/ftp/python/3.4.1/Python-3.4.1.tgz tar -xvzf Python-3.4.1.tgz cd Python-3.4.1
sudo apt-get install build-essential sudo apt-get install libreadline-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev
./configure -with-zlib=/usr/include &amp;ndash;prefix=/opt/python3.4.1 &amp;ndash;enable-shared
vi Modules/Setup.dist 213/SSL
wget https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea sudo sh setuptools-0.6c11-py2.7.egg
curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py sudo python get-pip.py
./configure &amp;ndash;prefix=$PYTHON_HOME make make test make install</description>
    </item>
    
  </channel>
</rss>
