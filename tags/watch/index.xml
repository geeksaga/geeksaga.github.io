<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>watch on Terminal</title>
    <link>/tags/watch/</link>
    <description>Recent content in watch on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/watch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>watch command</title>
      <link>/posts/linux/command/2020-08-03-watch/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-03-watch/</guid>
      <description>linux의 watch 명령어는 특정 명령어를 반복하여 실행할 때 유용한 명령어 입니다.
$&amp;gt; watch -n 3 df 간단한 쉘스크립트를 이용해도 비슷한 효과를 볼 수 있습니다.
$&amp;gt; while true \n do \n df \n sleep 3 \n done help watch $&amp;gt; watch --help Usage: watch [options] command Options: -b, --beep beep if command has a non-zero exit -c, --color interpret ANSI color and style sequences -d, --differences[=&amp;lt;permanent&amp;gt;] highlight changes between updates -e, --errexit exit if command has a non-zero exit -g, --chgexit exit when output from command changes -n, --interval &amp;lt;secs&amp;gt; seconds to wait between updates -p, --precise attempt run command in precise intervals -t, --no-title turn off header -x, --exec pass command to exec instead of &amp;#34;sh -c&amp;#34; -h, --help display this help and exit -v, --version output version information and exit For more details see watch(1 Usage: uptime [options] Options: -p, --pretty show uptime in pretty format -h, --help display this help and exit -s, --since system up since -V, --version output version information and exit For more details see uptime(1).</description>
      <content>&lt;p&gt;linux의 watch 명령어는 특정 명령어를 반복하여 실행할 때 유용한 명령어 입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;간단한 쉘스크립트를 이용해도 비슷한 효과를 볼 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
df &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-watch&#34;&gt;help watch&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; watch --help

Usage:
 watch &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; command

Options:
  -b, --beep             beep &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; command has a non-zero exit
  -c, --color            interpret ANSI color and style sequences
  -d, --differences&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;&amp;lt;permanent&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                         highlight changes between updates
  -e, --errexit          exit &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; command has a non-zero exit
  -g, --chgexit          exit when output from command changes
  -n, --interval &amp;lt;secs&amp;gt;  seconds to wait between updates
  -p, --precise          attempt run command in precise intervals
  -t, --no-title         turn off header
  -x, --exec             pass command to exec instead of &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sh -c&amp;#34;&lt;/span&gt;

 -h, --help     display this help and exit
 -v, --version  output version information and exit

For more details see watch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

Usage:
 uptime &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

Options:
 -p, --pretty   show uptime in pretty format
 -h, --help     display this help and exit
 -s, --since    system up since
 -V, --version  output version information and exit

For more details see uptime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-watch&#34;&gt;tldr watch&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr watch

  watch

  Execute a command repeatedly, and monitor the output in full-screen mode.

  - Monitor files in the current directory:
    watch ls

  - Monitor disk space and highlight the changes:
    watch -d df

  - Monitor &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt; processes, refreshing every &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; seconds:
    watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ps aux | grep node&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
  </channel>
</rss>
