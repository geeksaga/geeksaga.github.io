<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Terminal</title>
    <link>/tags/programming/</link>
    <description>Recent content in programming on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust Programming Language install</title>
      <link>/posts/rust/2020-07-16-rust-install/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/rust/2020-07-16-rust-install/</guid>
      <description>rustup을 이용하여 Rust 설치하기. 다음 명령어를 통해 rustup을 먼저 설치 한다.
curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 이미 설치되어 있는 경우에는 rust update 명령어를 통해 최신 버전으로 업데이트 한다.
λ rustup -V rustup 1.21.1 (7832b2ebe 2019-12-20) λ rustup update stable info: syncing channel updates for &amp;#39;stable-x86_64-unknown-linux-gnu&amp;#39; info: latest update on 2020-06-18, rust version 1.44.1 (c7087fe00 2020-06-17) info: downloading component &amp;#39;rustc&amp;#39; 60.3 MiB / 60.3 MiB (100 %) 10.7 MiB/s in 5s ETA: 0s info: downloading component &amp;#39;rust-std&amp;#39; 17.</description>
      <content>&lt;h1 id=&#34;rustup을-이용하여-rust-설치하기&#34;&gt;rustup을 이용하여 Rust 설치하기.&lt;/h1&gt;
&lt;p&gt;다음 명령어를 통해 rustup을 먼저 설치 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;curl --proto &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이미 설치되어 있는 경우에는 &lt;code&gt;rust update&lt;/code&gt; 명령어를 통해 최신 버전으로 업데이트 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ rustup -V
rustup 1.21.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7832b2ebe 2019-12-20&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

λ rustup update stable
info: syncing channel updates &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stable-x86_64-unknown-linux-gnu&amp;#39;&lt;/span&gt;
info: latest update on 2020-06-18, rust version 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
 60.3 MiB /  60.3 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  10.7 MiB/s in  5s ETA:  0s
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
 17.7 MiB /  17.7 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  10.3 MiB/s in  1s ETA:  0s
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: downloading component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
 12.2 MiB /  12.2 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   5.3 MiB/s in  1s ETA:  0s
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: removing previous version of component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rustc&amp;#39;&lt;/span&gt;
 60.3 MiB /  60.3 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  14.9 MiB/s in  4s ETA:  0s
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-std&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cargo&amp;#39;&lt;/span&gt;
info: installing component &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rust-docs&amp;#39;&lt;/span&gt;
 12.2 MiB /  12.2 MiB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; %&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   9.1 MiB/s in  1s ETA:  0s

  stable-x86_64-unknown-linux-gnu updated - rustc 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;from rustc 1.37.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;eae3437df 2019-08-13&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;

info: checking &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; self-updates
info: downloading self-update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;현재 기준으로 최신 Stable version은 1.44.1 버전이다.&lt;/p&gt;
&lt;p&gt;설정 및 설치가 잘되었는지 확인 해본다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ rustc --version
rustc 1.44.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c7087fe00 2020-06-17&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;첫 번째 rust 프로그램인 hello world를 작성해서 설치 및 설정을 확인해 보자.&lt;/p&gt;
&lt;p&gt;WORKSPACE를 하나 만들어 주고 hello.rs 파일을 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    println&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;);
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;rustc&lt;/code&gt; 명령어를 이용하여 컴파일 할 경우 별도 옵션을 지정하지 않으면 실행 파일 이름은 소스 파일과 동일한 이름으로 만들어진다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;~/workspace/rust_workspace
λ rustc hello.rs 

~/workspace/rust_workspace
λ ll
Permissions Size User   Date Modified Name
.rwxrwxr-x  2.9M geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Jul 16:31  hello
.rw-rw-r--    &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt; geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Jul 16:31  hello.rs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;생성된 실행 파일을 실행하면 결과를 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;λ ./hello    
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Home&#34;&gt;Rust Home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Go lang install</title>
      <link>/posts/go/2018-06-12-go-install/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/go/2018-06-12-go-install/</guid>
      <description>Go lang 다운로드 및 설치하기. 먼저 Download Go{:target=&amp;ldquo;blank&amp;rdquo;} 에서 해당 환경에 맞는 Go 버전을 다운로드하여 설치한다.
현재 기준으로 최신 Stable version은 1.10.3 버전이다.
Linux를 기준으로 설치 방법은 다운받은 Go 파일의 압축을 해제하기만 하면 된다. 시작하기 가이드에 있는 경로에 설치 하기 위해 다음 명령어를 이용하여 압축을 해지한다.
sudo tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz chown -R [OWNER]:[GROUP] go 설치후 환경변수에 패스를 등록해준다.
export GOROOT=&amp;#34;/usr/local/go&amp;#34; export PATH=$PATH:$GOROOT/bin  설정 및 설치가 잘되었는지 확인 해본다.</description>
      <content>&lt;h1 id=&#34;go-lang-다운로드-및-설치하기&#34;&gt;Go lang 다운로드 및 설치하기.&lt;/h1&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Download Go&#34;&gt;Download Go&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;} 에서 해당 환경에 맞는 Go 버전을 다운로드하여 설치한다.&lt;/p&gt;
&lt;p&gt;현재 기준으로 최신 Stable version은 1.10.3 버전이다.&lt;/p&gt;
&lt;p&gt;Linux를 기준으로 설치 방법은 다운받은 Go 파일의 압축을 해제하기만 하면 된다.
시작하기 가이드에 있는 경로에 설치 하기 위해 다음 명령어를 이용하여 압축을 해지한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz
chown -R &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OWNER&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;GROUP&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설치후 환경변수에 패스를 등록해준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;export GOROOT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/go&amp;#34;&lt;/span&gt;
export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PATH:$GOROOT/bin &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설정 및 설치가 잘되었는지 확인 해본다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go version 
go version go1.10.3 linux/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;첫 번째 go 프로그램인 hello world를 작성해서 설치 및 설정을 확인해 보자.
go 소스를 작성하기 전에 workspace 디렉토리를 생성한다.
기본 workspace는 $HOME/go를 인식한다.
기본 workspace를 변경하려면 환경변수에 GOPATH를 등록해주면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;export &lt;span style=&#34;color:#66d9ef&#34;&gt;GOPATH&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/home/&lt;/span&gt;go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;$GOPATH로 이동하여 src/hello.go 파일을 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, world\n&amp;#34;&lt;/span&gt;)

}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;go build 명령어를 이용하여 빌드 할 경우 빌드 파일 이름은 소스 파일이 있는 현재 디렉토리 이름으로 만들어진다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ pwd 
/home/go/src
$ go build
$ ls -al
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 src &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;빌드할 파일을 직접 입력하거나 -o 옵션을 이용해서 output 파일 이름을 지정하면
파일 이름과 같은 실행 파일 또는 원하는 실행 파일 이름으로 빌드가 된다.&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go build hello.go
$ ls -al
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 hello 
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go
$ go build -o hell
$ ls -al
-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go &lt;span style=&#34;color:#ae81ff&#34;&gt;2020012&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:01 hell 
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; go go      &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 11:00 hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;생성된 실행 파일을 실행하면 결과를 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./hello
hello, world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34; title=&#34;Getting Started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Setting GOPATH][2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}
[2]: &lt;a href=&#34;https://github.com/golang/go/wiki/SettingGOPATH&#34;&gt;https://github.com/golang/go/wiki/SettingGOPATH&lt;/a&gt; &amp;ldquo;Setting GOPATH&amp;rdquo;
{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
