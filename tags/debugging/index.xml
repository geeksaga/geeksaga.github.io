<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debugging on Terminal</title>
    <link>/tags/debugging/</link>
    <description>Recent content in Debugging on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Feb 2020 17:39:30 +0000</lastBuildDate><atom:link href="/tags/debugging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visual Studio Code for TypeScript</title>
      <link>/posts/typescript/2020-02-24-typescript-idea-visualstudiocode/</link>
      <pubDate>Mon, 24 Feb 2020 17:39:30 +0000</pubDate>
      
      <guid>/posts/typescript/2020-02-24-typescript-idea-visualstudiocode/</guid>
      <description>프로그래밍을 할 때 개발 환경 구성은 매우 중요하다.
특히나 처음 접하는 언어를 이용해서 프로그래밍을 할 때 도움이 되는 툴을 선택하는 건 쉽지(?) 않은 문제이다.
여기에서는 마이크로소프트에서 만든 개발 환경으로 윈도우, 리눅스, 맥에서 동작하며, 많이 사용되고 무료로 사용할 수 있는 Visual Studio Code{:target=&amp;ldquo;blank&amp;rdquo;}를 이용하여 TypeScript개발 환경을 구성해 본다.
준비사항 다음 프로그램들이 설치되어 있어야 한다.
 [Visual Studio Code](https://code.visual studio.com/ &amp;ldquo;Visual Studio Code&amp;rdquo;){:target=&amp;ldquo;blank&amp;rdquo;} Node{:target=&amp;ldquo;blank&amp;rdquo;} TypeScript{:target=&amp;ldquo;blank&amp;rdquo;}  비주얼 스튜디오 코드 둘러보기 소스 코드를 저장할 디렉터리를 만들고 비주얼 스튜디어 코드를 실행하면 명령 줄에서 코드를 실행 할 수 있다.</description>
      <content>&lt;p&gt;프로그래밍을 할 때 개발 환경 구성은 매우 중요하다.&lt;/p&gt;
&lt;p&gt;특히나 처음 접하는 언어를 이용해서 프로그래밍을 할 때 도움이 되는 툴을 선택하는 건 쉽지(?) 않은 문제이다.&lt;/p&gt;
&lt;p&gt;여기에서는 마이크로소프트에서 만든 개발 환경으로 윈도우, 리눅스, 맥에서 동작하며, 많이 사용되고 무료로 사용할 수 있는 &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code&#34;&gt;Visual Studio Code&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}를 이용하여 TypeScript개발 환경을 구성해 본다.&lt;/p&gt;
&lt;h2 id=&#34;준비사항&#34;&gt;준비사항&lt;/h2&gt;
&lt;p&gt;다음 프로그램들이 설치되어 있어야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Visual Studio Code](&lt;a href=&#34;https://code.visual&#34;&gt;https://code.visual&lt;/a&gt; studio.com/ &amp;ldquo;Visual Studio Code&amp;rdquo;){:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/%C2%B7%22NodeJs.org%22&#34;&gt;Node&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/typescript/typescript-install/&#34; title=&#34;TypeScript&#34;&gt;TypeScript&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;비주얼-스튜디오-코드-둘러보기&#34;&gt;비주얼 스튜디오 코드 둘러보기&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224001.png&#34; alt=&#34;VisualStudioCode&#34;&gt;&lt;/p&gt;
&lt;p&gt;소스 코드를 저장할 디렉터리를 만들고 비주얼 스튜디어 코드를 실행하면 명령 줄에서 코드를 실행 할 수 있다.&lt;/p&gt;
&lt;p&gt;Ctrl + N으로 파일을 생성해 다음을 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello vscode&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ctrl + S로 파일을 &lt;em&gt;hello.ts&lt;/em&gt;로 저장한다.&lt;/p&gt;
&lt;p&gt;프로젝트를 빌드 하는 메뉴는 Terminal -&amp;gt; Run Build Task (Ctrl + Shift + B)이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224002.png&#34; alt=&#34;HelloVisualStudioCode&#34;&gt;&lt;/p&gt;
&lt;p&gt;프로젝트를 빌드하면 비주얼 스튜디오 코드는 정의된 빌드 작업이 없다는 메시지를 보여준다. &lt;a href=&#34;https://code.visualstudio.com/docs/editor/tasks&#34; title=&#34;Learn More&#34;&gt;Learn More&lt;/a&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
&lt;p&gt;hello.ts파일을 저장한 디렉터리에 타입스크립트 설정파일(tsconfig.json)이 없는 경우에는 다음 명령어를 통해 만들어 준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ tsc --init
message TS6071: Successfully created a tsconfig.json file.

❯ ll
total 12K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga 5.8K Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;tsc &amp;ndash;init 명령을 통해 tsconfig.json 파일을 만들어 주면 현재 디렉터리에 두개의 파일이 있을 것이다.&lt;/p&gt;
&lt;p&gt;이제 다시 프로젝트를 빌드하면 빌드 작업 구성을 위한 옵션이 제공된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224003.png&#34; alt=&#34;SelectTheBuildTaskToRun&#34;&gt;&lt;/p&gt;
&lt;p&gt;제공된 옵션 중에 tsc: build -tsconfig.json을 선택하면 .vscode 디렉터리가 만들어지고 해당 디렉터리 밑에 task.json 파일을 생성하고 파일을 열어준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224004.png&#34; alt=&#34;task.json&#34;&gt;&lt;/p&gt;
&lt;p&gt;현재 디렉터리 내용은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ ls -alR           
.:
total &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:25 ..
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;5903&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .vscode

./.vscode:
total &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 .
drwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; geeksaga geeksaga &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 ..
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga  &lt;span style=&#34;color:#ae81ff&#34;&gt;358&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:42 tasks.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 다시 빌드하면 hello.js 파일이 생성된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;❯ ll
total 16K
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 17:05 hello.js
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:27 hello.ts
-rw-rw-r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; geeksaga geeksaga 5.8K Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; 16:10 tsconfig.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;빌드가 성공적으로 끝났으니 이제 해당 파일을 실행해 보자.&lt;/p&gt;
&lt;p&gt;Debug -&amp;gt; Start Without Debugging(Ctrl _+ F5)를 통해 실행 해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224005.png&#34; alt=&#34;Start&#34;&gt;&lt;/p&gt;
&lt;p&gt;Start Without Debugging 메뉴를 실행하면 hello.js를 실행 할 수 있는 목록이 보이는데 Node.js 옵션을 선택하면 경고창이 뜬다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224006.png&#34; alt=&#34;launch.json&#34;&gt;&lt;/p&gt;
&lt;p&gt;메시지를 보면 hello.ts를 실행할 프로그램이 없다는 경고 메시지가 보인다.&lt;/p&gt;
&lt;p&gt;Open Launch.json 버튼을 클릭하면 .vscod 디렉터리에 launch.json 파일을 생성하고 파일을 열어준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224008.png&#34; alt=&#34;Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;launch.json 파일의 program 옵션을 &amp;ldquo;${workspaceFolder}/hello.js&amp;quot;로 변경하고 Ctrl + F5를 누르면 hello.js가 노드로 실행되고 DEBUG CONSOLE 부분에 실행 결과가 보인다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224008.png&#34; alt=&#34;Run&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;디버깅&#34;&gt;디버깅&lt;/h2&gt;
&lt;p&gt;비주얼 스튜디어에는 타입스크립트 프로젝트 디버깅 툴이 내장되어 있다.&lt;/p&gt;
&lt;p&gt;Debug -&amp;gt; Start Debugging(F5)를 통해 디버깅을 실행 해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/assets/images/20200224007.png&#34; alt=&#34;debug&#34;&gt;&lt;/p&gt;
&lt;p&gt;(작성중)&lt;/p&gt;
&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/tasks&#34; title=&#34;Learn More&#34;&gt;Learn More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{:target=&amp;ldquo;blank&amp;rdquo;}&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
