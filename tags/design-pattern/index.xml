<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design pattern on Terminal</title>
    <link>/tags/design-pattern/</link>
    <description>Recent content in design pattern on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Strategy Pattern</title>
      <link>/posts/design-pattern/2017-01-10-strategy-pattern/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/design-pattern/2017-01-10-strategy-pattern/</guid>
      <description>###Strategy Pattern Strategy Pattern 은 알고리즘군을 정의하고 각각의 알고리즘 클래스 별로 캡슐화하여 동적으로 알고리즘을 변경할 수 있는 구조로된 패턴이다.</description>
      <content>&lt;p&gt;###Strategy Pattern
Strategy Pattern 은 알고리즘군을 정의하고 각각의 알고리즘 클래스 별로 캡슐화하여 동적으로 알고리즘을 변경할 수 있는 구조로된 패턴이다.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Design Pattern Catalog</title>
      <link>/posts/2017-01-09-pattern-index/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/2017-01-09-pattern-index/</guid>
      <description>(Object) Behavioral Patterns
  [Strategy Pattern]({% post_url design-pattern/2017-01-10-strategy-pattern %})
 클래스 내부의 알고리즘을 캡슐화한다.    [Template method Pattern]
  </description>
      <content>&lt;p&gt;(Object) Behavioral Patterns&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Strategy Pattern]({% post_url design-pattern/2017-01-10-strategy-pattern %})&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클래스 내부의 알고리즘을 캡슐화한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Template method Pattern]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
