<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xargs on Terminal</title>
    <link>/tags/xargs/</link>
    <description>Recent content in xargs on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/xargs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xargs command</title>
      <link>/posts/linux/command/2020-08-05-xargs/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/linux/command/2020-08-05-xargs/</guid>
      <description>linux의 xargs 명령어는 출력된 결과를 인자값으로 이용하여 다른 명령어를 활용할 수 있게 만들어 주는 명령어입니다.
$&amp;gt; find /etc -name &amp;#34;*.conf&amp;#34; | xargs ls -l 위 명령어는 /etc 경로 밑에 있는 .conf로 끝나는 모든 파일을 찾은 다음 파이프(|)를 통해 xargs에 인자값으로 넘겨 주고 ls -l 명령어를 통해서 출력하도록 하는 조합입니다.
응용으로 다음 처럼 특정 파일들만 찾은 후에 파일을 압축하는데 사용할 수도 있습니다.
$&amp;gt; find ~/Downloads -name &amp;#34;*.jpg&amp;#34; -type f | xargs tar -cvzf jpg-images.</description>
      <content>&lt;p&gt;linux의 &lt;code&gt;xargs&lt;/code&gt; 명령어는 출력된 결과를 인자값으로 이용하여 다른 명령어를 활용할 수 있게 만들어 주는 명령어입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find /etc -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.conf&amp;#34;&lt;/span&gt; | xargs ls -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 명령어는 &lt;code&gt;/etc&lt;/code&gt; 경로 밑에 있는 &lt;code&gt;.conf&lt;/code&gt;로 끝나는 모든 파일을 찾은 다음 파이프(&lt;code&gt;|&lt;/code&gt;)를 통해 &lt;code&gt;xargs&lt;/code&gt;에 인자값으로 넘겨 주고 &lt;code&gt;ls -l&lt;/code&gt; 명령어를 통해서 출력하도록 하는 조합입니다.&lt;/p&gt;
&lt;p&gt;응용으로 다음 처럼 특정 파일들만 찾은 후에 파일을 압축하는데 사용할 수도 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; find ~/Downloads -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.jpg&amp;#34;&lt;/span&gt; -type f | xargs tar -cvzf jpg-images.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;help-xargs&#34;&gt;help xargs&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; xargs --help
Usage: xargs &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;... COMMAND &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INITIAL-ARGS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...
Run COMMAND with arguments INITIAL-ARGS and more arguments read from input.

Mandatory and optional arguments to long options are also
mandatory or optional &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the corresponding short option.
  -0, --null                   items are separated by a null, not whitespace;
                                 disables quote and backslash processing and
                                 logical EOF processing
  -a, --arg-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FILE          read arguments from FILE, not standard input
  -d, --delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CHARACTER    items in input stream are separated by CHARACTER,
                                 not by whitespace; disables quote and backslash
                                 processing and logical EOF processing
  -E END                       set logical EOF string; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; END occurs as a line
                                 of input, the rest of the input is ignored
                                 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ignored &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; -0 or -d was specified&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -e, --eof&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;END&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;              equivalent to -E END &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; END is specified;
                                 otherwise, there is no end-of-file string
  -I R                         same as --replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;R
  -i, --replace&lt;span style=&#34;color:#f92672&#34;&gt;[=&lt;/span&gt;R&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;            replace R in INITIAL-ARGS with names read
                                 from standard input; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; R is unspecified,
                                 assume &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
  -L, --max-lines&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-LINES    use at most MAX-LINES non-blank input lines per
                                 command line
  -l&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;MAX-LINES&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                similar to -L but defaults to at most one non-
                                 blank input line &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; MAX-LINES is not specified
  -n, --max-args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-ARGS      use at most MAX-ARGS arguments per command line
  -P, --max-procs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-PROCS    run at most MAX-PROCS processes at a time
  -p, --interactive            prompt before running commands
      --process-slot-var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;VAR   set environment variable VAR in child processes
  -r, --no-run-if-empty        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there are no arguments, &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not run COMMAND;
                                 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; this option is not given, COMMAND will be
                                 run at least once
  -s, --max-chars&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MAX-CHARS    limit length of command line to MAX-CHARS
      --show-limits            show limits on command-line length
  -t, --verbose                print commands before executing them
  -x, --exit                   exit &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;see -s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; is exceeded
      --help                   display this help and exit
      --version                output version information and exit

Please see also the documentation at http://www.gnu.org/software/findutils/.
You can report &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;and track progress on fixing&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; bugs in the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xargs&amp;#34;&lt;/span&gt;
program via the GNU findutils bug-reporting page at
https://savannah.gnu.org/bugs/?group&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;findutils or, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
you have no web access, by sending email to &amp;lt;bug-findutils@gnu.org&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tldr-xargs&#34;&gt;tldr xargs&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$&amp;gt; tldr xargs

  xargs

  Execute a command with piped arguments coming from another command, a file, etc.
  The input is treated as a single block of text and split into separate arguments on spaces, tabs, newlines and end-of-file.

  - Main usage pattern:
    arguments_source | xargs command

  - Delete all files with a .backup extension. -print0 on find uses a null character to split the files, and -0 changes the delimiter to the null character &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;useful &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s whitespace in filenames):
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    find . -name &amp;#39;&lt;/span&gt;*.backup&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; -print0 | xargs -0 rm -v

  - Execute the command once &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each input line, replacing any occurrences of the placeholder &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;here marked as _&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; with the input line:
    arguments_source | xargs -I _ command _ optional_extra_arguments

  - Parallel runs of up to max-procs processes at a time; the default is 1. If max-procs is 0, xargs will run as many processes as possible at a time:
    arguments_source | xargs -P max-procs command
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
  </channel>
</rss>
